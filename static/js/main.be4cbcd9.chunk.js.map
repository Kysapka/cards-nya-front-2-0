{"version":3,"sources":["n1-main/m2-bll/ErrorReducer.ts","n1-main/m3-dal/apiConfig/index.ts","n1-main/m3-dal/API.ts","n2-features/f0-test/Profile/Profile-Reducer.tsx","n1-main/m2-bll/app-reducer.ts","n1-main/m2-bll/AppThunks.ts","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f0-test/Demonstration/Demonstration.tsx","n1-main/m1-ui/common/assets/Rocket.jpg","n1-main/m1-ui/routes/consts.ts","n2-features/f0-test/modalWindow/ModaInfo.tsx","n2-features/f0-test/modalWindow/ModalError.tsx","n2-features/f0-test/Registration/TextField.tsx","n2-features/f0-test/Registration/Registration.tsx","n1-main/m1-ui/common/Loader.tsx","n2-features/f0-test/EditableSpan/EditableSpan.tsx","n2-features/f0-test/LogOut/LogOutThunk.ts","n2-features/f0-test/Profile/Profile.tsx","n2-features/f0-test/Login/Login.tsx","n2-features/f0-test/Login/LoginReducer.tsx","n2-features/f0-test/Login/LoginContainer.tsx","n2-features/f0-test/ForgetPassword/ForgetPassReducer.ts","n2-features/f0-test/ForgetPassword/ForgetPassword.tsx","n2-features/f0-test/ForgetPassword/ForgetPasswordContainer.tsx","n2-features/f0-test/NotFound/NotFound.tsx","n2-features/f0-test/RecoveryPass/RecoveryPassword.tsx","n2-features/f0-test/RecoveryPass/RecoveryPasswordReducer.ts","n2-features/f0-test/RecoveryPass/RecoveryPasswordContainer.tsx","n2-features/f0-test/NewPassword/NewPassword.tsx","n2-features/f0-test/Registration/RegistrationReducer.tsx","n2-features/f0-test/Registration/RegistrationContainer.tsx","n2-features/f1-table/packs/CardsPackAPI.ts","n2-features/f1-table/packs/consts.ts","n2-features/f1-table/packs/PacksReducer.tsx","n2-features/f1-table/packs/CardPacksThunk.ts","n2-features/f1-table/packs/CardTableModel.tsx","n2-features/f1-table/packs/pagination/Pagination.tsx","n2-features/f1-table/packs/pagination/createPage.ts","n2-features/f1-table/packs/TableCardPacks.tsx","n2-features/f1-table/packs/CardPacksContainer.tsx","n2-features/f1-table/packs/CustomRequestSettingsHook.ts","n2-features/f1-table/packs/CustomUseDebaunceHook.tsx","n1-main/m1-ui/routes/AppRoutes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","reportWebVitals.ts","index.tsx","n1-main/m1-ui/header/Header.module.css","n2-features/f0-test/Profile/profile-style.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css"],"names":["initErrorState","Error","textError","Info","textInfo","setError","type","payload","setInfo","axiosInst","axios","create","baseURL","withCredentials","API","updateAvatar","userName","avatarUrl","put","name","avatar","updateUserName","getAuth","post","login","params","logout","delete","forgetPassword","email","from","message","changePasswordOnForget","password","token","resetPasswordToken","LOG_OUT","initProfileState","_id","undefined","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","deviceTokens","tokenDeathTime","resetPasswordTokenDeathTime","profileAction","param","data","changeUserNameTC","dispatch","then","res","authMeThunk","catch","err","console","dir","SET_AUTH","SET_APP_INITIALIZATE","initAppState","isLoading","isAppInitializated","isAuth","setAppInitializate","preloaderToggle","setAuth","isAxiosError","response","SuperButton","red","className","restProps","finalClassName","s","default","button","Demonstration","LOGIN_ROUTE","REG_ROUTE","PROFILE_ROUTE","RECOVERY_PASS_ROUTE","NEW_PASS_ROUTE","ModalInfo","props","useDispatch","Modal","show","Header","closeButton","Title","Body","text","Footer","Button","variant","onClick","ModalError","React","memo","handleClose","onHide","style","color","TextField","label","useField","field","meta","htmlFor","touched","autoComplete","component","Registration","to","initialValues","confirmPassword","validationSchema","SignupSchema","onSubmit","values","callback","regState","src","rocketImg","alt","Loader","height","EditableSpan","useState","title","setTitle","editMode","setEditMode","offEditMode","thunk","autoFocus","value","onKeyPress","e","key","onBlur","onChange","currentTarget","onDoubleClick","LogOut","Profile","profileState","useSelector","state","profile","app","profileContainer","avatarContainer","boxAvatar","boxUploadButton","uploadButton","event","files","reader","FileReader","onload","toJSON","addAvatarTC","target","result","readAsDataURL","descriptionContainer","descriptionBox","titleName","description","width","Login","margin","FormCheckInput","marginLeft","display","initLoginState","isLogin","yup","required","min","LoginContainer","initRecoveryState","toggle","SetEmailAction","SetTooglMailAction","ForgetPassword","id","ForgetPasswordContainer","recovereState","resp","info","RecoveryPassThunk","NotFound","RecoveryPassword","initRecoveryPasswordState","oneOf","RecoveryPasswordContainer","useParams","useEffect","setTokenAction","recoveryPasswordThunk","NewPassword","REGISTRATION","initRegistrationState","RegistrationThunk","RegistrationContainer","registration","cardsPack","path","grade","shots","rating","deckCover","private","cardPacksAPI","getPacksCommonRequestParams","get","SET_CARD_PACKS","initCardPacksState","cardPacks","user_id","user_name","cardsCount","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","disabled","SetDisabledPacksAC","getCardPacksTC","log","CardTableModel","searchValue","useRef","ChangeHandler","current","onClickHandler","newCardsPack","i","render","d","borderRadius","padding","placeholder","DeletPackAC","deletedCardsPack","PaginationComponent","activePage","pageCardsTotal","totalCards","items","pagesItem","pagesTotalCount","activPage","push","createPages","Math","ceil","Pagination","map","Item","active","TableCardPacks","loading","model","headerStyle","tableStyle","rowsStyle","rowStyle","flexFlow","alignItems","justifyContent","border","m","index","dataItem","dataIndex","modelIndex","CardPacksContainer","userId","searchedPackNameValue","setSearchedPackNameValue","searchedMinValue","setSearchedMinValue","searchedMaxValue","setSearchedMaxValue","currentPage","setCurrentPage","setPageCount","onlyMe","setOnlyMe","sortFilter","setSortFilter","usePacksRequestSettings","searchCommonRequestPack","setSearchCommonRequestPack","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","packName","max","sortPacks","Object","keys","length","changeValue","Number","Form","Group","marginTop","controlId","Control","checked","defaultChecked","Label","Range","publicRoutes","AppRoutes","element","variate","Link","flexDirection","dropdown","DropButton","middleLine","DropdownContent","Main","App","rootReducer","combineReducers","action","recoveryPasswordReducer","filter","store","createStore","applyMiddleware","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.be4cbcd9.chunk.js","sourcesContent":["export type initErrorStateType = {\n  textError: string;\n  textInfo: string;\n  Error: boolean;\n  Info: boolean;\n};\n\nconst initErrorState = {\n  Error: false,\n  textError: '',\n  Info: false,\n  textInfo: '',\n};\n\nexport const ErrorReducer = (\n  state: initErrorStateType = initErrorState,\n  action: ErrorActionTypes,\n): initErrorStateType => {\n  switch (action.type) {\n    case 'RESET_ERROR':\n    case 'RESET_All':\n    case 'RESET_INFO':\n    case 'SET_ERROR':\n    case 'SET_INFO':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setError = (Error: boolean, textError: string) =>\n  ({\n    type: 'SET_ERROR',\n    payload: { Error, textError },\n  } as const);\nexport const setInfo = (Info: boolean, textInfo: string) =>\n  ({\n    type: 'SET_INFO',\n    payload: { Info, textInfo },\n  } as const);\n\nexport const resetAll = () =>\n  ({\n    type: 'RESET_All',\n    payload: {\n      Error: false,\n      textError: '',\n      Info: false,\n      textInfo: '',\n    },\n  } as const);\nexport const resetError = () =>\n  ({\n    type: 'RESET_ERROR',\n    payload: {\n      Error: false,\n    },\n  } as const);\nexport const resetInfo = () =>\n  ({\n    type: 'RESET_INFO',\n    payload: {\n      Info: false,\n    },\n  } as const);\n\nexport type setErrorActionType = ReturnType<typeof setError>;\nexport type setInfoActionType = ReturnType<typeof setInfo>;\nexport type resetErrorActionType = ReturnType<typeof resetError>;\nexport type resetAllActionType = ReturnType<typeof resetAll>;\nexport type resetInfoActionType = ReturnType<typeof resetInfo>;\nexport type ErrorActionTypes =\n  | setErrorActionType\n  | setInfoActionType\n  | resetErrorActionType\n  | resetInfoActionType\n  | resetAllActionType;\n","import axios from 'axios';\n\nconst settings = {\n  withCredentials: true,\n  // headers: {\n  //   'API-KEY': process.env.REACT_APP_API_KEY,\n  // },\n};\n\nexport const axiosInst = axios.create({\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\n  // process.env.REACT_APP_BASE_URL,\n  ...settings,\n});\n","import axios, { AxiosResponse } from 'axios';\nimport { ProfileStateType } from 'n2-features/f0-test/Profile/Profile-Reducer';\n\nimport {\n  ForgetPasswordResp,\n  PostForgetPasswordReq,\n} from '../../n2-features/f0-test/ForgetPassword/TypeForForgetPasswordResponse';\nimport {\n  PostRecoveryPasswordReq,\n  RecoveryPasswordResp,\n} from '../../n2-features/f0-test/RecoveryPass/TypeRecoveryPasswordResponse';\n\nimport { axiosInst } from './apiConfig';\nimport {\n  ApiResponseTypes,\n  DeleteResponseType,\n  UserDataResponseType,\n} from './ApiResponseTypes';\n\nexport type LoginPostType = { email: string; password: string; rememberMe: boolean };\nexport const API = {\n  profile: {\n    updateAvatar: (userName: string, avatarUrl: string) =>\n      axiosInst.put('/auth/me', { name: userName, avatar: avatarUrl }),\n    updateUserName: (userName: string) =>\n      axiosInst.put<string, AxiosResponse<ProfileStateType>>('/auth/me', {\n        name: userName,\n      }),\n  },\n  app: {\n    getAuth: () =>\n      axiosInst.post<null, ApiResponseTypes<UserDataResponseType>>('auth/me', {}),\n  },\n  login: {\n    login: (params: LoginPostType) =>\n      axiosInst.post<LoginPostType, AxiosResponse<ProfileStateType>>(\n        'auth/login',\n        params,\n      ),\n  },\n  logout: {\n    logout: () => axiosInst.delete<{}, AxiosResponse<DeleteResponseType>>('auth/me', {}),\n  },\n  forgetPassword: {\n    forgetPassword: (email: string) =>\n      axios.post<PostForgetPasswordReq, AxiosResponse<ForgetPasswordResp>>(\n        'https://neko-back.herokuapp.com/2.0/auth/forgot',\n        {\n          email,\n          from: 'test-front-admin <ai73a@yandex.by>',\n          message:\n            '\\n<div style=\"background-color: lime; padding: 15px\">\\npassword recovery link: \\n<a href=\\'https://neko-back.herokuapp.com/2.0/#/set-new-password/$token$\\'>link</a>\\n</div>\\n',\n        },\n      ),\n    changePasswordOnForget: (password: string, token: string) =>\n      axiosInst.post<PostRecoveryPasswordReq, AxiosResponse<RecoveryPasswordResp>>(\n        'auth/set-new-password',\n        { resetPasswordToken: token, password },\n      ),\n  },\n  registration: (email: string, password: string) =>\n    axiosInst.post<\n      { email: string; password: string },\n      ApiResponseTypes<UserDataResponseType>\n    >('auth/register', { email, password }),\n};\n","import axios from 'axios';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { AppActionTypes } from '../../../n1-main/m2-bll/app-reducer';\nimport { authMeThunk } from '../../../n1-main/m2-bll/AppThunks';\nimport { ErrorActionTypes, setError } from '../../../n1-main/m2-bll/ErrorReducer';\nimport { API } from '../../../n1-main/m3-dal';\n\nconst LOG_OUT = '@@PROFILE_REDUCER/LOG_OUT_CLEAR_STATE';\n\nexport type ProfileStateType = {\n  _id: string | undefined;\n  email: string | null;\n  password: string | null;\n  rememberMe: boolean | null;\n  isAdmin: boolean | null;\n  name: string | null;\n  verified: boolean | null;\n  avatar?: string | null;\n  publicCardPacksCount: number | null;\n  token?: string | null;\n  tokenDeathTime?: number | null;\n  resetPasswordToken?: string | null;\n  resetPasswordTokenDeathTime?: number | null;\n  error?: string | null;\n  created: Date | null;\n  updated: Date | null;\n  deviceTokens: Array<DeviceTokenType> | null;\n};\ntype DeviceTokenType = {\n  _id: string;\n  device: string;\n  token: string;\n  tokenDeathTime: number;\n};\n\nconst initProfileState = {\n  _id: undefined,\n  email: null,\n  name: null,\n  avatar: null,\n  publicCardPacksCount: null, // количество колод\n  created: null,\n  updated: null,\n  isAdmin: null,\n  verified: null, // подтвердил ли почту\n  rememberMe: null,\n  error: null,\n  deviceTokens: null,\n  token: null,\n  tokenDeathTime: null,\n  resetPasswordToken: null,\n  resetPasswordTokenDeathTime: null,\n  password: null,\n};\n\nexport const ProfileReducer = (\n  // eslint-disable-next-line\n  state: ProfileStateType = initProfileState,\n  action: ProfileActionTypes,\n): ProfileStateType => {\n  switch (action.type) {\n    case 'PROFILE_CASE':\n      return {\n        ...state,\n        ...action.data,\n      };\n    case LOG_OUT:\n      return { ...initProfileState };\n    case 'ADD-AVATAR':\n      return { ...state, avatar: action.avatar };\n    case 'CHANGE-USERNAME':\n      return { ...state, name: action.userName };\n    default:\n      return state;\n  }\n};\n\nexport const profileAction = (param: {}) =>\n  ({ type: 'PROFILE_CASE', data: param } as const);\nexport const changeUserNameAC = (userName: string) =>\n  ({ type: 'CHANGE-USERNAME', userName } as const);\nexport const addAvatarAC = (avatar: string) => ({ type: 'ADD-AVATAR', avatar } as const);\nexport const addAvatarTC =\n  (userName: string, avatarUrl: string) =>\n  (\n    dispatch: ThunkDispatch<void, AppRootStateType, AppActionTypes | ErrorActionTypes>,\n  ) => {\n    API.profile\n      .updateAvatar(userName, avatarUrl)\n      .then(() => {\n        dispatch(authMeThunk());\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(setError(true, err.response.data.error));\n        }\n        dispatch(setError(true, err.toJSON().message));\n      });\n  };\nexport const changeUserNameTC =\n  (userName: string) =>\n  (dispatch: ThunkDispatch<void, AppRootStateType, AppActionTypes>) => {\n    API.profile\n      .updateUserName(userName)\n      .then(res => {\n        dispatch(authMeThunk());\n      })\n      .catch(err => {\n        console.dir({ ...err });\n      });\n  };\n\nexport const LogOutClearState = () => ({ type: LOG_OUT } as const);\n\nexport type AddAvatarType = ReturnType<typeof addAvatarAC>;\nexport type ProfileActionType = ReturnType<typeof profileAction>;\nexport type LogOutActionType = ReturnType<typeof LogOutClearState>;\nexport type ChangeUserNameType = ReturnType<typeof changeUserNameAC>;\ntype ProfileActionTypes =\n  | ProfileActionType\n  | LogOutActionType\n  | AddAvatarType\n  | ChangeUserNameType\n  | AppActionTypes;\n","export type initAppStateType = {\n  isLoading: boolean;\n  isAppInitializated: boolean;\n  isAuth: boolean;\n};\n\nconst SET_AUTH = '@@APP_REDUCER/SET_AUTH';\nconst SET_APP_INITIALIZATE = '@@APP_REDUCER/SET_APP_INITIALIZATE';\nconst PRELOADER_TOGGLE = '@@APP_REDUCER/PRELOADER_TOGGLE';\nconst initAppState = {\n  isLoading: false,\n  isAppInitializated: false,\n  isAuth: false,\n};\n\nexport const AppReducer = (\n  // eslint-disable-next-line\n  state: initAppStateType = initAppState,\n  action: AppActionTypes,\n): initAppStateType => {\n  switch (action.type) {\n    case SET_APP_INITIALIZATE:\n      return {\n        ...state,\n        isAppInitializated: action.isAppInitializated,\n      };\n    case '@@APP_REDUCER/PRELOADER_TOGGLE':\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    case SET_AUTH:\n      return {\n        ...state,\n        isAuth: action.isAuth,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setAppInitializate = (isAppInitializated: boolean) =>\n  ({\n    type: SET_APP_INITIALIZATE,\n    isAppInitializated,\n  } as const);\n\nexport const preloaderToggle = (isLoading: boolean) =>\n  ({ type: PRELOADER_TOGGLE, isLoading } as const);\n\nexport const setAuth = (isAuth: boolean) =>\n  ({\n    type: SET_AUTH,\n    isAuth,\n  } as const);\n\nexport type AppInitializateActionType = ReturnType<typeof setAppInitializate>;\nexport type setAuthActionType = ReturnType<typeof setAuth>;\nexport type preloaderToggleActionType = ReturnType<typeof preloaderToggle>;\nexport type AppActionTypes =\n  | AppInitializateActionType\n  | setAuthActionType\n  | preloaderToggleActionType;\n","import axios, { AxiosError } from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { profileAction } from '../../n2-features/f0-test/Profile/Profile-Reducer';\nimport { API } from '../m3-dal';\nimport { ErrorResponseType } from '../m3-dal/ApiResponseTypes';\n\nimport { preloaderToggle, setAppInitializate, setAuth } from './app-reducer';\n\nexport const authMeThunk = () => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.app\n    .getAuth()\n    .then(res => {\n      dispatch(profileAction(res.data));\n      dispatch(preloaderToggle(false));\n      dispatch(setAppInitializate(true));\n      dispatch(setAuth(true));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setAuth(false));\n        dispatch(preloaderToggle(false));\n        dispatch(setAppInitializate(true));\n      }\n    });\n};\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\n\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean;\n};\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\n  red,\n  className,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  const finalClassName = `${red ? s.red : s.default} ${className} ${s.button}`;\n  return (\n    <button\n      type=\"button\"\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n};\n","import React from 'react';\n\nimport { SuperButton } from 'n1-main/m1-ui/common';\n\nexport const Demonstration = (): React.ReactElement => (\n  <div>\n    <h1>DEMONSTRATION COMPONENT</h1>\n    <SuperButton>hello button</SuperButton>\n  </div>\n);\n","export default __webpack_public_path__ + \"static/media/Rocket.fc7a629f.jpg\";","export const BASE_ROUTE = '/';\nexport const LOGIN_ROUTE = '/login';\nexport const REG_ROUTE = '/register';\nexport const PROFILE_ROUTE = '/profile';\nexport const RECOVERY_PASS_ROUTE = '/recovery';\nexport const NEW_PASS_ROUTE = '/newpass';\nexport const DEMONSTRATION_ROUTE = '/demonstration';\nexport const RECOVERYPASSWORD_ROUTE = '/set-new-password/:token';\nexport const CARD_PACKS_ROUTE = '/cardpacks';\nexport const NOT_FOUND_ROUTE = '*';\n","import React from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { resetInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\ntype PropsCheckEmailType = {\n  text: string;\n  email?: string;\n};\n\nexport const ModalInfo = (props: PropsCheckEmailType): React.ReactElement => {\n  const dispatch = useDispatch();\n  const email = props.email ? props.email : '';\n  const handleClose = (): void => {\n    dispatch(resetInfo());\n  };\n  return (\n    <Modal show>\n      <Modal.Header closeButton>\n        <Modal.Title>Info</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{`${props.text} ${email}`}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { resetError } from '../../../n1-main/m2-bll/ErrorReducer';\n\ntype PropsCheckEmailType = {\n  error: string;\n  email?: string;\n};\n\nexport const ModalError = React.memo((props: PropsCheckEmailType): React.ReactElement => {\n  const email = props.email ? props.email : '';\n  const dispatch = useDispatch();\n  const handleClose = (): void => {\n    dispatch(resetError());\n  };\n\n  return (\n    <Modal show onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ color: 'red' }}>{`${props.error} ${email}`}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n","import React, { FC } from 'react';\n\nimport { ErrorMessage, useField } from 'formik';\n\ntype TextFieldPropsType = {\n  label: string;\n  name: string;\n  type: string;\n};\n\nexport const TextField: FC<TextFieldPropsType> = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <div className=\"mb-2\">\n      <label htmlFor={field.name}>{label}</label>\n      <input\n        className={`form-control shadow-none ${\n          meta.touched && meta.error && 'is-invalid'\n        }`}\n        {...field}\n        {...props}\n        autoComplete=\"off\"\n      />\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Form, Formik } from 'formik';\nimport rocketImg from 'n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { Navigate } from 'react-router-dom';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\n\nimport { SignupSchemaRegistrationType } from './RegistrationContainer';\nimport { TextField } from './TextField';\n\ntype RegistrationPropsType = {\n  textError: string;\n  Info: boolean;\n  textInfo: string;\n  Error: boolean;\n  isAuth: boolean;\n  SignupSchema: SignupSchemaRegistrationType;\n  callback: (email: string, password: string) => void;\n  regState: { email: string; password: string };\n};\nexport const Registration = (props: RegistrationPropsType): React.ReactElement => {\n  if (props.isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              confirmPassword: '',\n            }}\n            validationSchema={props.SignupSchema}\n            onSubmit={values => {\n              const { email, password } = values;\n              props.callback(email, password);\n            }}\n          >\n            {() => (\n              <div>\n                {props.Error && (\n                  <ModalError error={props.textError} email={props.regState.email} />\n                )}\n                {props.Info && (\n                  <ModalInfo text={props.textInfo} email={props.regState.email} />\n                )}\n                <h1 className=\"my-4 font-weght-bold display-4\">Sign Up</h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <TextField\n                    label=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                  />\n                  <button className=\"btn btn-primary mt-3\" type=\"submit\">\n                    Register\n                  </button>\n                  <button className=\"btn btn-danger mt-3 mx-lg-3\" type=\"reset\">\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport '../App.css';\n\nexport const Loader = (): ReactElement => (\n  <div\n    style={{ height: '100vh' }}\n    className=\"row justify-content-center align-items-center\"\n  >\n    <div className=\"lds-hourglass \" />\n  </div>\n);\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nexport type PropsType = {\n  name: string;\n  thunk: (params: string) => void;\n};\n\nexport const EditableSpan = (props: PropsType): React.ReactElement => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState<string>(props.name);\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const onEditMode = (): void => {\n    setEditMode(true);\n  };\n  const offEditMode = (): void => {\n    setEditMode(false);\n    dispatch(props.thunk(title));\n  };\n  const onKeyHandler = (e: KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      offEditMode();\n    }\n  };\n\n  const onTitleChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    console.dir('click');\n    setTitle(e.currentTarget.value);\n  };\n\n  return editMode ? (\n    <input\n      /* eslint-disable-next-line jsx-a11y/no-autofocus */\n      autoFocus\n      value={title}\n      onKeyPress={onKeyHandler}\n      onBlur={offEditMode}\n      onChange={onTitleChangeHandler}\n    />\n  ) : (\n    <span onDoubleClick={onEditMode}>{title}</span>\n  );\n};\n","import { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\nimport { API } from '../../../n1-main/m3-dal';\nimport { ErrorResponseType } from '../../../n1-main/m3-dal/ApiResponseTypes';\nimport { LogOutClearState } from '../Profile/Profile-Reducer';\n\nexport const LogOut = () => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.logout\n    .logout()\n    .then(res => {\n      console.dir(res);\n      dispatch(setAuth(false));\n      dispatch(LogOutClearState());\n      dispatch(preloaderToggle(false));\n    })\n    .catch((err: ErrorResponseType) => {\n      console.dir('get Auth server error', err.response.data.error);\n      dispatch(preloaderToggle(false));\n    });\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, NavLink } from 'react-router-dom';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\nimport { LOGIN_ROUTE, NEW_PASS_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { EditableSpan } from '../EditableSpan/EditableSpan';\nimport { LogOut } from '../LogOut/LogOutThunk';\n\nimport { addAvatarTC, changeUserNameAC, changeUserNameTC } from './Profile-Reducer';\nimport style from './profile-style.module.scss';\n\nexport const Profile = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const profileState = useSelector((state: AppRootStateType) => state.profile);\n  const userName = useSelector((state: AppRootStateType) => state.profile.name);\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const isAppInitializated = useSelector<AppRootStateType, boolean>(\n    state => state.app.isAppInitializated,\n  );\n\n  if (!isAppInitializated) {\n    return <Loader />;\n  }\n\n  if (!isAuth) {\n    return <Navigate to={LOGIN_ROUTE} />;\n  }\n\n  const onLogoutClick = (): void => {\n    dispatch(LogOut());\n  };\n\n  const fileUpload = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event && userName) {\n      if (event.currentTarget.files) {\n        const reader = new FileReader();\n        reader.onload = function (e: any) {\n          dispatch(addAvatarTC(userName, e.target.result));\n        };\n        reader.readAsDataURL(event.currentTarget.files[0]);\n      }\n    }\n  };\n  return (\n    <div className={style.profileContainer}>\n      <div className={style.avatarContainer}>\n        {isAuth && (\n          <div className={style.boxAvatar}>\n            <img\n              className={style.avatar}\n              src={profileState.avatar ? profileState.avatar : ''}\n              alt=\"profileAvatar\"\n            />\n            <div className={style.boxUploadButton}>\n              <input className={style.uploadButton} type=\"file\" onChange={fileUpload} />\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={style.descriptionContainer}>\n        <div className={style.descriptionBox}>\n          <h2 className={style.titleName}>\n            {' '}\n            <EditableSpan name={userName!} thunk={changeUserNameTC} />\n          </h2>\n          <p className={style.description}>Date of Create:{profileState.created}</p>\n          <NavLink to={NEW_PASS_ROUTE}>Change Password</NavLink>\n          <button\n            style={{ width: 'max-content' }}\n            onClick={onLogoutClick}\n            type=\"button\"\n            className=\"btn btn-danger btn-sm\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport { Field, Form, Formik } from 'formik';\nimport { FormCheck } from 'react-bootstrap';\nimport FormCheckInput from 'react-bootstrap/FormCheckInput';\nimport { Navigate, NavLink } from 'react-router-dom';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { PROFILE_ROUTE, RECOVERY_PASS_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { SignupSchemaLoginType } from './LoginContainer';\n\ntype LoginPropsType = {\n  Error: boolean;\n  isAuth: boolean;\n  textError: string;\n  SignupSchema: SignupSchemaLoginType;\n  callback: (values: { email: string; password: string; rememberMe: boolean }) => void;\n};\n\nexport const Login = (props: LoginPropsType): ReactElement => {\n  if (props.isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\">\n      {props.Error && <ModalError error={props.textError} />}\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              rememberMe: false,\n            }}\n            validationSchema={props.SignupSchema}\n            onSubmit={values => {\n              props.callback(values);\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">LOGIN</h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <div>\n                    {/* <FormCheck label=\"remember me\" type=\"checkbox\" name=\"rememberMe\" /> */}\n\n                    <div\n                      className=\"custom-control custom-checkbox\"\n                      style={{ margin: '20px 0px' }}\n                    >\n                      <FormCheckInput name=\"rememberMe\" type=\"checkbox\" />\n                      <label\n                        className=\"custom-control-label\"\n                        style={{ marginLeft: '5px' }}\n                        htmlFor=\"rememberMe\"\n                      >\n                        remember me\n                      </label>\n                    </div>\n                  </div>\n                  <NavLink\n                    style={{ display: 'block', margin: '10px 0px' }}\n                    to={RECOVERY_PASS_ROUTE}\n                  >\n                    Forgot Password\n                  </NavLink>\n                  <button className=\"btn btn-primary mt-3\" type=\"submit\">\n                    Login\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\nimport { setError } from '../../../n1-main/m2-bll/ErrorReducer';\nimport { LoginPostType } from '../../../n1-main/m3-dal/API';\nimport { profileAction } from '../Profile/Profile-Reducer';\n\nexport type LoginStateType = {\n  isLogin: boolean;\n};\n\nconst initLoginState = {\n  isLogin: false,\n};\n\nexport const LoginReducer = (\n  // eslint-disable-next-line\n  state: LoginStateType = initLoginState,\n  action: ActionTypes,\n): LoginStateType => {\n  switch (action.type) {\n    case 'LOGIN_CASE':\n      return {\n        ...state,\n        ...action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const LoginAction = (param: {}) => ({ type: 'LOGIN_CASE', data: param } as const);\n\nexport const loginInThunk = (param: LoginPostType) => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.login\n    .login(param)\n    .then(res => {\n      dispatch(setAuth(true));\n      dispatch(profileAction(res.data));\n      dispatch(preloaderToggle(false));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setAuth(false));\n        dispatch(preloaderToggle(false));\n        dispatch(setError(true, err.response.data.error));\n      }\n      dispatch(setError(true, err.toJSON().message));\n    });\n};\n\nexport type LoginActionTypes = ReturnType<typeof LoginAction>;\ntype ActionTypes = LoginActionTypes;\n","import React, { ReactElement } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { Login } from './Login';\nimport { loginInThunk } from './LoginReducer';\n\nconst SignupSchema = yup\n  .object({\n    email: yup.string().email('email is invalid').required('email is required'),\n    password: yup\n      .string()\n      .min(8, 'password must be at least 8 character')\n      .required('password is required'),\n  })\n  .required();\n\nexport type SignupSchemaLoginType = typeof SignupSchema;\n\nexport const LoginContainer = (): ReactElement => {\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const dispatch = useDispatch();\n\n  const callback = (values: {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n  }): void => {\n    dispatch(loginInThunk(values));\n  };\n  const { Error, textError } = useSelector<AppRootStateType, initErrorStateType>(\n    state => state.error,\n  );\n  return (\n    <Login\n      isAuth={isAuth}\n      Error={Error}\n      textError={textError}\n      callback={values => callback(values)}\n      SignupSchema={SignupSchema}\n    />\n  );\n};\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { setError, setInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\nexport type initRecoveryStateType = {\n  email: string;\n  toggle: boolean;\n};\n\nconst initRecoveryState = {\n  email: '',\n  toggle: false,\n};\n\nexport const ForGetPasswordReducer = (\n  // eslint-disable-next-line\n  state: initRecoveryStateType = initRecoveryState,\n  action: RecoveryPassTypes,\n): initRecoveryStateType => {\n  switch (action.type) {\n    case 'EMAIL_SET_CASE':\n    case 'TOOGL_SET_CASE':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const SetEmailAction = (email: string) =>\n  ({ type: 'EMAIL_SET_CASE', payload: { email } } as const);\n\nexport const SetTooglMailAction = (toggle: boolean) =>\n  ({ type: 'TOOGL_SET_CASE', payload: { toggle } } as const);\n\nexport const RecoveryPassThunk = (email: string) => (dispatch: Dispatch) => {\n  dispatch(SetEmailAction(email));\n  API.forgetPassword\n    .forgetPassword(email)\n    .then(resp => {\n      dispatch(SetTooglMailAction(true));\n      dispatch(setInfo(true, resp.data.info));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setError(true, err.response.data.error));\n        dispatch(SetEmailAction(err.response?.data.email));\n        dispatch(SetTooglMailAction(true));\n      }\n      dispatch(setError(true, err.toJSON().message));\n    });\n};\n\nexport type RecoveryPassTypes = SetEmailActionType | SetTooglMailActionType;\n\nexport type SetEmailActionType = ReturnType<typeof SetEmailAction>;\nexport type SetTooglMailActionType = ReturnType<typeof SetTooglMailAction>;\n","import React from 'react';\n\nimport { Form, Formik } from 'formik';\nimport { Navigate } from 'react-router-dom';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { SignupShemForgetPasswordType } from './ForgetPasswordContainer';\n\ntype ForgetPasswordPropsType = {\n  Info: boolean;\n  textInfo: string;\n  isAuth: boolean;\n  Error: boolean;\n  email: string;\n  textError: string;\n  SignupSchema: SignupShemForgetPasswordType;\n  callback: (email: string) => void;\n};\nexport const ForgetPassword = (props: ForgetPasswordPropsType): React.ReactElement => {\n  if (props.isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\" id=\"213213123123\">\n      {props.Error && <ModalError error={props.textError} email={props.email} />}\n      {props.Info && <ModalInfo text={props.textInfo} email={props.email} />}\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={props.SignupSchema}\n            onSubmit={values => {\n              const { email } = values;\n              props.callback(email);\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">\n                  Enter your email please\n                </h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                    Enter\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { initRecoveryStateType, RecoveryPassThunk } from './ForgetPassReducer';\nimport { ForgetPassword } from './ForgetPassword';\n\nexport type SignupShemForgetPasswordType = typeof SignupSchema;\nconst SignupSchema = yup\n  .object({\n    email: yup.string().email('email is invalid').required('email is required'),\n  })\n  .required();\nexport const ForgetPasswordContainer = (): React.ReactElement => {\n  const recovereState = useSelector<AppRootStateType, initRecoveryStateType>(\n    state => state.forgetPassword,\n  );\n  const { Error, textError, Info, textInfo } = useSelector<\n    AppRootStateType,\n    initErrorStateType\n  >(state => state.error);\n  const dispatch = useDispatch();\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const callback = (email: string): void => {\n    dispatch(RecoveryPassThunk(email));\n  };\n\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <ForgetPassword\n      Info={Info}\n      textInfo={textInfo}\n      callback={email => callback(email)}\n      SignupSchema={SignupSchema}\n      textError={textError}\n      Error={Error}\n      isAuth={isAuth}\n      email={recovereState.email}\n    />\n  );\n};\n","import React from 'react';\n\nexport const NotFound = (): React.ReactElement => (\n  <div>\n    <h1>NOT FOUND 404</h1>\n  </div>\n);\n","import React from 'react';\n\nimport { Form, Formik } from 'formik';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { SignupSchemaRecoveryPasswordType } from './RecoveryPasswordContainer';\n\ntype RecoveryPasswordPropsType = {\n  Info: boolean;\n  textInfo: string;\n  Error: boolean;\n  textError: string;\n  SignupSchema: SignupSchemaRecoveryPasswordType;\n  callback: (password: string) => void;\n};\nexport const RecoveryPassword = (\n  props: RecoveryPasswordPropsType,\n): React.ReactElement => (\n  <div className=\"container mt-3\">\n    <div className=\"row\">\n      <div className=\"col-md-5\">\n        <Formik\n          initialValues={{\n            password: '',\n          }}\n          validationSchema={props.SignupSchema}\n          onSubmit={values => {\n            const { password } = values;\n            props.callback(password);\n          }}\n        >\n          {() => (\n            <div>\n              <h1 className=\"my-4 font-weght-bold display-4\">Create new password</h1>\n              {props.Error && <ModalError error={props.textError} />}\n              {props.Info && <ModalInfo text={props.textInfo} />}\n              <Form>\n                <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                <TextField\n                  label=\"Confirm password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                />\n                <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                  Accept\n                </button>\n                <button\n                  style={{ marginLeft: '20px' }}\n                  className=\"btn btn-danger mt-3\"\n                  type=\"reset\"\n                >\n                  Reset\n                </button>\n              </Form>\n            </div>\n          )}\n        </Formik>\n      </div>\n      <div className=\"col-md-7 my-auto\">\n        <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n      </div>\n    </div>\n  </div>\n);\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { setError, setInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\nexport type initRecoveryPasswordStateType = {\n  password: string;\n  token: string | undefined;\n};\n\nconst initRecoveryPasswordState = {\n  password: '',\n  token: '',\n};\n\nexport const RecoveryPasswordReducer = (\n  // eslint-disable-next-line\n  state: initRecoveryPasswordStateType = initRecoveryPasswordState,\n  action: ActionTypes,\n): initRecoveryPasswordStateType => {\n  switch (action.type) {\n    case 'SET_PASSWORD_CASE':\n    case 'SET_TOKEN_CASE': {\n      return { ...state, ...action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setTokenAction = (token: string) =>\n  ({\n    type: 'SET_TOKEN_CASE',\n    payload: { token },\n  } as const);\nexport const setPasswordAction = (password: string) =>\n  ({\n    type: 'SET_PASSWORD_CASE',\n    payload: { password },\n  } as const);\n\nexport const recoveryPasswordThunk =\n  (password: string, token: string) => (dispatch: Dispatch) => {\n    API.forgetPassword\n      .changePasswordOnForget(password, token)\n      .then(res => {\n        dispatch(setInfo(true, res.data.info));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(setError(true, err.response.data.error));\n        }\n        dispatch(setError(true, err.toJSON().message));\n      });\n  };\n\nexport type setPasswordActionType = ReturnType<typeof setTokenAction>;\nexport type setTokenActionType = ReturnType<typeof setPasswordAction>;\n\nexport type ActionTypes = setPasswordActionType | setTokenActionType;\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { RecoveryPassword } from './RecoveryPassword';\nimport { recoveryPasswordThunk, setTokenAction } from './RecoveryPasswordReducer';\n\nconst SignupSchema = yup\n  .object({\n    password: yup\n      .string()\n      .min(8, 'password must be at least 8 character')\n      .required('password is required'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'password must match')\n      .required('confirm password is required'),\n  })\n  .required();\n\nexport type SignupSchemaRecoveryPasswordType = typeof SignupSchema;\n\nexport const RecoveryPasswordContainer = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const { token } = useParams();\n  useEffect(() => {\n    if (token) dispatch(setTokenAction(token));\n  }, []);\n  const callback = (password: string): void => {\n    if (token) {\n      dispatch(recoveryPasswordThunk(password, token));\n    }\n  };\n\n  const { Info, Error, textInfo, textError } = useSelector<\n    AppRootStateType,\n    initErrorStateType\n  >(state => state.error);\n  return (\n    <RecoveryPassword\n      callback={callback}\n      Info={Info}\n      textInfo={textInfo}\n      Error={Error}\n      textError={textError}\n      SignupSchema={SignupSchema}\n    />\n  );\n};\n","import React from 'react';\n\nimport { RecoveryPasswordContainer } from '../RecoveryPass';\n\nexport const NewPassword = (): React.ReactElement => <RecoveryPasswordContainer />;\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { setError, setInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\nconst REGISTRATION = '@@REGISTRATION_REDUCER/REGISTRATION';\nconst initRegistrationState = {\n  email: '',\n  password: '',\n};\n\nexport const RegistrationReducer = (\n  // eslint-disable-next-line\n  state: initRegistrationStateType = initRegistrationState,\n  action: RegistrationActionType,\n): initRegistrationStateType => {\n  switch (action.type) {\n    case REGISTRATION:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const Registration = (email: string, password: string) =>\n  ({ type: REGISTRATION, payload: { email, password } } as const);\n\nexport const RegistrationThunk =\n  (email: string, password: string) => (dispatch: Dispatch) => {\n    API.registration(email, password)\n      .then(() => {\n        dispatch(setInfo(true, 'registration succsess'));\n        dispatch(Registration(email, password));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(setError(true, err.response.data.error));\n        }\n        dispatch(setError(true, err.toJSON().message));\n      });\n  };\n\nexport type RegistrationActionType = ReturnType<typeof Registration>;\nexport type initRegistrationStateType = {\n  email: string;\n  password: string;\n};\n","import React from 'react';\n\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { Registration } from './Registration';\nimport { initRegistrationStateType, RegistrationThunk } from './RegistrationReducer';\n\nconst SignupSchema = yup\n  .object({\n    email: yup.string().email('email is invalid').required('email is required'),\n    password: yup\n      .string()\n      .min(8, 'password must be at least 8 character')\n      .required('password is required'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'password must match')\n      .required('confirm password is required'),\n  })\n  .required();\n\nexport type SignupSchemaRegistrationType = typeof SignupSchema;\n\nexport const RegistrationContainer = (): React.ReactElement => {\n  const regState = useSelector<AppRootStateType, initRegistrationStateType>(\n    state => state.registration,\n  );\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const dispatch = useDispatch();\n  const callback = (email: string, password: string): void => {\n    dispatch(RegistrationThunk(email, password));\n  };\n  const { Info, Error, textInfo, textError } = useSelector<\n    AppRootStateType,\n    initErrorStateType\n  >(state => state.error);\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <Registration\n      Info={Info}\n      Error={Error}\n      textError={textError}\n      textInfo={textInfo}\n      callback={(email, password) => callback(email, password)}\n      SignupSchema={SignupSchema}\n      isAuth={isAuth}\n      regState={regState}\n    />\n  );\n};\n","import { AxiosResponse } from 'axios';\n\nimport { axiosInst } from '../../../n1-main/m3-dal/apiConfig';\nimport { ApiResponseTypes } from '../../../n1-main/m3-dal/ApiResponseTypes';\n\nimport { getPacksCommonRequestParamsType } from './CardPacksThunk';\nimport { CardInPackType, CardPacksType } from './types';\n\nconst cardsPack: cardsPackType = {\n  name: 'no Name',\n  path: '/master',\n  grade: 0,\n  shots: 0,\n  rating: 0,\n  deckCover: 'url or base64',\n  private: false,\n  type: 'pack',\n};\n\ntype cardsPackType = {\n  name: string;\n  path: string;\n  grade: number;\n  shots: number;\n  rating: number;\n  deckCover: string;\n  private: boolean;\n  type: string;\n};\n\nexport const cardPacksAPI = {\n  getCardPacks: (getPacksCommonRequestParams: getPacksCommonRequestParamsType) =>\n    axiosInst.get<any, ApiResponseTypes<CardPacksType>>('cards/pack', {\n      params: {\n        ...getPacksCommonRequestParams,\n      },\n    }),\n  createCardPack: (name?: string) => {\n    if (name) {\n      cardsPack.name = name;\n    }\n    return axiosInst.post<\n      cardsPackType,\n      AxiosResponse<{\n        newCardsPack: CardInPackType;\n        token: string;\n        tokenDeathTime: number;\n      }>\n    >('cards/pack', {\n      cardsPack,\n    });\n  },\n  deleteCardsPacks: (id: string) =>\n    axiosInst.delete('cards/pack', {\n      params: { id },\n    }),\n};\n","export const SET_CARD_PACKS = '@@PACKS_REDUCER/SET_CARD_PACKS';\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { cardPacksAPI } from './CardsPackAPI';\nimport { SET_CARD_PACKS } from './consts';\nimport { CardInPackType, CardPacksType } from './types';\n\nconst initCardPacksState = {\n  cardPacks: [\n    {\n      _id: '',\n      user_id: '',\n      user_name: '',\n      private: false,\n      name: '',\n      path: '',\n      cardsCount: 0,\n      grade: 0,\n      shots: 0,\n      rating: 0,\n      type: '',\n      created: '',\n      updated: '',\n      __v: 0,\n    },\n  ],\n  token: '',\n  cardPacksTotalCount: 0,\n  maxCardsCount: 0,\n  minCardsCount: 0,\n  page: 0,\n  pageCount: 0,\n  disabled: false,\n};\n\nexport const CardPacksReducer = (\n  state: CardPacksType = initCardPacksState,\n  action: ActionTypes,\n): CardPacksType => {\n  switch (action.type) {\n    case SET_CARD_PACKS:\n    case 'SET-VALUE-CARDS-TYPE':\n    case 'SET-PAGE':\n    case 'SET-DISABLED': {\n      return { ...state, ...action.payload };\n    }\n    case 'ADD-PACK': {\n      return {\n        ...state,\n        cardPacks: [...state.cardPacks, { ...action.newCardsPack }],\n      };\n    }\n    case 'DELETE-PACK': {\n      return {\n        ...state,\n        cardPacks: state.cardPacks.filter(element => element._id !== action.id),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const SetCardPacksAC = (payload: CardPacksType) =>\n  ({ type: SET_CARD_PACKS, payload } as const);\nexport const SetPagePacksAC = (page: number) =>\n  ({ type: 'SET-PAGE', payload: { page } } as const);\nexport const SetDisabledPacksAC = (disabled: boolean) =>\n  ({ type: 'SET-DISABLED', payload: { disabled } } as const);\n\nexport const DeletPackAC = (id: string) => ({ type: 'DELETE-PACK', id } as const);\nexport const AddPackAC = (newCardsPack: CardInPackType) =>\n  ({ type: 'ADD-PACK', newCardsPack } as const);\n\nexport const SetValueCardsCountPacksAC = (min: number, max: number) =>\n  ({\n    type: 'SET-VALUE-CARDS-TYPE',\n    payload: { minCardsCount: min, maxCardsCount: max },\n  } as const);\n\nexport type CardPacksActionTypes = ReturnType<typeof SetCardPacksAC>;\nexport type SetValueCardsCountPacksACType = ReturnType<typeof SetValueCardsCountPacksAC>;\nexport type SetPagePacksACType = ReturnType<typeof SetPagePacksAC>;\nexport type SetDisabledPacksACType = ReturnType<typeof SetDisabledPacksAC>;\nexport type DeletPackACType = ReturnType<typeof DeletPackAC>;\nexport type AddPackACType = ReturnType<typeof AddPackAC>;\n\nexport const DeletePackThunk = (id: string) => (dispatch: Dispatch) => {\n  dispatch(SetDisabledPacksAC(true));\n  cardPacksAPI\n    .deleteCardsPacks(id)\n    .then(resp => {\n      dispatch(DeletPackAC(resp.data.deletedCardsPack._id));\n      dispatch(SetDisabledPacksAC(false));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        console.log(err.response.data.error);\n        dispatch(SetDisabledPacksAC(false));\n      }\n    });\n};\n\nexport const AddPackThunk = (name?: string) => (dispatch: Dispatch) => {\n  dispatch(SetDisabledPacksAC(true));\n  cardPacksAPI\n    .createCardPack(name)\n    .then(resp => {\n      console.log(resp.data);\n      dispatch(AddPackAC(resp.data.newCardsPack));\n      dispatch(SetDisabledPacksAC(false));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        console.log(err.response.data.error);\n        dispatch(SetDisabledPacksAC(false));\n      }\n    });\n};\n\ntype ActionTypes =\n  | CardPacksActionTypes\n  | SetValueCardsCountPacksACType\n  | SetPagePacksACType\n  | SetDisabledPacksACType\n  | DeletPackACType\n  | AddPackACType;\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\n\nimport { cardPacksAPI } from './CardsPackAPI';\nimport { SetCardPacksAC, SetDisabledPacksAC } from './PacksReducer';\n\n// type ParamThunkType = {\n//   minCards: number,\n//   maxCards: number,\n//   page: number,\n//   packName?: string,\n//   userId?: string,\n// }\n\nexport type getPacksCommonRequestParamsType = {\n  packName?: string | undefined;\n  min?: number;\n  max?: number;\n  sortPacks?: string;\n  page?: number;\n  pageCount?: number;\n  // eslint-disable-next-line camelcase\n  user_id?: string;\n};\n\nexport const getCardPacksTC =\n  (getPacksCommonRequestParams: getPacksCommonRequestParamsType) =>\n  (dispatch: Dispatch) => {\n    dispatch(preloaderToggle(true));\n    dispatch(SetDisabledPacksAC(true));\n    // console.dir(getPacksCommonRequestParams);\n    cardPacksAPI\n      .getCardPacks({ ...getPacksCommonRequestParams })\n      .then(res => {\n        dispatch(SetCardPacksAC(res.data));\n        dispatch(SetDisabledPacksAC(false));\n        dispatch(preloaderToggle(false));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          console.log(err.response.data.error);\n          dispatch(setAuth(false));\n          dispatch(SetDisabledPacksAC(false));\n        }\n      });\n  };\n","import React, { ChangeEvent, useRef } from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { AddPackThunk, DeletePackThunk } from './PacksReducer';\nimport { ITableModel } from './TableCardPacks';\nimport { CardInPackType } from './types';\n\nexport const CardTableModel = (): ITableModel[] => {\n  const dispatch = useDispatch();\n  const searchValue = useRef<string>();\n  const ChangeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n    searchValue.current = event.currentTarget.value;\n  };\n  const onClickHandler = (): void => {\n    dispatch(AddPackThunk(searchValue.current));\n  };\n  return [\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Card Packs</b>\n        </div>\n      ),\n\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.name}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Cards Count</b>\n        </div>\n      ),\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.cardsCount}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Update Card</b>\n        </div>\n      ),\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.updated}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <input\n            className=\"shadow bg-gradient border-primary opacity-75 border-3\"\n            style={{ borderRadius: '5%', padding: '5px' }}\n            onChange={ChangeHandler}\n            type=\"text\"\n            placeholder=\"name\"\n          />\n          {/* <input onChange={ChangeHandler} /> */}\n          <button\n            className=\"btn-sm btn btn-primary\"\n            style={{ marginLeft: '20px', borderRadius: '5%' }}\n            onClick={onClickHandler}\n          >\n            Add new card\n          </button>\n        </div>\n      ),\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <button\n            className=\"btn-sm\"\n            onClick={() => {\n              dispatch(DeletePackThunk(d._id));\n            }}\n          >\n            Delete\n          </button>\n          <button className=\"btn-sm\" style={{ marginLeft: '10px' }}>\n            Update\n          </button>\n        </div>\n      ),\n    },\n  ];\n};\n","import { ReactElement } from 'react';\n\nimport { Pagination } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { SetPagePacksAC } from '../PacksReducer';\n\nimport { createPages } from './createPage';\n\ntype PaginationComponentPropsType = {\n  activePage: number;\n  totalCards: number;\n  pageCardsTotal: number;\n  disabled: boolean;\n  callback: (currentPage: number) => void;\n};\n\nexport const PaginationComponent = (\n  props: PaginationComponentPropsType,\n): ReactElement => {\n  const { activePage, pageCardsTotal, totalCards, disabled } = props;\n  const pageTotalCount: number = Math.ceil(totalCards / pageCardsTotal);\n  const items: Array<number> = [];\n  createPages(items, pageTotalCount, activePage);\n  const dispatch = useDispatch();\n  const onClickHandler = (page: number): void => {\n    props.callback(page);\n    // dispatch(SetPagePacksAC(page));\n  };\n  return (\n    <Pagination>\n      {items.map(page => (\n        <Pagination.Item\n          key={page}\n          onClick={() => onClickHandler(page)}\n          active={page === activePage}\n          disabled={disabled}\n        >\n          {page}\n        </Pagination.Item>\n      ))}\n    </Pagination>\n  );\n};\n","export function createPages(\n  pagesItem: Array<number>,\n  pagesTotalCount: number,\n  activPage: number,\n): void {\n  if (pagesTotalCount > 10) {\n    if (activPage > 5) {\n      for (let i = activPage - 4; i <= activPage + 5; i++) {\n        pagesItem.push(i);\n        if (i === pagesTotalCount) break;\n      }\n    } else {\n      for (let i = 1; i <= 10; i++) {\n        pagesItem.push(i);\n        if (i === pagesTotalCount) break;\n      }\n    }\n  } else {\n    for (let i = 1; i <= pagesTotalCount; i++) {\n      pagesItem.push(i);\n    }\n  }\n}\n","import React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\n\nexport interface ITableModel {\n  title: (index: number) => ReactNode;\n  render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\n}\n\ninterface ITableProps {\n  loading: boolean;\n  // error: string;\n  //\n  // logoutCallback: () => void;\n  model: ITableModel[];\n  data: any;\n  headerStyle?: CSSProperties;\n  tableStyle?: CSSProperties;\n  rowsStyle?: CSSProperties;\n  rowStyle?: CSSProperties;\n  disabled: boolean;\n}\n\nexport const TableCardPacks: React.FC<ITableProps> = ({\n  loading,\n  // error,\n  // logoutCallback,\n  model,\n  data,\n  headerStyle,\n  tableStyle,\n  rowsStyle,\n  rowStyle,\n  disabled,\n}): ReactElement => {\n  if (loading) return <Loader />;\n  return (\n    <div\n      style={{\n        margin: '0 10px',\n        // minHeight: '80vh',\n        display: 'flex',\n        flexFlow: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...tableStyle,\n      }}\n    >\n      <h2>CADR PACKS</h2>\n      {/* {loading */}\n      {/* ? <div style={{color: 'orange'}}>loading...</div> */}\n      {/*: error */}\n      {/* ? <div style={{color: 'red'}}>{error}</div> */}\n      {/*: <div><br/></div> */}\n      {/* } */}\n      <div\n        style={{\n          border: '1px solid grey',\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          margin: '5px',\n          padding: '10px',\n          ...headerStyle,\n        }}\n      >\n        {model.map((m: ITableModel, index: number) => m.title(index))}\n      </div>\n      {disabled ? (\n        <Loader />\n      ) : (\n        <table\n          className=\"table table-striped\"\n          style={{\n            border: '1px solid grey',\n            width: '100%',\n            margin: '20px',\n            padding: '10px',\n            ...rowsStyle,\n          }}\n        >\n          {data.map((dataItem: any, dataIndex: number) => (\n            <tr\n              key={dataItem._id || dataIndex}\n              style={{\n                padding: '8px',\n                width: '100%',\n                display: 'flex',\n                flexFlow: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n                ...rowStyle,\n              }}\n            >\n              {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\n            </tr>\n          ))}\n        </table>\n      )}\n    </div>\n  );\n};\n","import React, { ChangeEvent, MouseEvent, ReactElement, useEffect, useState } from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { LOGIN_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\n\nimport { getCardPacksTC, getPacksCommonRequestParamsType } from './CardPacksThunk';\nimport { CardTableModel } from './CardTableModel';\nimport { usePacksRequestSettings } from './CustomRequestSettingsHook';\nimport { useDebounce } from './CustomUseDebaunceHook';\nimport { PaginationComponent } from './pagination/Pagination';\nimport { TableCardPacks } from './TableCardPacks';\nimport { CardPacksType } from './types';\n\nexport const CardPacksContainer = (): ReactElement => {\n  const userId = useSelector<AppRootStateType, string | undefined>(\n    state => state.profile._id,\n  );\n  const data = useSelector<AppRootStateType, CardPacksType>(state => state.cardPacks);\n  const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const dispatch = useDispatch();\n\n  const {\n    searchedPackNameValue,\n    searchedMinValue,\n    searchedMaxValue,\n    currentPage,\n    pageCount,\n    onlyMe,\n    sortFilter,\n    setSearchedPackNameValue,\n    setSearchedMinValue,\n    setSearchedMaxValue,\n    setCurrentPage,\n    setPageCount,\n    setOnlyMe,\n    setSortFilter,\n  } = usePacksRequestSettings();\n\n  const [searchCommonRequestPack, setSearchCommonRequestPack] =\n    useState<getPacksCommonRequestParamsType>({});\n  const debouncedSearchTerm = useDebounce(searchCommonRequestPack, 1000);\n\n  useEffect(() => {\n    setSearchCommonRequestPack({\n      packName: searchedPackNameValue,\n      min: searchedMinValue,\n      max: searchedMaxValue,\n      sortPacks: sortFilter,\n      page: currentPage,\n      pageCount,\n    });\n  }, [searchedPackNameValue, searchedMinValue, searchedMaxValue, pageCount, sortFilter]);\n  useEffect(() => {\n    if (currentPage !== 0) {\n      dispatch(getCardPacksTC({ ...searchCommonRequestPack, page: currentPage }));\n    }\n  }, [currentPage]);\n\n  const onlyMeSearchHandler = (checked: boolean): void => {\n    if (checked) {\n      setOnlyMe(true);\n      dispatch(getCardPacksTC({ user_id: userId }));\n    } else {\n      setOnlyMe(false);\n      dispatch(getCardPacksTC({ ...searchCommonRequestPack }));\n    }\n  };\n\n  const setSortFilterHandler = (value: string): void => {\n    setSortFilter(value);\n  };\n\n  const pageCountHandler = (value: string): void => {\n    setPageCount(+value);\n  };\n  useEffect(() => {\n    // Убедиться что у нас есть значение (пользователь ввел что-то)\n    if (debouncedSearchTerm) {\n      // Сделать запрос к АПИ\n      if (Object.keys(searchCommonRequestPack).length !== 0) {\n        setOnlyMe(false);\n        dispatch(getCardPacksTC(debouncedSearchTerm));\n      }\n    }\n  }, [debouncedSearchTerm]);\n\n  const changeValue = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.currentTarget.name === 'max') {\n      const max = Number(event.currentTarget.value);\n      setSearchedMaxValue(max);\n    }\n    if (event.currentTarget.name === 'min') {\n      const min = Number(event.currentTarget.value);\n      setSearchedMinValue(min);\n    }\n  };\n  const onChangeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n    setSearchedPackNameValue(event.currentTarget.value);\n  };\n  if (!isAuth) {\n    return <Navigate to={LOGIN_ROUTE} />;\n  }\n  return (\n    <div className=\"col-9 align-content-center m-lg-auto\">\n      <Form.Group\n        className=\"mb-3\"\n        style={{ width: '400px', marginTop: '40px' }}\n        controlId=\"PacksCardTable\"\n      >\n        <Form.Control\n          onChange={onChangeHandler}\n          type=\"text\"\n          placeholder=\"Enter card pack name for search...\"\n        />\n        <div\n          style={{\n            marginTop: '20px',\n            width: '1000px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div className=\"form-check form-switch\" style={{ marginTop: '20px' }}>\n            <label\n              className=\"form-check-label text-capitalize bg-gradient bg-info\"\n              htmlFor=\"searchOnlyMePacks\"\n            >\n              Search only me packs\n            </label>\n            <input\n              onChange={e => onlyMeSearchHandler(e.currentTarget.checked)}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              checked={onlyMe}\n              id=\"searchOnlyMePacks\"\n            />\n          </div>\n          <div>\n            <select\n              onChange={e => setSortFilterHandler(e.currentTarget.value)}\n              style={{ width: '240px' }}\n              className=\"form-select form-select-sm\"\n              aria-label=\".form-select-sm example\"\n            >\n              <option defaultChecked={sortFilter === '0packName'} value=\"0packName\">\n                sort by name\n              </option>\n              <option defaultChecked={sortFilter === '0cardsCount'} value=\"0cardsCount\">\n                sort by cards count\n              </option>\n              <option defaultChecked={sortFilter === '0updated'} value=\"0updated\">\n                sort by updated data\n              </option>\n            </select>\n            <label\n              className=\"form-check-label text-capitalize bg-gradient bg-info\"\n              htmlFor=\"searchOnlyMePacks\"\n            >\n              Select count of packs on page\n            </label>\n          </div>\n\n          <div>\n            <select\n              onChange={e => pageCountHandler(e.currentTarget.value)}\n              style={{ width: '240px' }}\n              className=\"form-select form-select-sm\"\n              aria-label=\".form-select-sm example\"\n            >\n              <option defaultChecked={pageCount === 5} value=\"5\">\n                5\n              </option>\n              <option defaultChecked={pageCount === 10} value=\"10\">\n                10\n              </option>\n              <option defaultChecked={pageCount === 25} value=\"25\">\n                25\n              </option>\n              <option defaultChecked={pageCount === 50} value=\"50\">\n                50\n              </option>\n              <option defaultChecked={pageCount === 75} value=\"75\">\n                75\n              </option>\n              <option defaultChecked={pageCount === 100} value=\"100\">\n                100\n              </option>\n            </select>\n            <label\n              className=\"form-check-label text-capitalize bg-gradient bg-info\"\n              htmlFor=\"searchOnlyMePacks\"\n            >\n              Select count of packs on page\n            </label>\n          </div>\n        </div>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Range Min {searchedMinValue}</Form.Label>\n        <Form.Range value={searchedMinValue} name=\"min\" onChange={changeValue} />\n        <Form.Label>Range Max {searchedMaxValue}</Form.Label>\n        <Form.Range value={searchedMaxValue} name=\"max\" onChange={changeValue} />\n      </Form.Group>\n      <TableCardPacks\n        model={CardTableModel()}\n        data={data.cardPacks}\n        disabled={data.disabled}\n        loading={isLoading}\n      />\n      <PaginationComponent\n        pageCardsTotal={10}\n        totalCards={data.cardPacksTotalCount}\n        activePage={data.page}\n        disabled={data.disabled}\n        callback={setCurrentPage}\n      />\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePacksRequestSettings = (): any => {\n  const [searchedPackNameValue, setSearchedPackNameValue] = useState<string>('');\n  const [searchedMinValue, setSearchedMinValue] = useState<number>(3);\n  const [searchedMaxValue, setSearchedMaxValue] = useState<number>(9);\n  const [currentPage, setCurrentPage] = useState<number>(0);\n  const [pageCount, setPageCount] = useState<number>(10);\n  const [onlyMe, setOnlyMe] = useState<boolean>(false);\n  const [sortFilter, setSortFilter] = useState<string>('0updated');\n\n  return {\n    searchedPackNameValue,\n    searchedMinValue,\n    searchedMaxValue,\n    currentPage,\n    pageCount,\n    onlyMe,\n    sortFilter,\n    setSearchedPackNameValue,\n    setSearchedMinValue,\n    setSearchedMaxValue,\n    setCurrentPage,\n    setPageCount,\n    setOnlyMe,\n    setSortFilter,\n  };\n};\n","import { useState, useEffect } from 'react';\n\nimport { getPacksCommonRequestParamsType } from './CardPacksThunk';\n\nexport const useDebounce = (\n  value: getPacksCommonRequestParamsType,\n  delay: number,\n): getPacksCommonRequestParamsType => {\n  // Состояние и сеттер для отложенного значения\n  const [debouncedValue, setDebouncedValue] = useState({});\n\n  useEffect(\n    () => {\n      // Выставить debouncedValue равным value (переданное значение)\n      // после заданной задержки\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Вернуть функцию очистки, которая будет вызываться каждый раз, когда ...\n      // ... useEffect вызван снова. useEffect будет вызван снова, только если ...\n      // ... value будет изменено (смотри ниже массив зависимостей).\n      // Так мы избегаем изменений debouncedValue, если значение value ...\n      // ... поменялось в рамках интервала задержки.\n      // Таймаут очищается и стартует снова.\n      // Что бы сложить это воедино: если пользователь печатает что-то внутри ...\n      // ... нашего приложения в поле поиска, мы не хотим, чтобы debouncedValue...\n      // ... не менялось до тех пор, пока он не прекратит печатать дольше, чем 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Вызывается снова, только если значение изменится\n    // мы так же можем добавить переменную \"delay\" в массива зависимостей ...\n    // ... если вы собираетесь менять ее динамически.\n    [value],\n  );\n\n  return debouncedValue;\n};\n","import React from 'react';\n\nimport {\n  Demonstration,\n  LoginContainer,\n  NewPassword,\n  NotFound,\n  Profile,\n  Registration,\n  ForgetPasswordContainer,\n} from 'n2-features';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { RegistrationContainer } from '../../../n2-features/f0-test/Registration/RegistrationContainer';\nimport { CardPacksContainer } from '../../../n2-features/f1-table/packs/CardPacksContainer';\n\nimport {\n  BASE_ROUTE,\n  CARD_PACKS_ROUTE,\n  DEMONSTRATION_ROUTE,\n  LOGIN_ROUTE,\n  NEW_PASS_ROUTE,\n  NOT_FOUND_ROUTE,\n  PROFILE_ROUTE,\n  RECOVERY_PASS_ROUTE,\n  RECOVERYPASSWORD_ROUTE,\n  REG_ROUTE,\n} from './consts';\n\nexport const publicRoutes = [\n  {\n    path: BASE_ROUTE,\n    component: <Profile />,\n  },\n  {\n    path: LOGIN_ROUTE,\n    component: <LoginContainer />,\n  },\n  {\n    path: REG_ROUTE,\n    component: <RegistrationContainer />,\n  },\n  {\n    path: PROFILE_ROUTE,\n    component: <Profile />,\n  },\n  {\n    path: RECOVERY_PASS_ROUTE,\n    component: <ForgetPasswordContainer />,\n  },\n  {\n    path: NEW_PASS_ROUTE,\n    component: <NewPassword />,\n  },\n  {\n    path: DEMONSTRATION_ROUTE,\n    component: <Demonstration />,\n  },\n  {\n    path: RECOVERYPASSWORD_ROUTE,\n    component: <NewPassword />,\n  },\n  {\n    path: NOT_FOUND_ROUTE,\n    component: <NotFound />,\n  },\n  {\n    path: CARD_PACKS_ROUTE,\n    component: <CardPacksContainer />,\n  },\n];\n\nexport const AppRoutes = (): React.ReactElement => (\n  <Routes>\n    {publicRoutes.map(({ path, component }) => (\n      <Route key={path} path={path} element={component} />\n    ))}\n  </Routes>\n);\n","import React, { useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { AppRootStateType } from '../../m2-bll';\nimport { initAppStateType } from '../../m2-bll/app-reducer';\nimport { publicRoutes } from '../routes';\nimport {\n  BASE_ROUTE,\n  LOGIN_ROUTE,\n  NEW_PASS_ROUTE,\n  PROFILE_ROUTE,\n  RECOVERY_PASS_ROUTE,\n  RECOVERYPASSWORD_ROUTE,\n  REG_ROUTE,\n} from '../routes/consts';\n\nimport style from './Header.module.css';\n\nexport const Header = (): React.ReactElement => {\n  const isAuth = useSelector((state: AppRootStateType) => state.app.isAuth);\n\n  const variate = publicRoutes.map(({ path }) =>\n    isAuth && path === LOGIN_ROUTE ? (\n      ''\n    ) : (\n      <NavLink className={style.Link} key={path} to={path}>\n        {' '}\n        <span style={{ padding: '5px' }}>{path}</span>\n      </NavLink>\n    ),\n  );\n\n  return (\n    <div style={{ display: 'inline-flex', flexDirection: 'column' }}>\n      <div className={style.dropdown}>\n        <div className={style.DropButton}>\n          <div className={style.middleLine} />\n        </div>\n        <div className={style.DropdownContent}>\n          <NavLink className={style.Link} to={isAuth ? LOGIN_ROUTE : PROFILE_ROUTE}>\n            {isAuth ? 'Profile' : 'Login'}\n          </NavLink>\n          <NavLink className={style.Link} to={isAuth ? NEW_PASS_ROUTE : REG_ROUTE}>\n            {isAuth ? 'Change Password' : 'Registration'}\n          </NavLink>\n        </div>\n      </div>\n\n      <div className={style.dropdown}>\n        <div className={style.DropButton}>\n          <div className={style.middleLine} />\n        </div>\n        <div className={style.DropdownContent}>{variate}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { authMeThunk } from '../m2-bll/AppThunks';\n\nimport { Header } from './header';\nimport { AppRoutes } from './routes';\n\nexport const Main = (): React.ReactElement => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authMeThunk());\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <AppRoutes />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './App.css';\n\nimport { Main } from './Main';\n\nexport const App = (): React.ReactElement => (\n  <div className=\"App\">\n    <Main />\n  </div>\n);\n","import { ForGetPasswordReducer } from 'n2-features/f0-test/ForgetPassword';\nimport { RecoveryPasswordReducer } from 'n2-features/f0-test/RecoveryPass';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { LoginReducer } from '../../n2-features/f0-test';\nimport { ProfileReducer } from '../../n2-features/f0-test/Profile/Profile-Reducer';\nimport { RegistrationReducer } from '../../n2-features/f0-test/Registration/RegistrationReducer';\nimport { CardPacksReducer } from '../../n2-features/f1-table/packs/PacksReducer';\n\nimport { AppReducer } from './app-reducer';\nimport { ErrorReducer } from './ErrorReducer';\n\nconst rootReducer = combineReducers({\n  app: AppReducer,\n  error: ErrorReducer,\n  login: LoginReducer,\n  profile: ProfileReducer,\n  forgetPassword: ForGetPasswordReducer,\n  registration: RegistrationReducer,\n  recoveryPasswordReducer: RecoveryPasswordReducer,\n  cardPacks: CardPacksReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n\n// @ts-ignore\nwindow.store = store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './n1-main/m1-ui/App';\nimport { store } from './n1-main/m2-bll';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Header_dropdown__2keX3\",\"DropButton\":\"Header_DropButton__1MGSb\",\"middleLine\":\"Header_middleLine__39Xas\",\"DropdownContent\":\"Header_DropdownContent__3HFgI\",\"Link\":\"Header_Link___xrk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile-style_profileContainer__2A5aG\",\"avatarContainer\":\"profile-style_avatarContainer__2QgYz\",\"boxAvatar\":\"profile-style_boxAvatar__2rJ6e\",\"boxUploadButton\":\"profile-style_boxUploadButton__30Sdu\",\"uploadButton\":\"profile-style_uploadButton__HxsC4\",\"avatar\":\"profile-style_avatar__3x_qd\",\"descriptionContainer\":\"profile-style_descriptionContainer__290qf\",\"descriptionBox\":\"profile-style_descriptionBox__3frER\",\"titleName\":\"profile-style_titleName__2O7Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2vf1J\",\"red\":\"SuperButton_red__12zn9\",\"button\":\"SuperButton_button__3mVpS\",\"blink\":\"SuperButton_blink__WVCCC\"};"],"sourceRoot":""}