{"version":3,"sources":["n1-main/m3-dal/apiConfig/index.ts","n1-main/m3-dal/API.ts","n2-features/f0-test/Profile/Profile-Reducer.tsx","n1-main/m2-bll/app-reducer.ts","n1-main/m2-bll/AppThunks.ts","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f0-test/Demonstration/Demonstration.tsx","n1-main/m1-ui/common/assets/Rocket.jpg","n1-main/m1-ui/routes/consts.ts","n2-features/f0-test/Registration/RegistrationReducer.tsx","n2-features/f0-test/Registration/TextField.tsx","n2-features/f0-test/Registration/Registration.tsx","n1-main/m1-ui/common/Loader.tsx","n2-features/f0-test/LogOut/LogOutThunk.ts","n2-features/f0-test/Profile/Profile.tsx","n2-features/f0-test/Login/LoginReducer.tsx","n2-features/f0-test/Login/Login.tsx","n2-features/f0-test/modalWindow/ModaInfo.tsx","n2-features/f0-test/modalWindow/ModalError.tsx","n2-features/f0-test/RecoveryPass/ForgetPassReducer.ts","n2-features/f0-test/RecoveryPass/ForgetPassword.tsx","n2-features/f0-test/RecoveryPass/RecoveryPasswordReducer.ts","n2-features/f0-test/RecoveryPass/RecoveryPassword.tsx","n2-features/f0-test/NotFound/NotFound.tsx","n2-features/f0-test/NewPassword/NewPassword.tsx","n2-features/f1-table/packs/CardsPackAPI.ts","n2-features/f1-table/packs/consts.ts","n2-features/f1-table/packs/PacksReducer.tsx","n2-features/f1-table/packs/CardPacksThunk.ts","n2-features/f1-table/packs/TableCardPacks.tsx","n2-features/f1-table/packs/CardPacksContainer.tsx","n2-features/f1-table/packs/CardTableModel.tsx","n1-main/m1-ui/routes/AppRoutes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/ErrorReducer.ts","n1-main/m2-bll/store.ts","reportWebVitals.ts","index.tsx","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css","n2-features/f0-test/Profile/profile-style.module.css"],"names":["axiosInst","axios","create","baseURL","withCredentials","API","updateAvatar","userName","avatarUrl","put","name","avatar","getAuth","post","login","params","logout","delete","forgetPassword","email","from","message","changePasswordOnForget","password","token","resetPasswordToken","LOG_OUT","initProfileState","_id","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","deviceTokens","tokenDeathTime","resetPasswordTokenDeathTime","profileAction","param","type","data","SET_AUTH","SET_APP_INITIALIZATE","initAppState","isLoading","isAppInitializated","isAuth","setAppInitializate","preloaderToggle","setAuth","authMeThunk","dispatch","then","res","catch","err","console","dir","response","SuperButton","red","className","restProps","finalClassName","s","default","button","Demonstration","LOGIN_ROUTE","PROFILE_ROUTE","REGISTRATION","initRegistrationState","RegistrationThunk","status","log","payload","Registration","TextField","label","props","useField","field","meta","htmlFor","touched","autoComplete","component","regState","useSelector","state","registration","app","useDispatch","SignupSchema","yup","required","min","confirmPassword","oneOf","to","initialValues","validationSchema","onSubmit","values","length","style","color","src","rocketImg","alt","Loader","height","LogOut","Profile","profileState","profile","containerAvatar","onChange","event","currentTarget","files","reader","FileReader","onload","e","addAvatarTC","target","result","readAsDataURL","onClick","initLoginState","isLogin","Login","marginLeft","ModalInfo","Modal","show","Header","closeButton","Title","Body","text","Footer","Button","variant","setShow","ModalError","handleClose","onHide","initRecoveryState","info","toggle","SetEmailAction","SetTooglMailAction","ForgetPassword","recovereState","useState","id","resp","RecoveryPassThunk","initRecoveryPasswordState","setErrorAction","RecoveryPassword","useParams","useEffect","setTokenAction","recoveryPasswordReducer","setTimeout","recoveryPasswordThunk","NotFound","NewPassword","cardPacksAPI","get","SET_CARD_PACKS","initCardPacksState","cardPacks","user_id","user_name","private","path","cardsCount","grade","shots","rating","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getCardPacksTC","TableCardPacks","model","headerStyle","tableStyle","rowsStyle","rowStyle","margin","display","flexFlow","alignItems","justifyContent","border","width","map","m","index","title","dataItem","dataIndex","modelIndex","render","CardPacksContainer","i","d","publicRoutes","AppRoutes","element","variate","Link","padding","dropdown","DropButton","middleLine","DropdownContent","Main","App","SET_ERROR","RESET_ERROR","initErrorState","isError","textError","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8ade1daa.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst settings = {\n  withCredentials: true,\n  // headers: {\n  //   'API-KEY': process.env.REACT_APP_API_KEY,\n  // },\n};\n\nexport const axiosInst = axios.create({\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\n  // process.env.REACT_APP_BASE_URL,\n  ...settings,\n});\n","import axios, { AxiosResponse } from 'axios';\nimport { ProfileStateType } from 'n2-features/f0-test/Profile/Profile-Reducer';\n\nimport {\n  ForgetPasswordResp,\n  PostForgetPasswordReq,\n} from '../../n2-features/f0-test/RecoveryPass/TypeForForgetPasswordResponse';\nimport {\n  PostRecoveryPasswordReq,\n  RecoveryPasswordResp,\n} from '../../n2-features/f0-test/RecoveryPass/TypeRecoveryPasswordResponse';\n\nimport { axiosInst } from './apiConfig';\nimport {\n  ApiResponseTypes,\n  DeleteResponseType,\n  UserDataResponseType,\n} from './ApiResponseTypes';\n\nexport type LoginPostType = { email: string; password: string; rememberMe: boolean };\nexport const API = {\n  profile: {\n    updateAvatar: (userName: string, avatarUrl: string) =>\n      axiosInst.put('/auth/me', { name: userName, avatar: avatarUrl }),\n  },\n  app: {\n    getAuth: () =>\n      axiosInst.post<null, ApiResponseTypes<UserDataResponseType>>('auth/me', {}),\n  },\n  login: {\n    login: (params: LoginPostType) =>\n      axiosInst.post<LoginPostType, AxiosResponse<ProfileStateType>>(\n        'auth/login',\n        params,\n      ),\n  },\n  logout: {\n    logout: () => axiosInst.delete<{}, AxiosResponse<DeleteResponseType>>('auth/me', {}),\n  },\n  forgetPassword: {\n    forgetPassword: (email: string) =>\n      axios.post<PostForgetPasswordReq, AxiosResponse<ForgetPasswordResp>>(\n        'https://neko-back.herokuapp.com/2.0/auth/forgot',\n        {\n          email,\n          from: 'test-front-admin <ai73a@yandex.by>',\n          message:\n            '\\n<div style=\"background-color: lime; padding: 15px\">\\npassword recovery link: \\n<a href=\\'https://neko-back.herokuapp.com/2.0/#/set-new-password/$token$\\'>link</a>\\n</div>\\n',\n        },\n      ),\n    changePasswordOnForget: (password: string, token: string) =>\n      axiosInst.post<PostRecoveryPasswordReq, AxiosResponse<RecoveryPasswordResp>>(\n        'auth/set-new-password',\n        { resetPasswordToken: token, password },\n      ),\n  },\n  registration: (email: string, password: string) =>\n    axiosInst.post<\n      { email: string; password: string },\n      ApiResponseTypes<UserDataResponseType>\n    >('auth/register', { email, password }),\n};\n","import { ThunkDispatch } from 'redux-thunk';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { AppActionTypes } from '../../../n1-main/m2-bll/app-reducer';\nimport { authMeThunk } from '../../../n1-main/m2-bll/AppThunks';\nimport { API } from '../../../n1-main/m3-dal';\n\nconst LOG_OUT = '@@PROFILE_REDUCER/LOG_OUT_CLEAR_STATE';\n\nexport type ProfileStateType = {\n  _id: string | null;\n  email: string | null;\n  password: string | null;\n  rememberMe: boolean | null;\n  isAdmin: boolean | null;\n  name: string | null;\n  verified: boolean | null;\n  avatar?: string | null;\n  publicCardPacksCount: number | null;\n  token?: string | null;\n  tokenDeathTime?: number | null;\n  resetPasswordToken?: string | null;\n  resetPasswordTokenDeathTime?: number | null;\n  error?: string | null;\n  created: Date | null;\n  updated: Date | null;\n  deviceTokens: Array<DeviceTokenType> | null;\n};\ntype DeviceTokenType = {\n  _id: string;\n  device: string;\n  token: string;\n  tokenDeathTime: number;\n};\n\nconst initProfileState = {\n  _id: null,\n  email: null,\n  name: null,\n  avatar: null,\n  publicCardPacksCount: null, // количество колод\n  created: null,\n  updated: null,\n  isAdmin: null,\n  verified: null, // подтвердил ли почту\n  rememberMe: null,\n  error: null,\n  deviceTokens: null,\n  token: null,\n  tokenDeathTime: null,\n  resetPasswordToken: null,\n  resetPasswordTokenDeathTime: null,\n  password: null,\n};\n\nexport const ProfileReducer = (\n  // eslint-disable-next-line\n  state: ProfileStateType = initProfileState,\n  action: ProfileActionTypes,\n): ProfileStateType => {\n  switch (action.type) {\n    case 'PROFILE_CASE':\n      return {\n        ...state,\n        ...action.data,\n      };\n    case LOG_OUT:\n      return { ...initProfileState };\n    case 'ADD-AVATAR':\n      return { ...state, avatar: action.avatar };\n    default:\n      return state;\n  }\n};\n\nexport const profileAction = (param: {}) =>\n  ({ type: 'PROFILE_CASE', data: param } as const);\nexport const addAvatarAC = (avatar: string) => ({ type: 'ADD-AVATAR', avatar } as const);\nexport const addAvatarTC =\n  (userName: string, avatarUrl: string) =>\n  (dispatch: ThunkDispatch<void, AppRootStateType, AppActionTypes>) => {\n    API.profile\n      .updateAvatar(userName, avatarUrl)\n      .then(res => {\n        dispatch(authMeThunk());\n      })\n      .catch(err => {\n        console.dir({ ...err });\n      });\n  };\n\nexport const LogOutClearState = () => ({ type: LOG_OUT } as const);\n\nexport type AddAvatarType = ReturnType<typeof addAvatarAC>;\nexport type ProfileActionType = ReturnType<typeof profileAction>;\nexport type LogOutActionType = ReturnType<typeof LogOutClearState>;\ntype ProfileActionTypes =\n  | ProfileActionType\n  | LogOutActionType\n  | AddAvatarType\n  | AppActionTypes;\n","export type initAppStateType = {\n  isLoading: boolean;\n  isAppInitializated: boolean;\n  isAuth: boolean;\n};\n\nconst SET_AUTH = '@@APP_REDUCER/SET_AUTH';\nconst SET_APP_INITIALIZATE = '@@APP_REDUCER/SET_APP_INITIALIZATE';\nconst PRELOADER_TOGGLE = '@@APP_REDUCER/PRELOADER_TOGGLE';\nconst initAppState = {\n  isLoading: false,\n  isAppInitializated: false,\n  isAuth: false,\n};\n\nexport const AppReducer = (\n  // eslint-disable-next-line\n  state: initAppStateType = initAppState,\n  action: AppActionTypes,\n): initAppStateType => {\n  switch (action.type) {\n    case SET_APP_INITIALIZATE:\n      return {\n        ...state,\n        isAppInitializated: action.isAppInitializated,\n      };\n    case '@@APP_REDUCER/PRELOADER_TOGGLE':\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    case SET_AUTH:\n      return {\n        ...state,\n        isAuth: action.isAuth,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setAppInitializate = (isAppInitializated: boolean) =>\n  ({\n    type: SET_APP_INITIALIZATE,\n    isAppInitializated,\n  } as const);\n\nexport const preloaderToggle = (isLoading: boolean) =>\n  ({ type: PRELOADER_TOGGLE, isLoading } as const);\n\nexport const setAuth = (isAuth: boolean) =>\n  ({\n    type: SET_AUTH,\n    isAuth,\n  } as const);\n\nexport type AppInitializateActionType = ReturnType<typeof setAppInitializate>;\nexport type setAuthActionType = ReturnType<typeof setAuth>;\nexport type preloaderToggleActionType = ReturnType<typeof preloaderToggle>;\nexport type AppActionTypes =\n  | AppInitializateActionType\n  | setAuthActionType\n  | preloaderToggleActionType;\n","import { Dispatch } from 'redux';\n\nimport { profileAction } from '../../n2-features/f0-test/Profile/Profile-Reducer';\nimport { API } from '../m3-dal';\nimport { ErrorResponseType } from '../m3-dal/ApiResponseTypes';\n\nimport { preloaderToggle, setAppInitializate, setAuth } from './app-reducer';\n\nexport const authMeThunk = () => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.app\n    .getAuth()\n    .then(res => {\n      dispatch(setAuth(true));\n      dispatch(profileAction(res.data));\n      dispatch(preloaderToggle(false));\n      dispatch(setAppInitializate(true));\n    })\n    .catch((err: ErrorResponseType) => {\n      console.dir('get Auth server error', err.response.data.error);\n      dispatch(setAuth(false));\n      dispatch(preloaderToggle(false));\n      dispatch(setAppInitializate(true));\n    });\n};\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\n\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean;\n};\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\n  red,\n  className,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  const finalClassName = `${red ? s.red : s.default} ${className} ${s.button}`;\n  return (\n    <button\n      type=\"button\"\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n};\n","import React from 'react';\n\nimport { SuperButton } from 'n1-main/m1-ui/common';\n\nexport const Demonstration = (): React.ReactElement => (\n  <div>\n    <h1>DEMONSTRATION COMPONENT</h1>\n    <SuperButton>hello button</SuperButton>\n  </div>\n);\n","export default __webpack_public_path__ + \"static/media/Rocket.fc7a629f.jpg\";","export const BASE_ROUTE = '/';\nexport const LOGIN_ROUTE = '/login';\nexport const REG_ROUTE = '/register';\nexport const PROFILE_ROUTE = '/profile';\nexport const RECOVERY_PASS_ROUTE = '/recovery';\nexport const NEW_PASS_ROUTE = '/newpass';\nexport const DEMONSTRATION_ROUTE = '/demonstration';\nexport const RECOVERYPASSWORD_ROUTE = '/set-new-password/:token';\nexport const CARD_PACKS_ROUTE = '/cardpacks';\nexport const NOT_FOUND_ROUTE = '*';\n","import { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { ErrorResponseType } from '../../../n1-main/m3-dal/ApiResponseTypes';\n\nconst REGISTRATION = '@@REGISTRATION_REDUCER/REGISTRATION';\nconst initRegistrationState = {\n  email: '',\n  password: '',\n};\n\nexport const RegistrationReducer = (\n  // eslint-disable-next-line\n  state: initRegistrationStateType = initRegistrationState,\n  action: RegistrationActionType,\n): initRegistrationStateType => {\n  switch (action.type) {\n    case REGISTRATION:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const Registration = (email: string, password: string) =>\n  ({ type: REGISTRATION, payload: { email, password } } as const);\n\nexport const RegistrationThunk =\n  (email: string, password: string) => (dispatch: Dispatch) => {\n    API.registration(email, password)\n      .then(res => {\n        if (res.status === '201') {\n          console.log('registration succsess');\n          dispatch(Registration(email, password));\n        }\n      })\n      .catch((err: ErrorResponseType) => {\n        console.dir(err.response.data.error);\n      });\n  };\n\nexport type RegistrationActionType = ReturnType<typeof Registration>;\nexport type initRegistrationStateType = {\n  email: string;\n  password: string;\n};\n","import React, { FC } from 'react';\n\nimport { ErrorMessage, useField } from 'formik';\n\ntype TextFieldPropsType = {\n  label: string;\n  name: string;\n  type: string;\n};\n\nexport const TextField: FC<TextFieldPropsType> = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <div className=\"mb-2\">\n      <label htmlFor={field.name}>{label}</label>\n      <input\n        className={`form-control shadow-none ${\n          meta.touched && meta.error && 'is-invalid'\n        }`}\n        {...field}\n        {...props}\n        autoComplete=\"off\"\n      />\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Form, Formik } from 'formik';\nimport rocketImg from 'n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\n\nimport { initRegistrationStateType, RegistrationThunk } from './RegistrationReducer';\nimport { TextField } from './TextField';\n\nexport const Registration = (): React.ReactElement => {\n  const regState = useSelector<AppRootStateType, initRegistrationStateType>(\n    state => state.registration,\n  );\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const dispatch = useDispatch();\n  const SignupSchema = yup\n    .object({\n      email: yup.string().email('email is invalid').required('email is required'),\n      password: yup\n        .string()\n        .min(7, 'password must be at least 7 character')\n        .required('password is required'),\n      confirmPassword: yup\n        .string()\n        .oneOf([yup.ref('password'), null], 'password must match')\n        .required('confirm password is required'),\n    })\n    .required();\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              confirmPassword: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              const { email, password } = values;\n              dispatch(RegistrationThunk(email, password));\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">Sign Up</h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <TextField\n                    label=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                  />\n                  <button className=\"btn btn-primary mt-3\" type=\"submit\">\n                    Register\n                  </button>\n                  <button className=\"btn btn-danger mt-3 mx-lg-3\" type=\"reset\">\n                    Reset\n                  </button>\n                </Form>\n                {regState.email.length > 0 ? (\n                  <h1 style={{ color: 'green' }}>\n                    Register successful with e-mail: {regState.email}\n                  </h1>\n                ) : null}\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport '../App.css';\n\nexport const Loader = (): ReactElement => (\n  <div\n    style={{ height: '100vh' }}\n    className=\"row justify-content-center align-items-center\"\n  >\n    <div className=\"lds-hourglass \" />\n  </div>\n);\n","import { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\nimport { API } from '../../../n1-main/m3-dal';\nimport { ErrorResponseType } from '../../../n1-main/m3-dal/ApiResponseTypes';\nimport { LogOutClearState } from '../Profile/Profile-Reducer';\n\nexport const LogOut = () => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.logout\n    .logout()\n    .then(res => {\n      console.dir(res);\n      dispatch(setAuth(false));\n      dispatch(LogOutClearState());\n      dispatch(preloaderToggle(false));\n    })\n    .catch((err: ErrorResponseType) => {\n      console.dir('get Auth server error', err.response.data.error);\n      dispatch(preloaderToggle(false));\n    });\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\nimport { LOGIN_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { LogOut } from '../LogOut/LogOutThunk';\n\nimport { addAvatarTC } from './Profile-Reducer';\nimport style from './profile-style.module.css';\n\nexport const Profile = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const profileState = useSelector((state: AppRootStateType) => state.profile);\n  const userName = useSelector((state: AppRootStateType) => state.profile.name);\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n\n  const isAppInitializated = useSelector<AppRootStateType, boolean>(\n    state => state.app.isAppInitializated,\n  );\n\n  if (!isAppInitializated) {\n    return <Loader />;\n  }\n\n  if (!isAuth) {\n    return <Navigate to={LOGIN_ROUTE} />;\n  }\n\n  const onLogoutClick = (): void => {\n    dispatch(LogOut());\n  };\n\n  const fileUpload = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event && userName) {\n      if (event.currentTarget.files) {\n        const reader = new FileReader();\n        reader.onload = function (e: any) {\n          dispatch(addAvatarTC(userName, e.target.result));\n        };\n        reader.readAsDataURL(event.currentTarget.files[0]);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <span>Profile Component render</span>\n      {isAuth && (\n        <div>\n          <div className={style.containerAvatar}>\n            <img\n              className={style.avatar}\n              src={profileState.avatar ? profileState.avatar : ''}\n              alt=\"\"\n            />\n          </div>\n          <input type=\"file\" onChange={fileUpload} />\n          <h2>My name is: {profileState.name}</h2>\n          <p>Date of Create:{profileState.created}</p>\n          <button onClick={onLogoutClick}>Logout</button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\nimport { LoginPostType } from '../../../n1-main/m3-dal/API';\nimport { ErrorResponseType } from '../../../n1-main/m3-dal/ApiResponseTypes';\nimport { profileAction } from '../Profile/Profile-Reducer';\n\nexport type LoginStateType = {\n  isLogin: boolean;\n};\n\nconst initLoginState = {\n  isLogin: false,\n};\n\nexport const LoginReducer = (\n  // eslint-disable-next-line\n  state: LoginStateType = initLoginState,\n  action: ActionTypes,\n): LoginStateType => {\n  switch (action.type) {\n    case 'LOGIN_CASE':\n      return {\n        ...state,\n        ...action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const LoginAction = (param: {}) => ({ type: 'LOGIN_CASE', data: param } as const);\n\nexport const loginInThunk = (param: LoginPostType) => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.login\n    .login(param)\n    .then(res => {\n      dispatch(setAuth(true));\n      dispatch(profileAction(res.data));\n      dispatch(preloaderToggle(false));\n    })\n    .catch((err: ErrorResponseType) => {\n      console.dir('Login server error', err.response.data.error);\n      dispatch(setAuth(false));\n      dispatch(preloaderToggle(false));\n    });\n};\n\nexport type LoginActionTypes = ReturnType<typeof LoginAction>;\ntype ActionTypes = LoginActionTypes;\n","import React, { ReactElement } from 'react';\n\nimport { Field, Form, Formik } from 'formik';\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { TextField } from '../Registration/TextField';\n\nimport { loginInThunk } from './LoginReducer';\n\nexport const Login = (): ReactElement => {\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const dispatch = useDispatch();\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  const SignupSchema = yup\n    .object({\n      email: yup.string().email('email is invalid').required('email is required'),\n      password: yup\n        .string()\n        .min(7, 'password must be at least 7 character')\n        .required('password is required'),\n    })\n    .required();\n\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              rememberMe: false,\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              // const { email, password, rememberMe } = values;\n              dispatch(loginInThunk(values));\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">LOGIN</h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <div>\n                    <Field type=\"checkbox\" name=\"rememberMe\" />\n                  </div>\n                  <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                    Login\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\n\ntype PropsCheckEmailType = {\n  text: string;\n  email?: string;\n  show: boolean;\n  setShow: (show: boolean) => void;\n};\n\nexport const ModalInfo = (props: PropsCheckEmailType): React.ReactElement => {\n  const email = props.email ? props.email : '';\n  const handleClose = (): void => {\n    props.setShow(false);\n  };\n  return (\n    <Modal show={props.show}>\n      <Modal.Header closeButton>\n        <Modal.Title>Info</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{`${props.text} ${email}`}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\n\ntype PropsCheckEmailType = {\n  error: string;\n  email?: string;\n  show: boolean;\n  setShow: (show: boolean) => void;\n};\n\nexport const ModalError = (props: PropsCheckEmailType): React.ReactElement => {\n  const email = props.email ? props.email : '';\n  const handleClose = (): void => {\n    props.setShow(false);\n  };\n\n  return (\n    <Modal show={props.show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ color: 'red' }}>{`${props.error} ${email}`}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import { AxiosError } from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { ForgetPasswordErrorResp } from './TypeForForgetPasswordResponse';\n\nexport type initRecoveryStateType = {\n  email: string;\n  toggle: boolean;\n  error: string;\n  info: string;\n};\n\nconst initRecoveryState = {\n  email: '',\n  info: '',\n  toggle: false,\n  error: '',\n};\n\nexport const ForGetPasswordReducer = (\n  // eslint-disable-next-line\n  state: initRecoveryStateType = initRecoveryState,\n  action: RecoveryPassTypes,\n): initRecoveryStateType => {\n  switch (action.type) {\n    case 'EMAIL_SET_CASE':\n    case 'TOOGL_SET_CASE':\n    case 'ERROR_SET_CASE':\n    case 'INFO_SET_CASE':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const SetEmailAction = (email: string) =>\n  ({ type: 'EMAIL_SET_CASE', payload: { email } } as const);\n\nexport const SetTooglMailAction = (toggle: boolean) =>\n  ({ type: 'TOOGL_SET_CASE', payload: { toggle } } as const);\nexport const SetErrorAction = (error: string) =>\n  ({ type: 'ERROR_SET_CASE', payload: { error } } as const);\nexport const SetInfoAction = (info: string) =>\n  ({ type: 'INFO_SET_CASE', payload: { info } } as const);\n\nexport const RecoveryPassThunk = (email: string) => (dispatch: Dispatch) => {\n  dispatch(SetEmailAction(email));\n  API.forgetPassword\n    .forgetPassword(email)\n    .then(resp => {\n      dispatch(SetTooglMailAction(true));\n      dispatch(SetInfoAction(resp.data.info));\n    })\n    .catch((err: AxiosError<ForgetPasswordErrorResp>) => {\n      if (err.response?.data.error) dispatch(SetErrorAction(err.response.data.error));\n      if (err.response?.data.email) dispatch(SetEmailAction(err.response?.data.email));\n      dispatch(SetTooglMailAction(true));\n      console.log(err);\n    });\n};\n\nexport type RecoveryPassTypes =\n  | SetEmailActionType\n  | SetTooglMailActionType\n  | SetErrorActionType\n  | SetInfoActionType;\n\nexport type SetEmailActionType = ReturnType<typeof SetEmailAction>;\nexport type SetErrorActionType = ReturnType<typeof SetErrorAction>;\nexport type SetInfoActionType = ReturnType<typeof SetInfoAction>;\nexport type SetTooglMailActionType = ReturnType<typeof SetTooglMailAction>;\n","import React, { useState } from 'react';\n\nimport { Form, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { initRecoveryStateType, RecoveryPassThunk } from './ForgetPassReducer';\n\nexport const ForgetPassword = (): React.ReactElement => {\n  console.log('RecoveryPass Render');\n  const SignupSchema = yup\n    .object({\n      email: yup.string().email('email is invalid').required('email is required'),\n    })\n    .required();\n  const recovereState = useSelector<AppRootStateType, initRecoveryStateType>(\n    state => state.forgetPassword,\n  );\n  const dispatch = useDispatch();\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"container mt-3\" id=\"213213123123\">\n      {recovereState.error && (\n        <ModalError\n          error={recovereState.error}\n          show={show}\n          setShow={setShow}\n          email={recovereState.email}\n        />\n      )}\n      {recovereState.info && (\n        <ModalInfo\n          text={recovereState.info}\n          show={show}\n          setShow={setShow}\n          email={recovereState.email}\n        />\n      )}\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              const { email } = values;\n              dispatch(RecoveryPassThunk(email));\n              setShow(true);\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">\n                  Enter your email please\n                </h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                    Enter\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { AxiosError } from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { RecoveryPasswordErrorResp } from './TypeRecoveryPasswordResponse';\n\nexport type initRecoveryPasswordStateType = {\n  password: string;\n  token: string | undefined;\n  info: string | null;\n  error: string | null;\n};\n\nconst initRecoveryPasswordState = {\n  password: '',\n  token: '',\n  info: null,\n  error: null,\n};\n\nexport const RecoveryPasswordReducer = (\n  // eslint-disable-next-line\n  state: initRecoveryPasswordStateType = initRecoveryPasswordState,\n  action: ActionTypes,\n): initRecoveryPasswordStateType => {\n  switch (action.type) {\n    case 'SET_PASSWORD_CASE':\n    case 'SET_TOKEN_CASE':\n    case 'SET_ERROR_CASE':\n    case 'SET_INFO_CASE': {\n      return { ...state, ...action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setTokenAction = (token: string) =>\n  ({\n    type: 'SET_TOKEN_CASE',\n    payload: { token },\n  } as const);\nexport const setPasswordAction = (password: string) =>\n  ({\n    type: 'SET_PASSWORD_CASE',\n    payload: { password },\n  } as const);\nexport const setErrorAction = (error: string) =>\n  ({\n    type: 'SET_ERROR_CASE',\n    payload: { error },\n  } as const);\nexport const setInfoAction = (info: string) =>\n  ({\n    type: 'SET_INFO_CASE',\n    payload: { info },\n  } as const);\n\nexport const recoveryPasswordThunk =\n  (password: string, token: string) => (dispatch: Dispatch) => {\n    API.forgetPassword\n      .changePasswordOnForget(password, token)\n      .then(res => {\n        dispatch(setInfoAction(res.data.info));\n      })\n      .catch((err: AxiosError<RecoveryPasswordErrorResp>) => {\n        if (err.response?.data.error) dispatch(setErrorAction(err.response.data.error));\n        setTimeout(() => {\n          dispatch(setErrorAction(''));\n        }, 5000);\n      });\n  };\n\nexport type setPasswordActionType = ReturnType<typeof setTokenAction>;\nexport type setTokenActionType = ReturnType<typeof setPasswordAction>;\nexport type setErrorActionType = ReturnType<typeof setErrorAction>;\nexport type setInfoActionType = ReturnType<typeof setInfoAction>;\n\nexport type ActionTypes =\n  | setPasswordActionType\n  | setTokenActionType\n  | setErrorActionType\n  | setInfoActionType;\n","import React, { useEffect, useState } from 'react';\n\nimport { Form, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport {\n  initRecoveryPasswordStateType,\n  recoveryPasswordThunk,\n  setTokenAction,\n} from './RecoveryPasswordReducer';\n\nexport const RecoveryPassword = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const { token } = useParams();\n  useEffect(() => {\n    if (token) dispatch(setTokenAction(token));\n  }, []);\n  const SignupSchema = yup\n    .object({\n      password: yup\n        .string()\n        .min(8, 'password must be at least 8 character')\n        .required('password is required'),\n      confirmPassword: yup\n        .string()\n        .oneOf([yup.ref('password'), null], 'password must match')\n        .required('confirm password is required'),\n    })\n    .required();\n  const { info, error } = useSelector<AppRootStateType, initRecoveryPasswordStateType>(\n    state => state.recoveryPasswordReducer,\n  );\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              password: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={values => {\n              const { password } = values;\n              if (token) {\n                dispatch(recoveryPasswordThunk(password, token));\n                setShow(true);\n              }\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">Create new password</h1>\n                {error && <ModalError error={error} show={show} setShow={setShow} />}\n                {info && <ModalInfo text={info} show={show} setShow={setShow} />}\n                <Form>\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <TextField\n                    label=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                  />\n                  <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                    Accept\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFound = (): React.ReactElement => (\n  <div>\n    <h1>NOT FOUND 404</h1>\n  </div>\n);\n","import React from 'react';\n\nimport { RecoveryPassword } from '../RecoveryPass';\n\nexport const NewPassword = (): React.ReactElement => <RecoveryPassword />;\n","import { axiosInst } from '../../../n1-main/m3-dal/apiConfig';\nimport { ApiResponseTypes } from '../../../n1-main/m3-dal/ApiResponseTypes';\n\nimport { CardPacksType } from './types';\n\nexport const cardPacksAPI = {\n  getCardPacks: () => axiosInst.get<any, ApiResponseTypes<CardPacksType>>('cards/pack'),\n};\n","export const SET_CARD_PACKS = '@@PACKS_REDUCER/SET_CARD_PACKS';\n","import { SET_CARD_PACKS } from './consts';\nimport { CardPacksType } from './types';\n\nconst initCardPacksState = {\n  cardPacks: [\n    {\n      _id: '',\n      user_id: '',\n      user_name: '',\n      private: false,\n      name: '',\n      path: '',\n      cardsCount: 0,\n      grade: 0,\n      shots: 0,\n      rating: 0,\n      type: '',\n      created: '',\n      updated: '',\n      __v: 0,\n    },\n  ],\n  token: '',\n  cardPacksTotalCount: 0,\n  maxCardsCount: 0,\n  minCardsCount: 0,\n  page: 0,\n  pageCount: 0,\n};\n\nexport const CardPacksReducer = (\n  // eslint-disable-next-line\n  state: CardPacksType = initCardPacksState,\n  action: ActionTypes,\n): CardPacksType => {\n  switch (action.type) {\n    case SET_CARD_PACKS: {\n      return { ...state, ...action.payload, cardPacks: action.payload.cardPacks };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const SetCardPacksAC = (payload: CardPacksType) =>\n  ({ type: SET_CARD_PACKS, payload } as const);\n\nexport type CardPacksActionTypes = ReturnType<typeof SetCardPacksAC>;\ntype ActionTypes = CardPacksActionTypes;\n","import { Dispatch } from 'redux';\n\nimport { cardPacksAPI } from './CardsPackAPI';\nimport { SetCardPacksAC } from './PacksReducer';\n\nexport const getCardPacksTC = () => (dispatch: Dispatch) => {\n  cardPacksAPI\n    .getCardPacks()\n    .then(res => {\n      console.dir(res);\n      dispatch(SetCardPacksAC(res.data));\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n","import React, { ReactElement, CSSProperties, ReactNode } from 'react';\n\nexport interface ITableModel {\n  title: (index: number) => ReactNode;\n  render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\n}\n\ninterface ITableProps {\n  // loading: boolean;\n  // error: string;\n  //\n  // logoutCallback: () => void;\n  model: ITableModel[];\n  data: any;\n  headerStyle?: CSSProperties;\n  tableStyle?: CSSProperties;\n  rowsStyle?: CSSProperties;\n  rowStyle?: CSSProperties;\n}\n\nexport const TableCardPacks: React.FC<ITableProps> = ({\n  // loading,\n  // error,\n  // logoutCallback,\n  model,\n  data,\n  headerStyle,\n  tableStyle,\n  rowsStyle,\n  rowStyle,\n}): ReactElement => (\n  <div\n    style={{\n      margin: '0 10px',\n      // minHeight: '80vh',\n      display: 'flex',\n      flexFlow: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      ...tableStyle,\n    }}\n  >\n    table\n    {/* {loading */}\n    {/* ? <div style={{color: 'orange'}}>loading...</div> */}\n    {/*: error */}\n    {/* ? <div style={{color: 'red'}}>{error}</div> */}\n    {/*: <div><br/></div> */}\n    {/* } */}\n    <div\n      style={{\n        border: '1px solid red',\n        width: '100%',\n        display: 'flex',\n        flexFlow: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...headerStyle,\n      }}\n    >\n      {model.map((m: ITableModel, index: number) => m.title(index))}\n    </div>\n    <div\n      style={{\n        border: '1px solid lime',\n        width: '100%',\n        ...rowsStyle,\n      }}\n    >\n      {data.map((dataItem: any, dataIndex: number) => (\n        <div\n          key={dataItem._id || dataIndex}\n          style={{\n            width: '100%',\n            display: 'flex',\n            flexFlow: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            ...rowStyle,\n          }}\n        >\n          {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import { ReactElement, ReactNode } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\n\nimport { getCardPacksTC } from './CardPacksThunk';\nimport { CardTableModel } from './CardTableModel';\nimport { TableCardPacks } from './TableCardPacks';\nimport { CardInPackType, CardPacksType } from './types';\n\nexport const CardPacksContainer = (): ReactElement => {\n  const dispatch = useDispatch();\n  const data = useSelector<AppRootStateType, CardInPackType>(\n    state => state.cardPacks.cardPacks,\n  );\n  const getCardPacksHandler = (): void => {\n    dispatch(getCardPacksTC());\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={getCardPacksHandler}>\n        GET CARD PACKS\n      </button>\n      <TableCardPacks model={CardTableModel()} data={data} />\n    </div>\n  );\n};\n","import { ITableModel } from './TableCardPacks';\n\nexport const CardTableModel = (): ITableModel[] => [\n  {\n    title: (i: number) => (\n      <div key={i} style={{ width: '60%' }}>\n        CardPacks\n      </div>\n    ),\n    render: (d: any, i: number) => (\n      <div key={i} style={{ width: '60%' }}>\n        {d.name}\n      </div>\n    ),\n  },\n];\n","import React from 'react';\n\nimport {\n  Demonstration,\n  ForgetPassword,\n  Login,\n  NewPassword,\n  NotFound,\n  Profile,\n  Registration,\n} from 'n2-features';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { RecoveryPassword } from '../../../n2-features/f0-test/RecoveryPass';\nimport { CardPacksContainer } from '../../../n2-features/f1-table/packs/CardPacksContainer';\n\nimport {\n  BASE_ROUTE,\n  CARD_PACKS_ROUTE,\n  DEMONSTRATION_ROUTE,\n  LOGIN_ROUTE,\n  NEW_PASS_ROUTE,\n  NOT_FOUND_ROUTE,\n  PROFILE_ROUTE,\n  RECOVERY_PASS_ROUTE,\n  RECOVERYPASSWORD_ROUTE,\n  REG_ROUTE,\n} from './consts';\n\nexport const publicRoutes = [\n  {\n    path: BASE_ROUTE,\n    component: <Profile />,\n  },\n  {\n    path: LOGIN_ROUTE,\n    component: <Login />,\n  },\n  {\n    path: REG_ROUTE,\n    component: <Registration />,\n  },\n  {\n    path: PROFILE_ROUTE,\n    component: <Profile />,\n  },\n  {\n    path: RECOVERY_PASS_ROUTE,\n    component: <ForgetPassword />,\n  },\n  {\n    path: NEW_PASS_ROUTE,\n    component: <NewPassword />,\n  },\n  {\n    path: DEMONSTRATION_ROUTE,\n    component: <Demonstration />,\n  },\n  {\n    path: RECOVERYPASSWORD_ROUTE,\n    component: <RecoveryPassword />,\n  },\n  {\n    path: NOT_FOUND_ROUTE,\n    component: <NotFound />,\n  },\n  {\n    path: CARD_PACKS_ROUTE,\n    component: <CardPacksContainer />,\n  },\n];\n\nexport const AppRoutes = (): React.ReactElement => (\n  <Routes>\n    {publicRoutes.map(({ path, component }) => (\n      <Route key={path} path={path} element={component} />\n    ))}\n  </Routes>\n);\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { AppRootStateType } from '../../m2-bll';\nimport { initAppStateType } from '../../m2-bll/app-reducer';\nimport { publicRoutes } from '../routes';\nimport { LOGIN_ROUTE, RECOVERYPASSWORD_ROUTE } from '../routes/consts';\n\nimport style from './Header.module.css';\n\nexport const Header = (): React.ReactElement => {\n  const isAuth = useSelector((state: AppRootStateType) => state.app.isAuth);\n  const variate = publicRoutes.map(({ path }) =>\n    isAuth && path === LOGIN_ROUTE ? (\n      ''\n    ) : (\n      <NavLink className={style.Link} key={path} to={path}>\n        {' '}\n        <span style={{ padding: '5px' }}>{path}</span>\n      </NavLink>\n    ),\n  );\n\n  return (\n    <div className={style.dropdown}>\n      <div className={style.DropButton}>\n        <div className={style.middleLine} />\n      </div>\n      <div className={style.DropdownContent}>{variate}</div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { authMeThunk } from '../m2-bll/AppThunks';\n\nimport { Header } from './header';\nimport { AppRoutes } from './routes';\n\nexport const Main = (): React.ReactElement => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authMeThunk());\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <AppRoutes />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './App.css';\n\nimport { Main } from './Main';\n\nexport const App = (): React.ReactElement => (\n  <div className=\"App\">\n    <Main />\n  </div>\n);\n","export type initErrorStateType = {\n  isError: boolean;\n  textError: string;\n};\n\nconst SET_ERROR = '@@APP_REDUCER/SET_ERROR';\nconst RESET_ERROR = '@@APP_REDUCER/RESET_ERROR';\n\nconst initErrorState = {\n  isError: false,\n  textError: '',\n};\n\nexport const ErrorReducer = (\n  // eslint-disable-next-line\n  state: initErrorStateType = initErrorState,\n  action: ErrorActionTypes,\n): initErrorStateType => {\n  switch (action.type) {\n    case SET_ERROR:\n      return {\n        ...state,\n        isError: action.isError,\n        textError: action.textError,\n      };\n    case RESET_ERROR:\n      return {\n        ...state,\n        isError: false,\n        textError: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setError = (isError: boolean, textError: string) =>\n  ({\n    type: SET_ERROR,\n    isError,\n    textError,\n  } as const);\n\nexport const resetError = () =>\n  ({\n    type: RESET_ERROR,\n  } as const);\n\nexport type setErrorActionType = ReturnType<typeof setError>;\nexport type resetErrorActionType = ReturnType<typeof resetError>;\nexport type ErrorActionTypes = setErrorActionType | resetErrorActionType;\n","import {\n  ForGetPasswordReducer,\n  RecoveryPasswordReducer,\n} from 'n2-features/f0-test/RecoveryPass';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { LoginReducer } from '../../n2-features/f0-test';\nimport { ProfileReducer } from '../../n2-features/f0-test/Profile/Profile-Reducer';\nimport { RegistrationReducer } from '../../n2-features/f0-test/Registration/RegistrationReducer';\nimport { CardPacksReducer } from '../../n2-features/f1-table/packs/PacksReducer';\n\nimport { AppReducer } from './app-reducer';\nimport { ErrorReducer } from './ErrorReducer';\n\nconst rootReducer = combineReducers({\n  app: AppReducer,\n  error: ErrorReducer,\n  login: LoginReducer,\n  // newPassword: NewPassowdReducer,\n  profile: ProfileReducer,\n  forgetPassword: ForGetPasswordReducer,\n  registration: RegistrationReducer,\n  recoveryPasswordReducer: RecoveryPasswordReducer,\n  cardPacks: CardPacksReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n\n// @ts-ignore\nwindow.store = store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './n1-main/m1-ui/App';\nimport { store } from './n1-main/m2-bll';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Header_dropdown__2keX3\",\"DropButton\":\"Header_DropButton__1MGSb\",\"middleLine\":\"Header_middleLine__39Xas\",\"DropdownContent\":\"Header_DropdownContent__3HFgI\",\"Link\":\"Header_Link___xrk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2vf1J\",\"red\":\"SuperButton_red__12zn9\",\"button\":\"SuperButton_button__3mVpS\",\"blink\":\"SuperButton_blink__WVCCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerAvatar\":\"profile-style_containerAvatar__1k6OI\",\"avatar\":\"profile-style_avatar__1bW1-\"};"],"sourceRoot":""}