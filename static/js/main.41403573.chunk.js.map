{"version":3,"sources":["n1-main/m2-bll/app-reducer.ts","n1-main/m2-bll/ErrorReducer.ts","n1-main/m3-dal/apiConfig/index.ts","n1-main/m3-dal/API.ts","n2-features/f0-test/Profile/Profile-Reducer.tsx","n1-main/m2-bll/AppThunks.ts","n1-main/m1-ui/common/Loader.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f0-test/Demonstration/Demonstration.tsx","n1-main/m1-ui/routes/consts.ts","n2-features/f0-test/modalWindow/ModaInfo.tsx","n2-features/f0-test/modalWindow/ModalError.tsx","n2-features/f0-test/Registration/girl.png","n2-features/f0-test/Registration/TextField.tsx","n2-features/f0-test/Registration/Registration.tsx","n2-features/f0-test/EditableSpan/EditableSpan.tsx","n2-features/f0-test/LogOut/LogOutThunk.ts","n2-features/f0-test/Profile/Profile.tsx","n1-main/m1-ui/common/anime_girl_login2.png","n2-features/f0-test/Login/Login.tsx","n2-features/f0-test/Login/LoginReducer.tsx","n2-features/f0-test/Login/LoginContainer.tsx","n2-features/f0-test/ForgetPassword/ForgetPassReducer.ts","n1-main/m1-ui/common/anime_girl_forgot_password.png","n2-features/f0-test/ForgetPassword/ForgetPassword.tsx","n2-features/f0-test/ForgetPassword/ForgetPasswordContainer.tsx","n2-features/f0-test/NotFound/NotFound.tsx","n1-main/m1-ui/common/assets/Rocket.jpg","n2-features/f0-test/RecoveryPass/RecoveryPassword.tsx","n2-features/f0-test/RecoveryPass/RecoveryPasswordReducer.ts","n2-features/f0-test/RecoveryPass/RecoveryPasswordContainer.tsx","n2-features/f0-test/NewPassword/NewPassword.tsx","n2-features/f1-table/cards/CardsAPI.ts","n2-features/f1-table/cards/CardsReducer.ts","n2-features/f1-table/cards/AddAndUpdateCardModal.tsx","n2-features/f0-test/modalWindow/ModalConfirm/ModuleConfirmReducer.tsx","n2-features/f0-test/modalWindow/ModalConfirm/ModalConfirm.tsx","n2-features/f1-table/cards/CardsTableModelCards.tsx","n2-features/f1-table/cards/TableCardCards.tsx","n2-features/f1-table/cards/CardsContainer.tsx","n2-features/f0-test/Registration/RegistrationReducer.tsx","n2-features/f0-test/Registration/RegistrationContainer.tsx","n2-features/f1-table/packs/CardsPackAPI.ts","n2-features/f1-table/packs/consts.ts","n2-features/f1-table/packs/PacksReducer.tsx","n2-features/f1-table/packs/SortPacks.tsx","n2-features/f1-table/packs/CardTableModel.tsx","n2-features/f1-table/packs/pagination/Pagination.tsx","n2-features/f1-table/packs/pagination/createPage.ts","n2-features/f1-table/packs/SearchNamePack.tsx","n2-features/f1-table/packs/SearchDebaunceHook.tsx","n2-features/f1-table/packs/RangeDebaunceHook.tsx","n2-features/f1-table/packs/SearchRange.tsx","n2-features/f1-table/packs/TableCardPacks.tsx","n2-features/f1-table/packs/CardPacksContainer.tsx","n2-features/f1-table/packs/CardPacksThunk.ts","n2-features/gamePlay/Bll/PlayCardReducer.ts","n2-features/gamePlay/GradeButton.tsx","n2-features/gamePlay/PlayCard.tsx","n2-features/gamePlay/PlayGround.tsx","n2-features/gamePlay/function/pseudoRandom.ts","n1-main/m1-ui/routes/AppRoutes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","reportWebVitals.ts","index.tsx","n2-features/gamePlay/playGround.module.scss","n2-features/f0-test/Profile/profile-style.module.scss","n1-main/m1-ui/header/Header.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css"],"names":["SET_AUTH","SET_APP_INITIALIZATE","initAppState","isLoading","isAppInitializated","isAuth","setAppInitializate","type","preloaderToggle","setAuth","initErrorState","Error","textError","Info","textInfo","setError","payload","setInfo","axiosInst","axios","create","baseURL","withCredentials","API","updateAvatar","userName","avatarUrl","put","name","avatar","updateUserName","getAuth","post","login","params","logout","delete","forgetPassword","email","from","message","changePasswordOnForget","password","token","resetPasswordToken","LOG_OUT","initProfileState","_id","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","deviceTokens","tokenDeathTime","resetPasswordTokenDeathTime","profileAction","param","data","authMeThunk","dispatch","then","res","catch","err","isAxiosError","response","Loader","className","style","height","width","src","alt","SuperButton","red","restProps","finalClassName","s","default","button","Demonstration","LOGIN_ROUTE","REG_ROUTE","PROFILE_ROUTE","RECOVERY_PASS_ROUTE","NEW_PASS_ROUTE","CARD_PACKS_ROUTE","ModalInfo","props","useDispatch","Modal","show","Header","closeButton","Title","Body","text","Footer","Button","variant","onClick","ModalError","React","memo","handleClose","onHide","color","TextField","label","useField","field","meta","htmlFor","touched","autoComplete","component","Registration","to","initialValues","confirmPassword","validationSchema","SignupSchema","onSubmit","values","callback","regState","girlImg","EditableSpan","useState","title","setTitle","editMode","setEditMode","offEditMode","thunk","display","alignItems","autoFocus","value","onKeyPress","e","key","onChange","currentTarget","marginLeft","cursor","role","preserveAspectRatio","viewBox","d","fill","LogOut","Profile","profileState","useSelector","state","profile","app","profileContainer","avatarContainer","boxAvatar","boxUploadButton","uploadButton","event","files","reader","FileReader","onload","toJSON","addAvatarTC","target","result","readAsDataURL","descriptionContainer","descriptionBox","titleName","changeUserNameTC","description","Login","margin","FormCheckInput","rocketImg","initLoginState","isLogin","yup","required","min","LoginContainer","initRecoveryState","toggle","SetEmailAction","SetTooglMailAction","ForgetPassword","id","ForgetPasswordContainer","recovereState","resp","info","RecoveryPassThunk","NotFound","RecoveryPassword","initRecoveryPasswordState","oneOf","RecoveryPasswordContainer","useParams","useEffect","setTokenAction","recoveryPasswordThunk","NewPassword","cardsAPI","get","cardsPack_id","card","idCard","pageCount","initCardsState","cards","cardsTotalCount","maxGrade","minGrade","packUserId","page","_idPackCards","add","modalType","cardsId","grade","ShowCardModalAC","UpdateCardsThunk","question","answer","updateCard","updatedCard","console","log","finally","AddAndUpdateCardModal","setSubmitting","newCard","onReset","errors","handleChange","handleBlur","handleSubmit","isSubmitting","handleReset","Form","Group","controlId","Label","Control","onBlur","placeholder","as","rows","disabled","ModuleConfirmState","stateShow","ChangeModalShowStatusAC","statusShow","ModalConfirm","modalConfirm","callBack","CardsTableModelCards","onClickDeleteCardCallBack","DeleteCardAC","deletedCard","onClickHandlerCardType","i","render","borderRadius","TableCardCards","loading","model","headerStyle","tableStyle","rowsStyle","rowStyle","flexFlow","justifyContent","border","padding","map","m","index","dataItem","dataIndex","modelIndex","CardsContainer","cardPackId","navigate","useNavigate","packId","SetCardsAC","length","REGISTRATION","initRegistrationState","RegistrationThunk","RegistrationContainer","registration","cardPacksAPI","getPacksCommonRequestParams","cardsPack","path","shots","rating","deckCover","private","SET_CARD_PACKS","initCardPacksState","cardPacks","user_id","user_name","cardsCount","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","filter","SetCardPacksAC","SetDisabledPacksAC","SetFilterPacksAC","SortButtons","sortTypeUp","sortTypeDown","flexDirection","dir","CardTableModel","searchValue","useRef","ChangeHandler","current","onClickHandler","newCardsPack","onClickHandlerPackNameChange","packName","ChangePackNameAC","updatedCardsPack","ChangePackNameThunk","callBackForDeletePackThunk","DeletePackAC","deletedCardsPack","DeletePackThunk","onClickHandlerCards","PaginationComponent","activePage","pageCardsTotal","totalCards","items","pagesItem","pagesTotalCount","activPage","push","createPages","Math","ceil","Pagination","Item","active","SearchNamePack","search","setSearch","debaunceSearch","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useSearchDebounce","useRangeDebounce","SearchRange","searchedMinValue","setSearchedMinValue","searchedMaxValue","setSearchedMaxValue","changeRangeValue","max","Number","debauncedMinRangeValue","debauncedMaxRangeValue","Range","TableCardPacks","background","CardPacksContainer","userId","searchRange","setSearchRange","setPackName","userID","setUserID","sortPacks","marginTop","checked","initPlayCardState","SetPlayCardThunk","setPlayCardStateAC","GradeButton","gradeName","gradeNumber","PlayCard","flipCard","setFlipCard","onHandlerGradeUpdate","UpgradeCardGradeThunk","cardShowContainer","flipBox","cardFront","cardFrontFlip","titleQuestion","ratingGradeWrap","cardGrade","ratingButContainer","butContainer","cardBack","cardBackFlip","PlayGround","idPack","arr","RandomArr","element","reduce","acc","item","sum","random","floor","pseudoRandom","playCard","publicRoutes","AppRoutes","packLogic","Link","mainNav","DropButton","middleLine","mainNavLink","Main","App","isloading","document","onkeydown","keyCode","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","rootReducer","combineReducers","action","recoveryPasswordReducer","el","store","createStore","applyMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","getElementById","module","exports"],"mappings":"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","file":"static/js/main.41403573.chunk.js","sourcesContent":["export type initAppStateType = {\n  isLoading: boolean;\n  isAppInitializated: boolean;\n  isAuth: boolean;\n};\n\nconst SET_AUTH = '@@APP_REDUCER/SET_AUTH';\nconst SET_APP_INITIALIZATE = '@@APP_REDUCER/SET_APP_INITIALIZATE';\nconst PRELOADER_TOGGLE = '@@APP_REDUCER/PRELOADER_TOGGLE';\nconst initAppState = {\n  isLoading: false,\n  isAppInitializated: false,\n  isAuth: false,\n};\n\nexport const AppReducer = (\n  // eslint-disable-next-line\n  state: initAppStateType = initAppState,\n  action: AppActionTypes,\n): initAppStateType => {\n  switch (action.type) {\n    case SET_APP_INITIALIZATE:\n      return {\n        ...state,\n        isAppInitializated: action.isAppInitializated,\n      };\n    case '@@APP_REDUCER/PRELOADER_TOGGLE':\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    case SET_AUTH:\n      return {\n        ...state,\n        isAuth: action.isAuth,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setAppInitializate = (isAppInitializated: boolean) =>\n  ({\n    type: SET_APP_INITIALIZATE,\n    isAppInitializated,\n  } as const);\n\nexport const preloaderToggle = (isLoading: boolean) =>\n  ({ type: PRELOADER_TOGGLE, isLoading } as const);\n\nexport const setAuth = (isAuth: boolean) =>\n  ({\n    type: SET_AUTH,\n    isAuth,\n  } as const);\n\nexport type AppInitializateActionType = ReturnType<typeof setAppInitializate>;\nexport type setAuthActionType = ReturnType<typeof setAuth>;\nexport type preloaderToggleActionType = ReturnType<typeof preloaderToggle>;\nexport type AppActionTypes =\n  | AppInitializateActionType\n  | setAuthActionType\n  | preloaderToggleActionType;\n","export type initErrorStateType = {\n  textError: string;\n  textInfo: string;\n  Error: boolean;\n  Info: boolean;\n};\n\nconst initErrorState = {\n  Error: false,\n  textError: '',\n  Info: false,\n  textInfo: '',\n};\n\nexport const ErrorReducer = (\n  state: initErrorStateType = initErrorState,\n  action: ErrorActionTypes,\n): initErrorStateType => {\n  switch (action.type) {\n    case 'RESET_ERROR':\n    case 'RESET_All':\n    case 'RESET_INFO':\n    case 'SET_ERROR':\n    case 'SET_INFO':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setError = (Error: boolean, textError: string) =>\n  ({\n    type: 'SET_ERROR',\n    payload: { Error, textError },\n  } as const);\nexport const setInfo = (Info: boolean, textInfo: string) =>\n  ({\n    type: 'SET_INFO',\n    payload: { Info, textInfo },\n  } as const);\n\nexport const resetAll = () =>\n  ({\n    type: 'RESET_All',\n    payload: {\n      Error: false,\n      textError: '',\n      Info: false,\n      textInfo: '',\n    },\n  } as const);\nexport const resetError = () =>\n  ({\n    type: 'RESET_ERROR',\n    payload: {\n      Error: false,\n    },\n  } as const);\nexport const resetInfo = () =>\n  ({\n    type: 'RESET_INFO',\n    payload: {\n      Info: false,\n    },\n  } as const);\n\nexport type setErrorActionType = ReturnType<typeof setError>;\nexport type setInfoActionType = ReturnType<typeof setInfo>;\nexport type resetErrorActionType = ReturnType<typeof resetError>;\nexport type resetAllActionType = ReturnType<typeof resetAll>;\nexport type resetInfoActionType = ReturnType<typeof resetInfo>;\nexport type ErrorActionTypes =\n  | setErrorActionType\n  | setInfoActionType\n  | resetErrorActionType\n  | resetInfoActionType\n  | resetAllActionType;\n","import axios from 'axios';\n\nconst settings = {\n  withCredentials: true,\n  // headers: {\n  //   'API-KEY': process.env.REACT_APP_API_KEY,\n  // },\n};\n\nexport const axiosInst = axios.create({\n  baseURL: 'https://neko-back.herokuapp.com/2.0',\n  // process.env.REACT_APP_BASE_URL,\n  ...settings,\n});\n","import axios, { AxiosResponse } from 'axios';\nimport { ProfileStateType } from 'n2-features/f0-test/Profile/Profile-Reducer';\n\nimport {\n  ForgetPasswordResp,\n  PostForgetPasswordReq,\n} from '../../n2-features/f0-test/ForgetPassword/TypeForForgetPasswordResponse';\nimport {\n  PostRecoveryPasswordReq,\n  RecoveryPasswordResp,\n} from '../../n2-features/f0-test/RecoveryPass/TypeRecoveryPasswordResponse';\n\nimport { axiosInst } from './apiConfig';\nimport {\n  ApiResponseTypes,\n  DeleteResponseType,\n  UserDataResponseType,\n} from './ApiResponseTypes';\n\nexport type LoginPostType = { email: string; password: string; rememberMe: boolean };\nexport const API = {\n  profile: {\n    updateAvatar: (userName: string, avatarUrl: string) =>\n      axiosInst.put('/auth/me', { name: userName, avatar: avatarUrl }),\n    updateUserName: (userName: string) =>\n      axiosInst.put<string, AxiosResponse<ProfileStateType>>('/auth/me', {\n        name: userName,\n      }),\n  },\n  app: {\n    getAuth: () =>\n      axiosInst.post<null, ApiResponseTypes<UserDataResponseType>>('auth/me', {}),\n  },\n  login: {\n    login: (params: LoginPostType) =>\n      axiosInst.post<LoginPostType, AxiosResponse<ProfileStateType>>(\n        'auth/login',\n        params,\n      ),\n  },\n  logout: {\n    logout: () => axiosInst.delete<{}, AxiosResponse<DeleteResponseType>>('auth/me', {}),\n  },\n  forgetPassword: {\n    forgetPassword: (email: string) =>\n      axios.post<PostForgetPasswordReq, AxiosResponse<ForgetPasswordResp>>(\n        'https://neko-back.herokuapp.com/2.0/auth/forgot',\n        {\n          email,\n          from: 'test-front-admin <ai73a@yandex.by>',\n          message:\n            '\\n<div style=\"background-color: lime; padding: 15px\">\\npassword recovery link: \\n<a href=\\'https://neko-back.herokuapp.com/2.0/#/set-new-password/$token$\\'>link</a>\\n</div>\\n',\n        },\n      ),\n    changePasswordOnForget: (password: string, token: string) =>\n      axiosInst.post<PostRecoveryPasswordReq, AxiosResponse<RecoveryPasswordResp>>(\n        'auth/set-new-password',\n        { resetPasswordToken: token, password },\n      ),\n  },\n  registration: (email: string, password: string) =>\n    axiosInst.post<\n      { email: string; password: string },\n      ApiResponseTypes<UserDataResponseType>\n    >('auth/register', { email, password }),\n};\n","import axios from 'axios';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { AppActionTypes, preloaderToggle } from '../../../n1-main/m2-bll/app-reducer';\nimport { authMeThunk } from '../../../n1-main/m2-bll/AppThunks';\nimport { ErrorActionTypes, setError } from '../../../n1-main/m2-bll/ErrorReducer';\nimport { API } from '../../../n1-main/m3-dal';\n\nconst LOG_OUT = '@@PROFILE_REDUCER/LOG_OUT_CLEAR_STATE';\n\nexport type ProfileStateType = {\n  _id: string | null;\n  email: string | null;\n  password: string | null;\n  rememberMe: boolean | null;\n  isAdmin: boolean | null;\n  name: string | null;\n  verified: boolean | null;\n  avatar?: string | null;\n  publicCardPacksCount: number | null;\n  token?: string | null;\n  tokenDeathTime?: number | null;\n  resetPasswordToken?: string | null;\n  resetPasswordTokenDeathTime?: number | null;\n  error?: string | null;\n  created: Date | null;\n  updated: Date | null;\n  deviceTokens: Array<DeviceTokenType> | null;\n};\ntype DeviceTokenType = {\n  _id: string;\n  device: string;\n  token: string;\n  tokenDeathTime: number;\n};\n\nconst initProfileState = {\n  _id: null,\n  email: null,\n  name: null,\n  avatar: null,\n  publicCardPacksCount: null, // количество колод\n  created: null,\n  updated: null,\n  isAdmin: null,\n  verified: null, // подтвердил ли почту\n  rememberMe: null,\n  error: null,\n  deviceTokens: null,\n  token: null,\n  tokenDeathTime: null,\n  resetPasswordToken: null,\n  resetPasswordTokenDeathTime: null,\n  password: null,\n};\n\nexport const ProfileReducer = (\n  // eslint-disable-next-line\n  state: ProfileStateType = initProfileState,\n  action: ProfileActionTypes,\n): ProfileStateType => {\n  switch (action.type) {\n    case 'PROFILE_CASE':\n      return {\n        ...state,\n        ...action.data,\n      };\n    case LOG_OUT:\n      return { ...initProfileState };\n    case 'ADD-AVATAR':\n      return { ...state, avatar: action.avatar };\n    case 'CHANGE-USERNAME':\n      return { ...state, name: action.userName };\n    default:\n      return state;\n  }\n};\n\nexport const profileAction = (param: {}) =>\n  ({ type: 'PROFILE_CASE', data: param } as const);\nexport const changeUserNameAC = (userName: string) =>\n  ({ type: 'CHANGE-USERNAME', userName } as const);\nexport const addAvatarAC = (avatar: string) => ({ type: 'ADD-AVATAR', avatar } as const);\nexport const addAvatarTC =\n  (userName: string, avatarUrl: string) =>\n  (\n    dispatch: ThunkDispatch<void, AppRootStateType, AppActionTypes | ErrorActionTypes>,\n  ) => {\n    API.profile\n      .updateAvatar(userName, avatarUrl)\n      .then(() => {\n        dispatch(authMeThunk());\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(setError(true, err.response.data.error));\n        }\n        dispatch(setError(true, err.toJSON().message));\n      });\n  };\nexport const changeUserNameTC =\n  (userName: string) =>\n  (dispatch: ThunkDispatch<void, AppRootStateType, AppActionTypes>) => {\n    dispatch(preloaderToggle(true));\n    API.profile\n      .updateUserName(userName)\n      .then(() => {\n        dispatch(authMeThunk());\n        dispatch(preloaderToggle(false));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(preloaderToggle(false));\n        }\n      });\n  };\n\nexport const LogOutClearState = () => ({ type: LOG_OUT } as const);\n\nexport type AddAvatarType = ReturnType<typeof addAvatarAC>;\nexport type ProfileActionType = ReturnType<typeof profileAction>;\nexport type LogOutActionType = ReturnType<typeof LogOutClearState>;\nexport type ChangeUserNameType = ReturnType<typeof changeUserNameAC>;\ntype ProfileActionTypes =\n  | ProfileActionType\n  | LogOutActionType\n  | AddAvatarType\n  | ChangeUserNameType\n  | AppActionTypes;\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { profileAction } from '../../n2-features/f0-test/Profile/Profile-Reducer';\nimport { API } from '../m3-dal';\n\nimport { preloaderToggle, setAppInitializate, setAuth } from './app-reducer';\n\nexport const authMeThunk = () => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.app\n    .getAuth()\n    .then(res => {\n      dispatch(profileAction(res.data));\n      dispatch(preloaderToggle(false));\n      dispatch(setAppInitializate(true));\n      dispatch(setAuth(true));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setAuth(false));\n        dispatch(preloaderToggle(false));\n        dispatch(setAppInitializate(true));\n      }\n    });\n};\n","import React, { ReactElement } from 'react';\nimport '../App.css';\n\nexport const Loader = (): ReactElement => (\n  <div className=\"row justify-content-center align-items-center\">\n    <img\n      style={{ height: '300px', width: '400px' }}\n      src=\"https://thumbs.gfycat.com/BouncyWelcomeGrassspider-max-1mb.gif\"\n      alt=\"Nyan Loader\"\n    />\n  </div>\n);\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\n\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean;\n};\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\n  red,\n  className,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  const finalClassName = `${red ? s.red : s.default} ${className} ${s.button}`;\n  return (\n    <button\n      type=\"button\"\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n};\n","import React from 'react';\n\nimport { SuperButton } from 'n1-main/m1-ui/common';\n\nexport const Demonstration = (): React.ReactElement => (\n  <div>\n    <h1>DEMONSTRATION COMPONENT</h1>\n    <SuperButton>hello button</SuperButton>\n  </div>\n);\n","export const BASE_ROUTE = '/';\nexport const LOGIN_ROUTE = '/login';\nexport const REG_ROUTE = '/register';\nexport const PROFILE_ROUTE = '/profile';\nexport const RECOVERY_PASS_ROUTE = '/recovery';\nexport const NEW_PASS_ROUTE = '/newpass';\nexport const DEMONSTRATION_ROUTE = '/demonstration';\nexport const RECOVERYPASSWORD_ROUTE = '/set-new-password/:token';\nexport const CARD_PACKS_ROUTE = '/cardpacks';\nexport const CARDS_ROUTE = '/cards/:packId';\nexport const NOT_FOUND_ROUTE = '*';\nexport const PLAY_CARDS_ROUTE = '/playcard/:idPack';\n","import React from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { resetInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\ntype PropsCheckEmailType = {\n  text: string;\n  email?: string;\n};\n\nexport const ModalInfo = (props: PropsCheckEmailType): React.ReactElement => {\n  const dispatch = useDispatch();\n  const email = props.email ? props.email : '';\n  const handleClose = (): void => {\n    dispatch(resetInfo());\n  };\n  return (\n    <Modal show>\n      <Modal.Header closeButton>\n        <Modal.Title>Info</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{`${props.text} ${email}`}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\n\nimport { resetError } from '../../../n1-main/m2-bll/ErrorReducer';\n\ntype PropsCheckEmailType = {\n  error: string;\n  email?: string;\n};\n\nexport const ModalError = React.memo((props: PropsCheckEmailType): React.ReactElement => {\n  const email = props.email ? props.email : '';\n  const dispatch = useDispatch();\n  const handleClose = (): void => {\n    dispatch(resetError());\n  };\n\n  return (\n    <Modal show onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ color: 'red' }}>{`${props.error} ${email}`}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/girl.36fbb42a.png\";","import React, { FC } from 'react';\n\nimport { ErrorMessage, useField } from 'formik';\n\ntype TextFieldPropsType = {\n  label: string;\n  name: string;\n  type: string;\n};\n\nexport const TextField: FC<TextFieldPropsType> = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <div className=\"mb-2\">\n      <label htmlFor={field.name}>{label}</label>\n      <input\n        className={`form-control shadow-none ${\n          meta.touched && meta.error && 'is-invalid'\n        }`}\n        {...field}\n        {...props}\n        autoComplete=\"off\"\n      />\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Form, Formik } from 'formik';\nimport { Navigate } from 'react-router-dom';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\n\nimport girlImg from './girl.png';\nimport { SignupSchemaRegistrationType } from './RegistrationContainer';\nimport { TextField } from './TextField';\n\ntype RegistrationPropsType = {\n  textError: string;\n  Info: boolean;\n  textInfo: string;\n  Error: boolean;\n  isAuth: boolean;\n  SignupSchema: SignupSchemaRegistrationType;\n  callback: (email: string, password: string) => void;\n  regState: { email: string; password: string };\n};\nexport const Registration = (props: RegistrationPropsType): React.ReactElement => {\n  if (props.isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              confirmPassword: '',\n            }}\n            validationSchema={props.SignupSchema}\n            onSubmit={values => {\n              const { email, password } = values;\n              props.callback(email, password);\n            }}\n          >\n            {() => (\n              <div>\n                {props.Error && (\n                  <ModalError error={props.textError} email={props.regState.email} />\n                )}\n                {props.Info && (\n                  <ModalInfo text={props.textInfo} email={props.regState.email} />\n                )}\n                <h1 className=\"my-4 font-weght-bold display-4\">Sign Up</h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <TextField\n                    label=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                  />\n                  <button className=\"btn btn-primary mt-3\" type=\"submit\">\n                    Register\n                  </button>\n                  <button className=\"btn btn-danger mt-3 mx-lg-3\" type=\"reset\">\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img\n            style={{ height: '835px' }}\n            className=\"img-fluid w-75 \"\n            src={girlImg}\n            alt=\"rocket\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\n\nexport type PropsType = {\n  name: string;\n  thunk: (params: string) => void;\n};\n\nexport const EditableSpan = (props: PropsType): React.ReactElement => {\n  const [title, setTitle] = useState<string>(props.name);\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const onEditMode = (): void => {\n    setEditMode(true);\n  };\n  const offEditMode = (): void => {\n    setEditMode(false);\n    props.thunk(title);\n  };\n  const onKeyHandler = (e: KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      offEditMode();\n    }\n  };\n\n  const onTitleChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    setTitle(e.currentTarget.value);\n  };\n\n  return editMode ? (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <input\n        /* eslint-disable-next-line jsx-a11y/no-autofocus */\n        autoFocus\n        value={title}\n        onKeyPress={onKeyHandler}\n        onChange={onTitleChangeHandler}\n      />\n      <button\n        style={{ marginLeft: '10px' }}\n        onClick={offEditMode}\n        type=\"button\"\n        className=\"btn btn-outline-dark\"\n      >\n        Update\n      </button>\n    </div>\n  ) : (\n    <span>\n      {title}\n      <svg\n        onClick={onEditMode}\n        style={{ cursor: 'pointer' }}\n        aria-hidden=\"true\"\n        role=\"img\"\n        width=\"30\"\n        height=\"30\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        viewBox=\"0 0 1024 1024\"\n      >\n        <path\n          d=\"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 0 0 0-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 0 0 9.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3l-362.7 362.6l-88.9 15.7l15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  );\n};\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\nimport { API } from '../../../n1-main/m3-dal';\nimport { ErrorResponseType } from '../../../n1-main/m3-dal/ApiResponseTypes';\nimport { LogOutClearState } from '../Profile/Profile-Reducer';\n\nexport const LogOut = () => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.logout\n    .logout()\n    .then(() => {\n      dispatch(setAuth(false));\n      dispatch(LogOutClearState());\n      dispatch(preloaderToggle(false));\n    })\n    .catch((err: ErrorResponseType) => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(preloaderToggle(false));\n      }\n    });\n};\n","import React, { ChangeEvent, useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, NavLink } from 'react-router-dom';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\nimport { LOGIN_ROUTE, NEW_PASS_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initAppStateType } from '../../../n1-main/m2-bll/app-reducer';\nimport { EditableSpan } from '../EditableSpan/EditableSpan';\nimport { LogOut } from '../LogOut/LogOutThunk';\n\nimport { addAvatarTC, changeUserNameTC } from './Profile-Reducer';\nimport style from './profile-style.module.scss';\n\nexport const Profile = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const profileState = useSelector((state: AppRootStateType) => state.profile);\n  const userName = useSelector((state: AppRootStateType) => state.profile.name);\n  const { isAuth, isAppInitializated } = useSelector<AppRootStateType, initAppStateType>(\n    state => state.app,\n  );\n\n  const onLogoutClick = (): void => {\n    dispatch(LogOut());\n  };\n\n  const fileUpload = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event && userName) {\n      if (event.currentTarget.files) {\n        const reader = new FileReader();\n        reader.onload = function (e: any) {\n          dispatch(addAvatarTC(userName, e.target.result));\n        };\n        reader.readAsDataURL(event.currentTarget.files[0]);\n      }\n    }\n  };\n  const handlerChangeNickName = (name: string): void => {\n    dispatch(changeUserNameTC(name));\n  };\n\n  // if (!isAppInitializated) {\n  //   return <Loader />;\n  // }\n\n  if (!isAuth) {\n    return <Navigate to={LOGIN_ROUTE} />;\n  }\n  return (\n    <div className={style.profileContainer}>\n      <div className={style.avatarContainer}>\n        {isAuth && (\n          <div className={style.boxAvatar}>\n            <img\n              className={style.avatar}\n              src={profileState.avatar ? profileState.avatar : ''}\n              alt=\"profileAvatar\"\n            />\n            <div className={style.boxUploadButton}>\n              <input className={style.uploadButton} type=\"file\" onChange={fileUpload} />\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={style.descriptionContainer}>\n        <div className={style.descriptionBox}>\n          <h2 className={style.titleName}>\n            {' '}\n            <EditableSpan name={userName!} thunk={handlerChangeNickName} />\n          </h2>\n          <p className={style.description}>Date of Create:{profileState.created}</p>\n          <NavLink to={NEW_PASS_ROUTE}>Change Password</NavLink>\n          <button\n            style={{ width: 'max-content' }}\n            onClick={onLogoutClick}\n            type=\"button\"\n            className=\"btn btn-danger btn-sm\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/anime_girl_login2.8b3ecfef.png\";","import React, { ReactElement } from 'react';\n\nimport { Field, Form, Formik } from 'formik';\nimport { FormCheck } from 'react-bootstrap';\nimport FormCheckInput from 'react-bootstrap/FormCheckInput';\nimport { useSelector } from 'react-redux';\nimport { Navigate, NavLink } from 'react-router-dom';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/anime_girl_login2.png';\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\nimport { PROFILE_ROUTE, RECOVERY_PASS_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { SignupSchemaLoginType } from './LoginContainer';\n\ntype LoginPropsType = {\n  Error: boolean;\n  isAuth: boolean;\n  textError: string;\n  SignupSchema: SignupSchemaLoginType;\n  callback: (values: { email: string; password: string; rememberMe: boolean }) => void;\n};\n\nexport const Login = (props: LoginPropsType): ReactElement => {\n  const isAppInitializated = useSelector<AppRootStateType, boolean>(\n    state => state.app.isAppInitializated,\n  );\n\n  if (!isAppInitializated) {\n    return <Loader />;\n  }\n  if (props.isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\">\n      {props.Error && <ModalError error={props.textError} />}\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              rememberMe: false,\n            }}\n            validationSchema={props.SignupSchema}\n            onSubmit={values => {\n              props.callback(values);\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">LOGIN</h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                  <div>\n                    {/* <FormCheck label=\"remember me\" type=\"checkbox\" name=\"rememberMe\" /> */}\n\n                    <div\n                      className=\"custom-control custom-checkbox\"\n                      style={{ margin: '20px 0px' }}\n                    >\n                      <FormCheckInput name=\"rememberMe\" type=\"checkbox\" />\n                      <label\n                        className=\"custom-control-label\"\n                        style={{ marginLeft: '5px' }}\n                        htmlFor=\"rememberMe\"\n                      >\n                        remember me\n                      </label>\n                    </div>\n                  </div>\n                  <NavLink\n                    style={{ display: 'block', margin: '10px 0px' }}\n                    to={RECOVERY_PASS_ROUTE}\n                  >\n                    Forgot Password\n                  </NavLink>\n                  <button className=\"btn btn-primary mt-3\" type=\"submit\">\n                    Login\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div style={{ height: '92.1vh' }} className=\"col-md-7 my-auto\">\n          <img\n            style={{ height: '100%' }}\n            className=\"img-fluid w-75\"\n            src={rocketImg}\n            alt=\"rocket\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\nimport { setError } from '../../../n1-main/m2-bll/ErrorReducer';\nimport { LoginPostType } from '../../../n1-main/m3-dal/API';\nimport { profileAction } from '../Profile/Profile-Reducer';\n\nexport type LoginStateType = {\n  isLogin: boolean;\n};\n\nconst initLoginState = {\n  isLogin: false,\n};\n\nexport const LoginReducer = (\n  // eslint-disable-next-line\n  state: LoginStateType = initLoginState,\n  action: ActionTypes,\n): LoginStateType => {\n  switch (action.type) {\n    case 'LOGIN_CASE':\n      return {\n        ...state,\n        ...action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const LoginAction = (param: {}) => ({ type: 'LOGIN_CASE', data: param } as const);\n\nexport const loginInThunk = (param: LoginPostType) => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  API.login\n    .login(param)\n    .then(res => {\n      dispatch(setAuth(true));\n      dispatch(profileAction(res.data));\n      dispatch(preloaderToggle(false));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setAuth(false));\n        dispatch(preloaderToggle(false));\n        dispatch(setError(true, err.response.data.error));\n      }\n      dispatch(setError(true, err.toJSON().message));\n    });\n};\n\nexport type LoginActionTypes = ReturnType<typeof LoginAction>;\ntype ActionTypes = LoginActionTypes;\n","import React, { ReactElement } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { LOGIN_ROUTE, PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { Login } from './Login';\nimport { loginInThunk } from './LoginReducer';\n\nconst SignupSchema = yup\n  .object({\n    email: yup.string().email('email is invalid').required('email is required'),\n    password: yup\n      .string()\n      .min(8, 'password must be at least 8 character')\n      .required('password is required'),\n  })\n  .required();\n\nexport type SignupSchemaLoginType = typeof SignupSchema;\n\nexport const LoginContainer = (): ReactElement => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  const callback = (values: {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n  }): void => {\n    dispatch(loginInThunk(values));\n  };\n  const { Error, textError } = useSelector<AppRootStateType, initErrorStateType>(\n    state => state.error,\n  );\n  return (\n    <Login\n      isAuth={isAuth}\n      Error={Error}\n      textError={textError}\n      callback={values => callback(values)}\n      SignupSchema={SignupSchema}\n    />\n  );\n};\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { setError, setInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\nexport type initRecoveryStateType = {\n  email: string;\n  toggle: boolean;\n};\n\nconst initRecoveryState = {\n  email: '',\n  toggle: false,\n};\n\nexport const ForGetPasswordReducer = (\n  // eslint-disable-next-line\n  state: initRecoveryStateType = initRecoveryState,\n  action: RecoveryPassTypes,\n): initRecoveryStateType => {\n  switch (action.type) {\n    case 'EMAIL_SET_CASE':\n    case 'TOOGL_SET_CASE':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const SetEmailAction = (email: string) =>\n  ({ type: 'EMAIL_SET_CASE', payload: { email } } as const);\n\nexport const SetTooglMailAction = (toggle: boolean) =>\n  ({ type: 'TOOGL_SET_CASE', payload: { toggle } } as const);\n\nexport const RecoveryPassThunk = (email: string) => (dispatch: Dispatch) => {\n  dispatch(SetEmailAction(email));\n  API.forgetPassword\n    .forgetPassword(email)\n    .then(resp => {\n      dispatch(SetTooglMailAction(true));\n      dispatch(setInfo(true, resp.data.info));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setError(true, err.response.data.error));\n        dispatch(SetEmailAction(err.response?.data.email));\n        dispatch(SetTooglMailAction(true));\n      }\n      dispatch(setError(true, err.toJSON().message));\n    });\n};\n\nexport type RecoveryPassTypes = SetEmailActionType | SetTooglMailActionType;\n\nexport type SetEmailActionType = ReturnType<typeof SetEmailAction>;\nexport type SetTooglMailActionType = ReturnType<typeof SetTooglMailAction>;\n","export default __webpack_public_path__ + \"static/media/anime_girl_forgot_password.86d398ac.png\";","import React from 'react';\n\nimport { Form, Formik } from 'formik';\nimport { Navigate } from 'react-router-dom';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/anime_girl_forgot_password.png';\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { SignupShemForgetPasswordType } from './ForgetPasswordContainer';\n\ntype ForgetPasswordPropsType = {\n  Info: boolean;\n  textInfo: string;\n  isAuth: boolean;\n  Error: boolean;\n  email: string;\n  textError: string;\n  SignupSchema: SignupShemForgetPasswordType;\n  callback: (email: string) => void;\n};\nexport const ForgetPassword = (props: ForgetPasswordPropsType): React.ReactElement => {\n  if (props.isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <div className=\"container mt-3\" id=\"213213123123\">\n      {props.Error && <ModalError error={props.textError} email={props.email} />}\n      {props.Info && <ModalInfo text={props.textInfo} email={props.email} />}\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <Formik\n            initialValues={{\n              email: '',\n            }}\n            validationSchema={props.SignupSchema}\n            onSubmit={values => {\n              const { email } = values;\n              props.callback(email);\n            }}\n          >\n            {() => (\n              <div>\n                <h1 className=\"my-4 font-weght-bold display-4\">\n                  Enter your email please\n                </h1>\n                <Form>\n                  <TextField label=\"E-mail\" name=\"email\" type=\"text\" />\n                  <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                    Enter\n                  </button>\n                  <button\n                    style={{ marginLeft: '20px' }}\n                    className=\"btn btn-danger mt-3\"\n                    type=\"reset\"\n                  >\n                    Reset\n                  </button>\n                </Form>\n              </div>\n            )}\n          </Formik>\n        </div>\n        <div className=\"col-md-7 my-auto\">\n          <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { initRecoveryStateType, RecoveryPassThunk } from './ForgetPassReducer';\nimport { ForgetPassword } from './ForgetPassword';\n\nexport type SignupShemForgetPasswordType = typeof SignupSchema;\nconst SignupSchema = yup\n  .object({\n    email: yup.string().email('email is invalid').required('email is required'),\n  })\n  .required();\nexport const ForgetPasswordContainer = (): React.ReactElement => {\n  const recovereState = useSelector<AppRootStateType, initRecoveryStateType>(\n    state => state.forgetPassword,\n  );\n  const { Error, textError, Info, textInfo } = useSelector<\n    AppRootStateType,\n    initErrorStateType\n  >(state => state.error);\n  const dispatch = useDispatch();\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const callback = (email: string): void => {\n    dispatch(RecoveryPassThunk(email));\n  };\n\n  return (\n    <ForgetPassword\n      Info={Info}\n      textInfo={textInfo}\n      callback={email => callback(email)}\n      SignupSchema={SignupSchema}\n      textError={textError}\n      Error={Error}\n      isAuth={isAuth}\n      email={recovereState.email}\n    />\n  );\n};\n","import React from 'react';\n\nexport const NotFound = (): React.ReactElement => (\n  <div>\n    <h1>NOT FOUND 404</h1>\n  </div>\n);\n","export default __webpack_public_path__ + \"static/media/Rocket.fc7a629f.jpg\";","import React from 'react';\n\nimport { Form, Formik } from 'formik';\n\nimport rocketImg from '../../../n1-main/m1-ui/common/assets/Rocket.jpg';\nimport { ModalInfo } from '../modalWindow/ModaInfo';\nimport { ModalError } from '../modalWindow/ModalError';\nimport { TextField } from '../Registration/TextField';\n\nimport { SignupSchemaRecoveryPasswordType } from './RecoveryPasswordContainer';\n\ntype RecoveryPasswordPropsType = {\n  Info: boolean;\n  textInfo: string;\n  Error: boolean;\n  textError: string;\n  SignupSchema: SignupSchemaRecoveryPasswordType;\n  callback: (password: string) => void;\n};\nexport const RecoveryPassword = (\n  props: RecoveryPasswordPropsType,\n): React.ReactElement => (\n  <div className=\"container mt-3\">\n    <div className=\"row\">\n      <div className=\"col-md-5\">\n        <Formik\n          initialValues={{\n            password: '',\n          }}\n          validationSchema={props.SignupSchema}\n          onSubmit={values => {\n            const { password } = values;\n            props.callback(password);\n          }}\n        >\n          {() => (\n            <div>\n              <h1 className=\"my-4 font-weght-bold display-4\">Create new password</h1>\n              {props.Error && <ModalError error={props.textError} />}\n              {props.Info && <ModalInfo text={props.textInfo} />}\n              <Form>\n                <TextField label=\"Password\" name=\"password\" type=\"password\" />\n                <TextField\n                  label=\"Confirm password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                />\n                <button className=\"btn btn-dark mt-3\" type=\"submit\">\n                  Accept\n                </button>\n                <button\n                  style={{ marginLeft: '20px' }}\n                  className=\"btn btn-danger mt-3\"\n                  type=\"reset\"\n                >\n                  Reset\n                </button>\n              </Form>\n            </div>\n          )}\n        </Formik>\n      </div>\n      <div className=\"col-md-7 my-auto\">\n        <img className=\"img-fluid w-75\" src={rocketImg} alt=\"rocket\" />\n      </div>\n    </div>\n  </div>\n);\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { setError, setInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\nexport type initRecoveryPasswordStateType = {\n  password: string;\n  token: string | undefined;\n};\n\nconst initRecoveryPasswordState = {\n  password: '',\n  token: '',\n};\n\nexport const RecoveryPasswordReducer = (\n  // eslint-disable-next-line\n  state: initRecoveryPasswordStateType = initRecoveryPasswordState,\n  action: ActionTypes,\n): initRecoveryPasswordStateType => {\n  switch (action.type) {\n    case 'SET_PASSWORD_CASE':\n    case 'SET_TOKEN_CASE': {\n      return { ...state, ...action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setTokenAction = (token: string) =>\n  ({\n    type: 'SET_TOKEN_CASE',\n    payload: { token },\n  } as const);\nexport const setPasswordAction = (password: string) =>\n  ({\n    type: 'SET_PASSWORD_CASE',\n    payload: { password },\n  } as const);\n\nexport const recoveryPasswordThunk =\n  (password: string, token: string) => (dispatch: Dispatch) => {\n    API.forgetPassword\n      .changePasswordOnForget(password, token)\n      .then(res => {\n        dispatch(setInfo(true, res.data.info));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(setError(true, err.response.data.error));\n        }\n        dispatch(setError(true, err.toJSON().message));\n      });\n  };\n\nexport type setPasswordActionType = ReturnType<typeof setTokenAction>;\nexport type setTokenActionType = ReturnType<typeof setPasswordAction>;\n\nexport type ActionTypes = setPasswordActionType | setTokenActionType;\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { RecoveryPassword } from './RecoveryPassword';\nimport { recoveryPasswordThunk, setTokenAction } from './RecoveryPasswordReducer';\n\nconst SignupSchema = yup\n  .object({\n    password: yup\n      .string()\n      .min(8, 'password must be at least 8 character')\n      .required('password is required'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'password must match')\n      .required('confirm password is required'),\n  })\n  .required();\n\nexport type SignupSchemaRecoveryPasswordType = typeof SignupSchema;\n\nexport const RecoveryPasswordContainer = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const { token } = useParams();\n  useEffect(() => {\n    if (token) dispatch(setTokenAction(token));\n  }, []);\n  const callback = (password: string): void => {\n    if (token) {\n      dispatch(recoveryPasswordThunk(password, token));\n    }\n  };\n\n  const { Info, Error, textInfo, textError } = useSelector<\n    AppRootStateType,\n    initErrorStateType\n  >(state => state.error);\n  return (\n    <RecoveryPassword\n      callback={callback}\n      Info={Info}\n      textInfo={textInfo}\n      Error={Error}\n      textError={textError}\n      SignupSchema={SignupSchema}\n    />\n  );\n};\n","import React from 'react';\n\nimport { RecoveryPasswordContainer } from '../RecoveryPass';\n\nexport const NewPassword = (): React.ReactElement => <RecoveryPasswordContainer />;\n","import { AxiosResponse } from 'axios';\n\nimport { axiosInst } from '../../../n1-main/m3-dal/apiConfig';\n\nimport { CardType } from './CardsReducer';\n\nexport const cardsAPI = {\n  getCards: (id: string) =>\n    axiosInst.get<string, AxiosResponse<ResponseCardsType>>('cards/card', {\n      params: { cardsPack_id: id },\n    }),\n  addCards: (card: AddCard) =>\n    axiosInst.post<AddCard, AxiosResponse<AddCardResponseType>>('cards/card', { card }),\n  deleteCard: (idCard: string) =>\n    axiosInst.delete<string, AxiosResponse<DeleteCard>>('cards/card', {\n      params: { id: idCard },\n    }),\n  updateCard: (card: UpdateCardType) =>\n    axiosInst.put<UpdateCardType, AxiosResponse<UpdatedCardType>>('cards/card', { card }),\n  updateCardGrade: (card: UpdateCardGradeType) =>\n    axiosInst.put<UpdateCardType, AxiosResponse<UpdatedCardType>>('cards/card', { card }),\n  getAllCards: (id: string, pageCount: number) =>\n    axiosInst.get<any, AxiosResponse<ResponseCardsType>>('cards/card', {\n      params: { cardsPack_id: id, pageCount },\n    }),\n};\n\nexport type AddCardResponseType = {\n  newCard: CardType;\n  token: string;\n  tokenDeathTime: number;\n};\n\nexport type ResponseCardsType = {\n  cards: Array<CardType>;\n  cardsTotalCount: number;\n  maxGrade: number;\n  minGrade: number;\n  packUserId: string;\n  page: number;\n  pageCount: number;\n  token: string;\n  tokenDeathTime: number;\n};\n\nexport type AddCard = {\n  // eslint-disable-next-line camelcase\n  cardsPack_id: string;\n  question?: string;\n  answer?: string;\n  grade?: number;\n  shots?: number;\n  rating?: number;\n  answerImg?: string;\n  questionImg?: string;\n  questionVideo?: string;\n  answerVideo?: string;\n  type?: string;\n};\nexport type DeleteCard = {\n  deletedCard: {\n    answer: string;\n    // eslint-disable-next-line camelcase\n    cardsPack_id: string;\n    comments: string;\n    created: string;\n    grade: number;\n    // eslint-disable-next-line camelcase\n    more_id: string;\n    question: string;\n    rating: number;\n    shots: number;\n    type: string;\n    updated: string;\n    // eslint-disable-next-line camelcase\n    user_id: string;\n    __v: number;\n    _id: string;\n  };\n  token: string;\n  tokenDeathTime: number;\n};\nexport type UpdatedCardType = {\n  updatedCard: UpgradeCards;\n  token: string;\n  tokenDeathTime: number;\n};\nexport type UpdateCardType = {\n  _id: string;\n  question: string;\n  answer: string;\n};\nexport type UpdateCardGradeType = {\n  _id: string;\n  grade: number;\n};\nexport type UpgradeCards = {\n  answer: string;\n  answerImg: string;\n  answerVideo: string;\n  // eslint-disable-next-line camelcase\n  cardsPack_id: string;\n  comments: string;\n  created: string;\n  grade: number;\n  // eslint-disable-next-line camelcase\n  more_id: string;\n  question: string;\n  questionImg: string;\n  questionVideo: string;\n  rating: number;\n  shots: number;\n  type: string;\n  updated: string;\n  // eslint-disable-next-line camelcase\n  user_id: string;\n  __v: number;\n  _id: string;\n};\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle } from '../../../n1-main/m2-bll/app-reducer';\n\nimport { cardsAPI, UpdateCardType, UpgradeCards } from './CardsAPI';\n\nexport const initCardsState: initCardsStateType = {\n  cards: null,\n  cardsTotalCount: null,\n  maxGrade: null,\n  minGrade: null,\n  packUserId: null,\n  page: null,\n  pageCount: null,\n  token: null,\n  tokenDeathTime: null,\n  _idPackCards: null,\n  add: false,\n  modalType: '',\n  cardsId: null,\n  grade: null,\n};\nexport type initCardsStateType = {\n  cards: Array<CardType> | null;\n  cardsTotalCount: number | null;\n  maxGrade: number | null;\n  minGrade: number | null;\n  packUserId: string | null;\n  page: number | null;\n  pageCount: number | null;\n  token: string | null;\n  tokenDeathTime: number | null;\n  _idPackCards: string | null;\n  add?: boolean;\n  modalType?: ModalType;\n  // eslint-disable-next-line camelcase\n  cardsId?: string | null;\n  grade?: number | null;\n};\n\nexport type ModalType = 'Add Card' | 'Update Card' | '';\nexport type CardType = {\n  answer: string | null;\n  // eslint-disable-next-line camelcase\n  cardsPack_id: string | null;\n  comments: string | null;\n  created: string | null;\n  grade: number | null;\n  // eslint-disable-next-line camelcase\n  more_id: string | null;\n  question: string | null;\n  rating: number | null;\n  shots: number | null;\n  type: string | null;\n  updated: string | null;\n  // eslint-disable-next-line camelcase\n  user_id: string | null;\n  __v: number | null;\n  _id: string | null;\n};\nexport const CardsReducer = (\n  state: initCardsStateType = initCardsState,\n  action: ActionTypes,\n): initCardsStateType => {\n  switch (action.type) {\n    case 'SET-CARDS': {\n      return { ...state, ...action.data };\n    }\n    case 'SHOW-CARD-MODAL': {\n      return { ...state, ...action.payload };\n    }\n    case 'ADD-CARDS': {\n      return { ...state, cards: [...state.cards!, action.newCard] };\n    }\n    case 'DELETE-CARD':\n      return {\n        ...state,\n        cards: state.cards!.filter(element => element._id !== action.id),\n      };\n    case 'UPDATE-CARDS': {\n      return {\n        ...state,\n        cards: state.cards!.map(el =>\n          el._id === action.updateCard._id\n            ? {\n                ...el,\n                question: action.updateCard.question,\n                answer: action.updateCard.answer,\n              }\n            : el,\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const ShowCardModalAC = (add: boolean, modalType: ModalType, cardsId?: string) =>\n  ({\n    type: 'SHOW-CARD-MODAL',\n    payload: { add, modalType, cardsId },\n  } as const);\nexport const UpdateGradeAC = (card: UpgradeCards) =>\n  ({\n    type: 'UPDATE-GRADE-CARD',\n    card,\n  } as const);\nconst SetCardsAC = (data: initCardsStateType) =>\n  ({\n    type: 'SET-CARDS',\n    data,\n  } as const);\n\nconst AddCardsAC = (newCard: CardType) =>\n  ({\n    type: 'ADD-CARDS',\n    newCard,\n  } as const);\nconst UpdateCardsAC = (updateCard: UpdateCardType) =>\n  ({\n    type: 'UPDATE-CARDS',\n    updateCard,\n  } as const);\nexport const DeleteCardAC = (id: string) => ({ type: 'DELETE-CARD', id } as const);\n\nexport const GetCardsThunk = (id: string) => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  cardsAPI\n    .getCards(id)\n    .then(resp => {\n      const data = { ...resp.data, _idPackCards: id };\n      dispatch(SetCardsAC(data));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        console.log(err.response.data);\n      }\n    })\n    .finally(() => {\n      dispatch(preloaderToggle(false));\n    });\n};\n\nexport const AddCardsThunk =\n  (id: string, answer: string, question: string) => (dispatch: Dispatch) => {\n    dispatch(preloaderToggle(true));\n    const card = {\n      cardsPack_id: id,\n      answer,\n      question,\n    };\n    cardsAPI\n      .addCards(card)\n      .then(resp => {\n        dispatch(AddCardsAC(resp.data.newCard));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          console.log(err.response.data);\n        }\n      })\n      .finally(() => {\n        dispatch(preloaderToggle(false));\n      });\n  };\nexport const UpdateCardsThunk =\n  (id: string, question: string, answer: string) => (dispatch: Dispatch) => {\n    dispatch(preloaderToggle(true));\n    const card = {\n      _id: id,\n      question,\n      answer,\n    };\n    cardsAPI\n      .updateCard(card)\n      .then(resp => {\n        dispatch(UpdateCardsAC(resp.data.updatedCard));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          console.log(err.response.data);\n        }\n      })\n      .finally(() => {\n        dispatch(preloaderToggle(false));\n      });\n  };\n\nexport const DeleteCardThunk = (id: string) => (dispatch: Dispatch) => {\n  dispatch(preloaderToggle(true));\n  cardsAPI\n    .deleteCard(id)\n    .then(resp => {\n      dispatch(DeleteCardAC(resp.data.deletedCard._id));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        console.log(err.response.data);\n      }\n    })\n    .finally(() => {\n      dispatch(preloaderToggle(false));\n    });\n};\n\nexport type AddShowCardModalACType = ReturnType<typeof ShowCardModalAC>;\ntype SetCardsACType = ReturnType<typeof SetCardsAC>;\ntype AddCardsACType = ReturnType<typeof AddCardsAC>;\ntype DeleteCardACType = ReturnType<typeof DeleteCardAC>;\ntype UpdateCardACType = ReturnType<typeof UpdateCardsAC>;\n\ntype ActionTypes =\n  | SetCardsACType\n  | AddShowCardModalACType\n  | AddCardsACType\n  | DeleteCardACType\n  | UpdateCardACType;\n","import React, { FC } from 'react';\n\nimport { Formik } from 'formik';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\n\nimport {\n  AddCardsThunk,\n  initCardsStateType,\n  ShowCardModalAC,\n  UpdateCardsThunk,\n} from './CardsReducer';\n\nexport const AddAndUpdateCardModal = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const { _idPackCards, add, modalType, cards, cardsId } = useSelector<\n    AppRootStateType,\n    initCardsStateType\n  >(state => state.cards);\n  const SignupSchema = yup\n    .object({\n      answer: yup\n        .string()\n        .min(3, 'answer must be at least 3 character')\n        .required('answer is required'),\n      question: yup\n        .string()\n        .min(1, 'question must be at least 1 character')\n        .required('confirm question is required'),\n    })\n    .required();\n  return (\n    <Modal show={add}>\n      <Modal.Header>\n        <Modal.Title>{modalType}</Modal.Title>\n      </Modal.Header>\n      <Formik\n        initialValues={{ answer: '', question: '' }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          setSubmitting(true);\n          if (modalType === 'Add Card') {\n            dispatch(AddCardsThunk(_idPackCards!, values.answer, values.question));\n          } else {\n            dispatch(UpdateCardsThunk(cardsId!, values.question, values.answer));\n          }\n          dispatch(ShowCardModalAC(false, ''));\n        }}\n        onReset={() => {\n          dispatch(ShowCardModalAC(false, ''));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          handleReset,\n          /* and other goodies */\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Body>\n              <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Question</Form.Label>\n                <Form.Control\n                  type=\"question\"\n                  name=\"question\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.question}\n                  placeholder=\"Input question please\"\n                />\n                {errors.question && touched.question && errors.question}\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label> Answer</Form.Label>\n                <Form.Control\n                  type=\"answer\"\n                  name=\"answer\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.answer}\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Input answer please\"\n                />\n                {errors.answer && touched.answer && errors.answer}\n              </Form.Group>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" type=\"reset\" onClick={handleReset}>\n                Close\n              </Button>\n              <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                Apply\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n","type ModuleConfirmStateType = {\n  stateShow: boolean;\n};\nconst ModuleConfirmState = {\n  stateShow: false,\n};\nexport const ModalConfirmReducer = (\n  // eslint-disable-next-line\n  state: ModuleConfirmStateType = ModuleConfirmState,\n  action: ModuleConfirmActionTypes,\n): ModuleConfirmStateType => {\n  switch (action.type) {\n    case 'CHANGE-STATUS-SHOW': {\n      return { ...state, stateShow: action.statusShow };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const ChangeModalShowStatusAC = (statusShow: boolean) =>\n  ({ type: 'CHANGE-STATUS-SHOW', statusShow } as const);\nexport const ChangeModalAgreeStatusAC = (agree: boolean) =>\n  ({ type: 'CHANGE-STATUS-AGREE', agree } as const);\n\ntype ModuleConfirmActionTypes =\n  | ReturnType<typeof ChangeModalShowStatusAC>\n  | ReturnType<typeof ChangeModalAgreeStatusAC>;\n","import React, { useState } from 'react';\n\nimport { Button, Modal } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppRootStateType } from '../../../../n1-main/m2-bll';\n\nimport { ChangeModalShowStatusAC } from './ModuleConfirmReducer';\n\ntype ModalConfirmType = {\n  callBack: () => void;\n  title: string;\n};\nexport const ModalConfirm = (props: ModalConfirmType): React.ReactElement => {\n  const dispatch = useDispatch();\n  const stateShow = useSelector<AppRootStateType>(state => state.modalConfirm.stateShow);\n  const yes = (): void => {\n    props.callBack();\n    dispatch(ChangeModalShowStatusAC(false));\n  };\n  const no = (): void => {\n    dispatch(ChangeModalShowStatusAC(false));\n  };\n  return (\n    <Modal show={stateShow}>\n      <Modal.Header>\n        <Modal.Title>Do you want to delete {props.title}</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={yes}>\n          Yes\n        </Button>\n        <Button variant=\"danger\" onClick={no}>\n          No\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { EditableSpan } from '../../f0-test/EditableSpan/EditableSpan';\nimport { ModalConfirm } from '../../f0-test/modalWindow/ModalConfirm/ModalConfirm';\nimport { ChangeModalShowStatusAC } from '../../f0-test/modalWindow/ModalConfirm/ModuleConfirmReducer';\n\nimport {\n  CardType,\n  DeleteCardThunk,\n  ModalType,\n  ShowCardModalAC,\n  UpdateCardsThunk,\n} from './CardsReducer';\nimport { ITableModel } from './TableCardCards';\n\nexport const CardsTableModelCards = (): ITableModel[] => {\n  const dispatch = useDispatch();\n  const onClickDeleteCardCallBack = (idCard: string): void => {\n    dispatch(DeleteCardThunk(idCard));\n  };\n  const onClickHandlerCardType = (modalType: ModalType, cardsId?: string): void => {\n    dispatch(ShowCardModalAC(true, modalType, cardsId));\n  };\n  const onUpdateCardQuestion = (id: string, question: string, answer: string): void => {\n    dispatch(UpdateCardsThunk(id, question, answer));\n  };\n  return [\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Cards question</b>\n        </div>\n      ),\n\n      render: (d: CardType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <EditableSpan\n            name={d.question!}\n            thunk={(title: string) =>\n              onUpdateCardQuestion(d._id!, title, 'hello mutherasd')\n            }\n          />\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Cards Answer</b>\n        </div>\n      ),\n      render: (d: CardType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.answer}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Update Cards</b>\n        </div>\n      ),\n      render: (d: CardType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.updated}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <b>Grade</b>\n        </div>\n      ),\n      render: (d: CardType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.grade}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <button\n            className=\"btn-sm btn btn-primary\"\n            style={{ marginLeft: '20px', borderRadius: '5%' }}\n            onClick={() => onClickHandlerCardType('Add Card')}\n          >\n            Add new cards\n          </button>\n        </div>\n      ),\n      render: (d: CardType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <ModalConfirm title=\"Pack\" callBack={() => onClickDeleteCardCallBack(d._id!)} />\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-danger\"\n            onClick={() => dispatch(ChangeModalShowStatusAC(true))}\n          >\n            Delete\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            style={{ marginLeft: '10px' }}\n            onClick={() => onClickHandlerCardType('Update Card', d._id!)}\n          >\n            Update Card\n          </button>\n        </div>\n      ),\n    },\n  ];\n};\n","import React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\n\nexport interface ITableModel {\n  title: (index: number) => ReactNode;\n  render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\n}\n\ninterface ITableProps {\n  loading: boolean;\n  // error: string;\n  //\n  // logoutCallback: () => void;\n  model: ITableModel[];\n  data: any;\n  headerStyle?: CSSProperties;\n  tableStyle?: CSSProperties;\n  rowsStyle?: CSSProperties;\n  rowStyle?: CSSProperties;\n  disabled: boolean;\n}\n\nexport const TableCardCards: React.FC<ITableProps> = ({\n  loading,\n  // error,\n  // logoutCallback,\n  model,\n  data,\n  headerStyle,\n  tableStyle,\n  rowsStyle,\n  rowStyle,\n  disabled,\n}): ReactElement => {\n  if (loading) return <Loader />;\n  return (\n    <div\n      style={{\n        margin: '0 10px',\n        // minHeight: '80vh',\n        display: 'flex',\n        flexFlow: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...tableStyle,\n      }}\n    >\n      <h2>CARDS</h2>\n      <div\n        style={{\n          border: '1px solid grey',\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          margin: '5px',\n          padding: '10px',\n          ...headerStyle,\n        }}\n      >\n        {model.map((m: ITableModel, index: number) => m.title(index))}\n      </div>\n      {disabled ? (\n        <Loader />\n      ) : (\n        <table\n          className=\"table table-striped\"\n          style={{\n            border: '1px solid grey',\n            width: '100%',\n            margin: '20px',\n            padding: '10px',\n            ...rowsStyle,\n          }}\n        >\n          {data.map((dataItem: any, dataIndex: number) => (\n            <tr\n              key={dataItem._id || dataIndex}\n              style={{\n                padding: '8px',\n                width: '100%',\n                display: 'flex',\n                flexFlow: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n                ...rowStyle,\n              }}\n            >\n              {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\n            </tr>\n          ))}\n        </table>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\n\nimport { AddAndUpdateCardModal } from './AddAndUpdateCardModal';\nimport { GetCardsThunk, initCardsStateType } from './CardsReducer';\nimport { CardsTableModelCards } from './CardsTableModelCards';\nimport { TableCardCards } from './TableCardCards';\n\nexport const CardsContainer = (): React.ReactElement => {\n  const data = useSelector<AppRootStateType, initCardsStateType>(state => state.cards);\n  const loading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n  const cardPackId = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (cardPackId.packId) {\n      dispatch(GetCardsThunk(cardPackId.packId));\n    }\n  }, []);\n  const onClickStartGame = (): void => {\n    navigate(`/playcard/${cardPackId.packId}`);\n  };\n  if (!data.cards) {\n    return <Loader />;\n  }\n  return (\n    <div>\n      <Button disabled={loading || data.cards?.length === 0} onClick={onClickStartGame}>\n        Play Game\n      </Button>\n      <AddAndUpdateCardModal />\n      <TableCardCards\n        loading={false}\n        model={CardsTableModelCards()}\n        data={data.cards}\n        disabled={loading}\n      />\n      <Button disabled={loading} onClick={() => navigate(-1)}>\n        Back\n      </Button>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { API } from 'n1-main/m3-dal';\nimport { Dispatch } from 'redux';\n\nimport { setError, setInfo } from '../../../n1-main/m2-bll/ErrorReducer';\n\nconst REGISTRATION = '@@REGISTRATION_REDUCER/REGISTRATION';\nconst initRegistrationState = {\n  email: '',\n  password: '',\n};\n\nexport const RegistrationReducer = (\n  // eslint-disable-next-line\n  state: initRegistrationStateType = initRegistrationState,\n  action: RegistrationActionType,\n): initRegistrationStateType => {\n  switch (action.type) {\n    case REGISTRATION:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const Registration = (email: string, password: string) =>\n  ({ type: REGISTRATION, payload: { email, password } } as const);\n\nexport const RegistrationThunk =\n  (email: string, password: string) => (dispatch: Dispatch) => {\n    API.registration(email, password)\n      .then(() => {\n        dispatch(setInfo(true, 'registration succsess'));\n        dispatch(Registration(email, password));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          dispatch(setError(true, err.response.data.error));\n        }\n        dispatch(setError(true, err.toJSON().message));\n      });\n  };\n\nexport type RegistrationActionType = ReturnType<typeof Registration>;\nexport type initRegistrationStateType = {\n  email: string;\n  password: string;\n};\n","import React from 'react';\n\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { PROFILE_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { Registration } from './Registration';\nimport { initRegistrationStateType, RegistrationThunk } from './RegistrationReducer';\n\nconst SignupSchema = yup\n  .object({\n    email: yup.string().email('email is invalid').required('email is required'),\n    password: yup\n      .string()\n      .min(8, 'password must be at least 8 character')\n      .required('password is required'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'password must match')\n      .required('confirm password is required'),\n  })\n  .required();\n\nexport type SignupSchemaRegistrationType = typeof SignupSchema;\n\nexport const RegistrationContainer = (): React.ReactElement => {\n  const regState = useSelector<AppRootStateType, initRegistrationStateType>(\n    state => state.registration,\n  );\n  const isAuth = useSelector<AppRootStateType, boolean>(state => state.app.isAuth);\n  const dispatch = useDispatch();\n  const callback = (email: string, password: string): void => {\n    dispatch(RegistrationThunk(email, password));\n  };\n  const { Info, Error, textInfo, textError } = useSelector<\n    AppRootStateType,\n    initErrorStateType\n  >(state => state.error);\n  if (isAuth) {\n    return <Navigate to={PROFILE_ROUTE} />;\n  }\n  return (\n    <Registration\n      Info={Info}\n      Error={Error}\n      textError={textError}\n      textInfo={textInfo}\n      callback={(email, password) => callback(email, password)}\n      SignupSchema={SignupSchema}\n      isAuth={isAuth}\n      regState={regState}\n    />\n  );\n};\n","import { AxiosResponse } from 'axios';\n\nimport { axiosInst } from '../../../n1-main/m3-dal/apiConfig';\nimport { ApiResponseTypes } from '../../../n1-main/m3-dal/ApiResponseTypes';\n\nimport { getPacksCommonRequestParamsType } from './CardPacksThunk';\nimport { CardInPackType, CardPacksType } from './types';\n\ntype cardsPackType = {\n  name: string;\n  path: string;\n  grade: number;\n  shots: number;\n  rating: number;\n  deckCover: string;\n  private: boolean;\n  type: string;\n  _id?: string;\n};\nexport type UpdatedCardsPack = {\n  cardsCount: number;\n  created: string;\n  deckCover: string;\n  grade: number;\n  name: string;\n  path: string;\n  private: false;\n  rating: number;\n  shots: number;\n  type: string;\n  updated: string;\n  __v: number;\n  _id: string;\n};\ntype DataUpdatePackName = {\n  token: string;\n  tokenDeathTime: string;\n  updatedCardsPack: UpdatedCardsPack;\n};\ntype CardsUpdateNameType = {\n  _id: string;\n  name: string;\n};\n\nexport const cardPacksAPI = {\n  getCardPacks: (getPacksCommonRequestParams: getPacksCommonRequestParamsType) =>\n    axiosInst.get<any, ApiResponseTypes<CardPacksType>>('cards/pack', {\n      params: getPacksCommonRequestParams,\n    }),\n  createCardPack: (name?: string) => {\n    const cardsPack: cardsPackType = {\n      name: 'no Name',\n      path: '/master',\n      grade: 0,\n      shots: 0,\n      rating: 0,\n      deckCover: 'url or base64',\n      private: false,\n      type: 'pack',\n    };\n    if (name) {\n      cardsPack.name = name;\n    }\n    return axiosInst.post<\n      cardsPackType,\n      AxiosResponse<{\n        newCardsPack: CardInPackType;\n        token: string;\n        tokenDeathTime: number;\n      }>\n    >('cards/pack', {\n      cardsPack,\n    });\n  },\n  deleteCardsPacks: (id: string) =>\n    axiosInst.delete('cards/pack', {\n      params: { id },\n    }),\n  changePackName: (_id: string, name: string) =>\n    axiosInst.put<CardsUpdateNameType, ApiResponseTypes<DataUpdatePackName>>(\n      'cards/pack',\n      {\n        cardsPack: { _id, name },\n      },\n    ),\n};\n","export const SET_CARD_PACKS = '@@PACKS_REDUCER/SET_CARD_PACKS';\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle } from '../../../n1-main/m2-bll/app-reducer';\nimport { setError } from '../../../n1-main/m2-bll/ErrorReducer';\n\nimport { cardPacksAPI } from './CardsPackAPI';\nimport { SET_CARD_PACKS } from './consts';\nimport { CardInPackType, CardPacksType } from './types';\n\nconst initCardPacksState = {\n  cardPacks: [\n    {\n      _id: '',\n      user_id: '',\n      user_name: '',\n      private: false,\n      name: '',\n      path: '',\n      cardsCount: 0,\n      grade: 0,\n      shots: 0,\n      rating: 0,\n      type: '',\n      created: '',\n      updated: '',\n      __v: 0,\n    },\n  ],\n  token: '',\n  cardPacksTotalCount: 0,\n  maxCardsCount: 12,\n  minCardsCount: 0,\n  page: 1,\n  pageCount: 10,\n  disabled: false,\n  filter: '',\n};\n\nexport const CardPacksReducer = (\n  state: CardPacksType = initCardPacksState,\n  action: ActionTypes,\n): CardPacksType => {\n  switch (action.type) {\n    case SET_CARD_PACKS:\n    case 'SET-PAGE':\n    case 'SET-FILTER':\n    case 'SET-DISABLED': {\n      return { ...state, ...action.payload };\n    }\n    case 'ADD-PACK': {\n      return {\n        ...state,\n        cardPacks: [...state.cardPacks!, { ...action.newCardsPack }],\n      };\n    }\n    case 'DELETE-PACK': {\n      return {\n        ...state,\n        cardPacks: state.cardPacks!.filter(element => element._id !== action.id),\n      };\n    }\n    case 'CHANGE-PACK-NAME': {\n      return {\n        ...state,\n        cardPacks: state.cardPacks!.map(el =>\n          el._id === action.id ? { ...el, name: action.name } : el,\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const SetCardPacksAC = (payload: CardPacksType) =>\n  ({ type: SET_CARD_PACKS, payload } as const);\nexport const SetPagePacksAC = (page: number) =>\n  ({ type: 'SET-PAGE', payload: { page } } as const);\nexport const SetDisabledPacksAC = (disabled: boolean) =>\n  ({ type: 'SET-DISABLED', payload: { disabled } } as const);\nexport const SetFilterPacksAC = (filter: string) =>\n  ({ type: 'SET-FILTER', payload: { filter } } as const);\n\nexport const DeletePackAC = (id: string) => ({ type: 'DELETE-PACK', id } as const);\nexport const ChangePackNameAC = (id: string, name: string) =>\n  ({ type: 'CHANGE-PACK-NAME', id, name } as const);\nexport const AddPackAC = (newCardsPack: CardInPackType) =>\n  ({ type: 'ADD-PACK', newCardsPack } as const);\n\nexport type CardPacksActionTypes = ReturnType<typeof SetCardPacksAC>;\nexport type SetPagePacksACType = ReturnType<typeof SetPagePacksAC>;\nexport type SetDisabledPacksACType = ReturnType<typeof SetDisabledPacksAC>;\nexport type DeletePackACType = ReturnType<typeof DeletePackAC>;\nexport type AddPackACType = ReturnType<typeof AddPackAC>;\nexport type ChangePackNameType = ReturnType<typeof ChangePackNameAC>;\nexport type SetFilterPacksACType = ReturnType<typeof SetFilterPacksAC>;\n\nexport const DeletePackThunk = (id: string) => (dispatch: Dispatch) => {\n  dispatch(SetDisabledPacksAC(true));\n  dispatch(preloaderToggle(true));\n  cardPacksAPI\n    .deleteCardsPacks(id)\n    .then(resp => {\n      dispatch(DeletePackAC(resp.data.deletedCardsPack._id));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(setError(true, err.response.data.error));\n      }\n    })\n    .finally(() => {\n      dispatch(preloaderToggle(false));\n      dispatch(SetDisabledPacksAC(false));\n    });\n};\n\nexport const ChangePackNameThunk = (id: string, name: string) => (dispatch: Dispatch) => {\n  dispatch(SetDisabledPacksAC(true));\n  cardPacksAPI\n    .changePackName(id, name)\n    .then(resp => {\n      dispatch(\n        ChangePackNameAC(resp.data.updatedCardsPack._id, resp.data.updatedCardsPack.name),\n      );\n      dispatch(SetDisabledPacksAC(false));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(SetDisabledPacksAC(false));\n      }\n    });\n};\n\nexport const AddPackThunk = (name?: string) => (dispatch: Dispatch) => {\n  dispatch(SetDisabledPacksAC(true));\n  dispatch(preloaderToggle(true));\n  cardPacksAPI\n    .createCardPack(name)\n    .then(resp => {\n      dispatch(AddPackAC(resp.data.newCardsPack));\n      dispatch(SetDisabledPacksAC(false));\n    })\n    .catch(err => {\n      if (axios.isAxiosError(err) && err.response) {\n        dispatch(SetDisabledPacksAC(false));\n      }\n    })\n    .finally(() => dispatch(preloaderToggle(false)));\n};\n\ntype ActionTypes =\n  | CardPacksActionTypes\n  | SetPagePacksACType\n  | SetDisabledPacksACType\n  | DeletePackACType\n  | AddPackACType\n  | SetFilterPacksACType\n  | ChangePackNameType;\n","import React, { ReactElement } from 'react';\n\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { SetFilterPacksAC } from './PacksReducer';\n\ntype SortButtonPropsType = {\n  sortTypeUp: string;\n  sortTypeDown: string;\n};\nexport const SortButtons = ({\n  sortTypeUp,\n  sortTypeDown,\n}: SortButtonPropsType): ReactElement => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n  const sortUpHandler = (event: React.MouseEvent<HTMLElement>): void => {\n    switch (event.currentTarget.id) {\n      case 'sortByCardsCountUp': {\n        dispatch(SetFilterPacksAC('1cardsCount'));\n        break;\n      }\n      case 'sortByNameUp': {\n        dispatch(SetFilterPacksAC('0name'));\n        break;\n      }\n      case 'sortByUpdatedUp': {\n        dispatch(SetFilterPacksAC('1updated'));\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const sortDownHandler = (event: React.MouseEvent<HTMLElement>): void => {\n    switch (event.currentTarget.id) {\n      case 'sortByCardsCountDown': {\n        console.log('sortByCardsCountDown');\n        dispatch(SetFilterPacksAC('0cardsCount'));\n        break;\n      }\n      case 'sortByNameDown': {\n        console.dir('sortByNameDown');\n        dispatch(SetFilterPacksAC('1name'));\n        break;\n      }\n      case 'sortByUpdatedDown': {\n        dispatch(SetFilterPacksAC('0updated'));\n        break;\n      }\n      default:\n        break;\n    }\n  };\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: '10px',\n      }}\n    >\n      <button\n        disabled={isLoading}\n        id={sortTypeUp}\n        onClick={sortUpHandler}\n        className=\"btn-sm btn btn-primary\"\n      >\n        up\n      </button>\n      <button\n        disabled={isLoading}\n        id={sortTypeDown}\n        onClick={sortDownHandler}\n        className=\"btn-sm btn btn-primary\"\n      >\n        down\n      </button>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useRef } from 'react';\n\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { EditableSpan } from '../../f0-test/EditableSpan/EditableSpan';\nimport { ModalConfirm } from '../../f0-test/modalWindow/ModalConfirm/ModalConfirm';\nimport { ChangeModalShowStatusAC } from '../../f0-test/modalWindow/ModalConfirm/ModuleConfirmReducer';\n\nimport { AddPackThunk, ChangePackNameThunk, DeletePackThunk } from './PacksReducer';\nimport { SortButtons } from './SortPacks';\nimport { ITableModel } from './TableCardPacks';\nimport { CardInPackType } from './types';\n\nexport const CardTableModel = (): ITableModel[] => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const searchValue = useRef<string>();\n  const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n  const ChangeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n    searchValue.current = event.currentTarget.value;\n  };\n  const onClickHandler = (): void => {\n    dispatch(AddPackThunk(searchValue.current));\n  };\n  const onClickHandlerCards = (d: CardInPackType): void => {\n    navigate(/cards/ + d._id);\n  };\n\n  const onClickHandlerPackNameChange = (id: string, packName: string): void => {\n    dispatch(ChangePackNameThunk(id, packName));\n  };\n  const onClickHandlerDeletePack = (): void => {\n    dispatch(ChangeModalShowStatusAC(true));\n  };\n  const callBackForDeletePackThunk = (id: string): void => {\n    dispatch(DeletePackThunk(id));\n  };\n\n  return [\n    {\n      title: (i: number) => (\n        <div\n          key={i}\n          style={{\n            width: '75%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <b>Card Packs</b>\n          <SortButtons sortTypeUp=\"sortByNameUp\" sortTypeDown=\"sortByNameDown\" />\n        </div>\n      ),\n\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <ModalConfirm title=\"Pack\" callBack={() => callBackForDeletePackThunk(d._id)} />\n          <EditableSpan\n            name={d.name}\n            thunk={(title: string) => onClickHandlerPackNameChange(d._id, title)}\n          />\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div\n          key={i}\n          style={{\n            width: '75%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <b>Cards Count</b>\n          <SortButtons\n            sortTypeUp=\"sortByCardsCountUp\"\n            sortTypeDown=\"sortByCardsCountDown\"\n          />\n        </div>\n      ),\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          {d.cardsCount}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div\n          key={i}\n          style={{\n            width: '75%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <b>Update Card</b>\n          <SortButtons sortTypeUp=\"sortByUpdatedUp\" sortTypeDown=\"sortByUpdatedDown\" />\n        </div>\n      ),\n      render: (d: CardInPackType, i: number) => (\n        <div key={i} style={{ width: '60%', alignItems: 'center' }}>\n          {d.updated}\n        </div>\n      ),\n    },\n    {\n      title: (i: number) => (\n        <div key={i} style={{ width: '60%' }}>\n          <input\n            className=\"shadow bg-gradient border-primary opacity-75 border-3\"\n            style={{ borderRadius: '5%', padding: '5px' }}\n            onChange={ChangeHandler}\n            type=\"text\"\n            placeholder=\"name\"\n          />\n          {/* <input onChange={ChangeHandler} /> */}\n          <button\n            className=\"btn-sm btn btn-primary\"\n            style={{ marginLeft: '20px', borderRadius: '5%' }}\n            onClick={onClickHandler}\n            disabled={isLoading}\n          >\n            Add new Pack\n          </button>\n        </div>\n      ),\n      render: (d: CardInPackType, i: number) => (\n        <div\n          key={i}\n          style={{ width: '60%', display: 'flex', justifyContent: 'space-between' }}\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-danger\"\n            onClick={() => {\n              onClickHandlerDeletePack();\n            }}\n          >\n            Delete\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            key={d._id}\n            onClick={() => onClickHandlerCards(d)}\n          >\n            Open Pack\n          </button>\n        </div>\n      ),\n    },\n  ];\n};\n","import { ReactElement } from 'react';\n\nimport { Pagination } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nimport { AppRootStateType } from '../../../../n1-main/m2-bll';\n\nimport { createPages } from './createPage';\n\ntype PaginationComponentPropsType = {\n  activePage: number;\n  totalCards: number;\n  pageCardsTotal: number;\n  // disabled: boolean;\n  callback: (currentPage: number) => void;\n};\n\nexport const PaginationComponent = (\n  props: PaginationComponentPropsType,\n): ReactElement => {\n  const disabled = useSelector<AppRootStateType, boolean>(\n    state => state.cardPacks.disabled!,\n  );\n  const { activePage, pageCardsTotal, totalCards } = props;\n  const pageTotalCount: number = Math.ceil(totalCards / pageCardsTotal);\n  const items: Array<number> = [];\n  createPages(items, pageTotalCount, activePage);\n  const onClickHandler = (page: number): void => {\n    props.callback(page);\n    // dispatch(SetPagePacksAC(page));\n  };\n  return (\n    <Pagination>\n      {items.map(page => (\n        <Pagination.Item\n          key={page}\n          onClick={() => onClickHandler(page)}\n          active={page === activePage}\n          disabled={disabled}\n        >\n          {page}\n        </Pagination.Item>\n      ))}\n    </Pagination>\n  );\n};\n","export function createPages(\n  pagesItem: Array<number>,\n  pagesTotalCount: number,\n  activPage: number,\n): void {\n  if (pagesTotalCount > 10) {\n    if (activPage > 5) {\n      for (let i = activPage - 4; i <= activPage + 5; i++) {\n        pagesItem.push(i);\n        if (i === pagesTotalCount) break;\n      }\n    } else {\n      for (let i = 1; i <= 10; i++) {\n        pagesItem.push(i);\n        if (i === pagesTotalCount) break;\n      }\n    }\n  } else {\n    for (let i = 1; i <= pagesTotalCount; i++) {\n      pagesItem.push(i);\n    }\n  }\n}\n","import React, { ChangeEvent, FC, memo, useEffect, useState } from 'react';\n\nimport { AppRootStateType } from 'n1-main/m2-bll';\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nimport { useSearchDebounce } from './SearchDebaunceHook';\n\ntype SearchNamePackType = {\n  callback: (value: string) => void;\n};\nexport const SearchNamePack: FC<SearchNamePackType> = memo(({ callback }) => {\n  const [search, setSearch] = useState<string>('');\n  const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n  const onSearchChangeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n    setSearch(event.currentTarget.value);\n  };\n\n  const debaunceSearch = useSearchDebounce(search, 3000);\n  useEffect(() => {\n    callback(debaunceSearch);\n  }, [debaunceSearch]);\n  return (\n    <Form.Control\n      disabled={isLoading}\n      value={search}\n      onChange={onSearchChangeHandler}\n      type=\"text\"\n      placeholder=\"Enter card pack name for search...\"\n    />\n  );\n});\n","import { useEffect, useState } from 'react';\n\nexport const useSearchDebounce = (value: string, delay: number): string => {\n  // Состояние и сеттер для отложенного значения\n  const [debouncedValue, setDebouncedValue] = useState<string>(value);\n\n  useEffect(\n    () => {\n      // Выставить debouncedValue равным value (переданное значение)\n      // после заданной задержки\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Вернуть функцию очистки, которая будет вызываться каждый раз, когда ...\n      // ... useEffect вызван снова. useEffect будет вызван снова, только если ...\n      // ... value будет изменено (смотри ниже массив зависимостей).\n      // Так мы избегаем изменений debouncedValue, если значение value ...\n      // ... поменялось в рамках интервала задержки.\n      // Таймаут очищается и стартует снова.\n      // Что бы сложить это воедино: если пользователь печатает что-то внутри ...\n      // ... нашего приложения в поле поиска, мы не хотим, чтобы debouncedValue...\n      // ... не менялось до тех пор, пока он не прекратит печатать дольше, чем 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Вызывается снова, только если значение изменится\n    // мы так же можем добавить переменную \"delay\" в массива зависимостей ...\n    // ... если вы собираетесь менять ее динамически.\n    [value],\n  );\n\n  return debouncedValue;\n};\n","import { useEffect, useState } from 'react';\n\nexport const useRangeDebounce = (value: number, delay: number): number => {\n  // Состояние и сеттер для отложенного значения\n  const [debouncedValue, setDebouncedValue] = useState<number>(value);\n\n  useEffect(\n    () => {\n      // Выставить debouncedValue равным value (переданное значение)\n      // после заданной задержки\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Вернуть функцию очистки, которая будет вызываться каждый раз, когда ...\n      // ... useEffect вызван снова. useEffect будет вызван снова, только если ...\n      // ... value будет изменено (смотри ниже массив зависимостей).\n      // Так мы избегаем изменений debouncedValue, если значение value ...\n      // ... поменялось в рамках интервала задержки.\n      // Таймаут очищается и стартует снова.\n      // Что бы сложить это воедино: если пользователь печатает что-то внутри ...\n      // ... нашего приложения в поле поиска, мы не хотим, чтобы debouncedValue...\n      // ... не менялось до тех пор, пока он не прекратит печатать дольше, чем 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Вызывается снова, только если значение изменится\n    // мы так же можем добавить переменную \"delay\" в массива зависимостей ...\n    // ... если вы собираетесь менять ее динамически.\n    [value],\n  );\n\n  return debouncedValue;\n};\n","import React, { ChangeEvent, ReactElement, useEffect, useState } from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initAppStateType } from '../../../n1-main/m2-bll/app-reducer';\n\nimport { useRangeDebounce } from './RangeDebaunceHook';\nimport { CardPacksType } from './types';\n\ntype RangePropsType = {\n  callback: (debauncedMinRangeValue: number, debauncedMaxRangeValue: number) => void;\n};\nexport const SearchRange: React.FC<RangePropsType> = ({ callback }): ReactElement => {\n  const { minCardsCount, maxCardsCount } = useSelector<AppRootStateType, CardPacksType>(\n    state => state.cardPacks,\n  );\n  const { isLoading } = useSelector<AppRootStateType, initAppStateType>(\n    state => state.app,\n  );\n  const [searchedMinValue, setSearchedMinValue] = useState<number>(minCardsCount!);\n  const [searchedMaxValue, setSearchedMaxValue] = useState<number>(maxCardsCount!);\n\n  const changeRangeValue = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.currentTarget.name === 'max') {\n      const max = Number(event.currentTarget.value);\n      setSearchedMaxValue(max);\n    }\n    if (event.currentTarget.name === 'min') {\n      const min = Number(event.currentTarget.value);\n      setSearchedMinValue(min);\n    }\n  };\n  const debauncedMinRangeValue = useRangeDebounce(searchedMinValue, 2000);\n  const debauncedMaxRangeValue = useRangeDebounce(searchedMaxValue, 2000);\n  useEffect(() => {\n    callback(debauncedMinRangeValue, debauncedMaxRangeValue);\n  }, [debauncedMinRangeValue, debauncedMinRangeValue]);\n  return (\n    <Form.Group>\n      <Form.Label>RangeMin {searchedMinValue} </Form.Label>\n      <Form.Range\n        value={searchedMinValue}\n        disabled={isLoading}\n        name=\"min\"\n        onChange={changeRangeValue}\n      />\n      <Form.Label>RangeMax {searchedMaxValue}</Form.Label>\n      <Form.Range\n        value={searchedMaxValue}\n        disabled={isLoading}\n        name=\"max\"\n        onChange={changeRangeValue}\n      />\n    </Form.Group>\n  );\n};\n","import React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Loader } from '../../../n1-main/m1-ui/common/Loader';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initAppStateType } from '../../../n1-main/m2-bll/app-reducer';\n\nimport { CardInPackType, CardPacksType } from './types';\n\nexport interface ITableModel {\n  title: (index: number) => ReactNode;\n  render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\n}\n\ninterface ITableProps {\n  // loading: boolean;\n  // error: string;\n  //\n  // logoutCallback: () => void;\n  model: ITableModel[];\n  // data: any;\n  headerStyle?: CSSProperties;\n  tableStyle?: CSSProperties;\n  rowsStyle?: CSSProperties;\n  rowStyle?: CSSProperties;\n  // disabled: boolean;\n}\n\nexport const TableCardPacks: React.FC<ITableProps> = ({\n  // loading,\n  // error,\n  // logoutCallback,\n  model,\n  // data,\n  headerStyle,\n  tableStyle,\n  rowsStyle,\n  rowStyle,\n  // disabled,\n}): ReactElement => {\n  console.log('CARDTableRender');\n  const data = useSelector<AppRootStateType, CardInPackType[]>(\n    state => state.cardPacks.cardPacks!,\n  );\n  const disabled = useSelector<AppRootStateType, boolean>(\n    state => state.cardPacks.disabled!,\n  );\n  const { isLoading } = useSelector<AppRootStateType, initAppStateType>(\n    state => state.app,\n  );\n  if (isLoading) return <Loader />;\n  return (\n    <div\n      style={{\n        margin: '0 10px',\n        // minHeight: '80vh',\n        display: 'flex',\n        flexFlow: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...tableStyle,\n      }}\n    >\n      <h2>CARD PACKS</h2>\n      {/* {loading /}\n      {/ ? <div style={{color: 'orange'}}>loading...</div> /}\n      {/: error /}\n      {/ ? <div style={{color: 'red'}}>{error}</div> /}\n      {/: <div><br/></div> /}\n      {/ } */}\n      <div\n        style={{\n          border: '1px solid grey',\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          margin: '5px',\n          padding: '10px',\n          background: 'white',\n          ...headerStyle,\n        }}\n      >\n        {model.map((m: ITableModel, index: number) => m.title(index))}\n      </div>\n      {disabled ? (\n        <Loader />\n      ) : (\n        <table\n          className=\"table table-striped\"\n          style={{\n            border: '1px solid grey',\n            width: '100%',\n            margin: '20px',\n            padding: '10px',\n            background: 'white',\n            ...rowsStyle,\n          }}\n        >\n          {data.map((dataItem: any, dataIndex: number) => (\n            <tr\n              key={dataItem._id || dataIndex}\n              style={{\n                padding: '8px',\n                width: '100%',\n                display: 'flex',\n                flexFlow: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n                ...rowStyle,\n              }}\n            >\n              {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\n            </tr>\n          ))}\n        </table>\n      )}\n    </div>\n  );\n};\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { LOGIN_ROUTE } from '../../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../../n1-main/m2-bll';\nimport { initAppStateType } from '../../../n1-main/m2-bll/app-reducer';\nimport { initErrorStateType } from '../../../n1-main/m2-bll/ErrorReducer';\nimport { ModalError } from '../../f0-test/modalWindow/ModalError';\n\nimport { getCardPacksTC } from './CardPacksThunk';\nimport { CardTableModel } from './CardTableModel';\nimport { SetCardPacksAC } from './PacksReducer';\nimport { PaginationComponent } from './pagination/Pagination';\nimport { SearchNamePack } from './SearchNamePack';\nimport { SearchRange } from './SearchRange';\nimport { TableCardPacks } from './TableCardPacks';\nimport { CardPacksType } from './types';\n\nexport const CardPacksContainer = (): ReactElement => {\n  const userId = useSelector<AppRootStateType, string | null>(state => state.profile._id);\n  const {\n    cardPacks,\n    pageCount,\n    cardPacksTotalCount,\n    maxCardsCount,\n    minCardsCount,\n    page,\n    // disabled,\n    filter,\n  } = useSelector<AppRootStateType, CardPacksType>(state => state.cardPacks);\n\n  const { isLoading, isAuth } = useSelector<AppRootStateType, initAppStateType>(\n    state => state.app,\n  );\n\n  const { textError, Error } = useSelector<AppRootStateType, initErrorStateType>(\n    state => state.error,\n  );\n  const dispatch = useDispatch();\n\n  const [searchRange, setSearchRange] = useState<{ min: number; max: number }>({\n    min: minCardsCount!,\n    max: maxCardsCount!,\n  });\n  const [packName, setPackName] = useState<string>('');\n  const [userID, setUserID] = useState<string | null>(null);\n\n  const onlyMeSearchHandler = (checked: boolean): void => {\n    if (checked) {\n      setUserID(userId);\n    } else {\n      setUserID(null);\n    }\n  };\n  const onSetRange = (searchedMinValue: number, searchedMaxValue: number): void => {\n    setSearchRange({ min: searchedMinValue, max: searchedMaxValue });\n  };\n  const { min, max } = searchRange;\n  const setCurrentPageHandler = (value: number): void => {\n    dispatch(SetCardPacksAC({ page: value }));\n  };\n\n  const pageCountHandler = (value: number): void => {\n    dispatch(SetCardPacksAC({ pageCount: value }));\n  };\n\n  useEffect(() => {\n    dispatch(\n      getCardPacksTC({\n        user_id: userID,\n        packName,\n        pageCount,\n        page,\n        min,\n        max,\n        sortPacks: filter,\n      }),\n    );\n  }, [pageCount, page, min, max, packName, userID, filter]);\n  if (!isAuth) {\n    return <Navigate to={LOGIN_ROUTE} />;\n  }\n  return (\n    <div className=\"col-9 align-content-center m-lg-auto\">\n      {Error && <ModalError error={textError} />}\n      <Form.Group\n        className=\"mb-3\"\n        style={{ width: '400px', marginTop: '40px' }}\n        controlId=\"PacksCardTable\"\n      >\n        <SearchNamePack callback={setPackName} />\n        <div\n          style={{\n            marginTop: '20px',\n            width: '1000px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div className=\"form-check form-switch\" style={{ marginTop: '20px' }}>\n            <label\n              className=\"form-check-label text-capitalize bg-gradient bg-info\"\n              htmlFor=\"searchOnlyMePacks\"\n            >\n              Search only me packs\n            </label>\n            <input\n              onChange={e => onlyMeSearchHandler(e.currentTarget.checked)}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              checked={!!userID}\n              id=\"searchOnlyMePacks\"\n              disabled={isLoading}\n            />\n          </div>\n          <div>\n            <select\n              value={pageCount}\n              onChange={e => pageCountHandler(+e.currentTarget.value)}\n              style={{ width: '240px' }}\n              className=\"form-select form-select-sm\"\n              aria-label=\".form-select-sm example\"\n              disabled={isLoading}\n            >\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n              <option value=\"75\">75</option>\n              <option value=\"100\">100</option>\n            </select>\n            <label\n              className=\"form-check-label text-capitalize bg-gradient bg-info\"\n              htmlFor=\"searchOnlyMePacks\"\n            >\n              Select count of packs on page\n            </label>\n          </div>\n        </div>\n      </Form.Group>\n      <SearchRange callback={onSetRange} />\n      <TableCardPacks\n        model={CardTableModel()}\n        // data={cardPacks}\n        // disabled={disabled!}\n        // loading={isLoading}\n      />\n      <PaginationComponent\n        pageCardsTotal={pageCount!}\n        totalCards={cardPacksTotalCount!}\n        activePage={page!}\n        // disabled={disabled!}\n        callback={setCurrentPageHandler}\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nimport { preloaderToggle, setAuth } from '../../../n1-main/m2-bll/app-reducer';\n\nimport { cardPacksAPI } from './CardsPackAPI';\nimport { SetCardPacksAC, SetDisabledPacksAC } from './PacksReducer';\n\n// type ParamThunkType = {\n//   minCards: number,\n//   maxCards: number,\n//   page: number,\n//   packName?: string,\n//   userId?: string,\n// }\n\nexport type getPacksCommonRequestParamsType = {\n  packName?: string | undefined;\n  min?: number;\n  max?: number;\n  sortPacks?: string;\n  page?: number;\n  pageCount?: number;\n  // eslint-disable-next-line camelcase\n  user_id?: string | null;\n};\n\nexport const getCardPacksTC =\n  (getPacksCommonRequestParams: getPacksCommonRequestParamsType) =>\n  (dispatch: Dispatch) => {\n    dispatch(preloaderToggle(true));\n    dispatch(SetDisabledPacksAC(true));\n    cardPacksAPI\n      .getCardPacks(getPacksCommonRequestParams)\n      .then(res => {\n        dispatch(SetCardPacksAC(res.data));\n        dispatch(SetDisabledPacksAC(false));\n        dispatch(preloaderToggle(false));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          console.log(err.response.data.error);\n          dispatch(setAuth(false));\n          dispatch(SetDisabledPacksAC(false));\n        }\n      });\n  };\n","import axios from 'axios';\nimport { preloaderToggle } from 'n1-main/m2-bll/app-reducer';\nimport { setError } from 'n1-main/m2-bll/ErrorReducer';\nimport { UpdateGradeAC } from 'n2-features/f1-table/cards/CardsReducer';\nimport { Dispatch } from 'redux';\n\nimport { cardsAPI } from '../../f1-table/cards/CardsAPI';\n\nimport { initPlayCardStateType } from './types';\n\nconst initPlayCardState = {\n  cards: null,\n  cardsTotalCount: 60,\n  maxGrade: 6,\n  minGrade: 0,\n};\n\nexport const PlayCardReducer = (\n  // eslint-disable-next-line\n  state: initPlayCardStateType = initPlayCardState,\n  action: PlayCardActionTypes,\n): initPlayCardStateType => {\n  switch (action.type) {\n    case 'SET-PLAY-CARD': {\n      return { ...state, ...action.data };\n    }\n    case 'UPDATE-GRADE-CARD': {\n      if (state.cards) {\n        return {\n          ...state,\n          cards: state.cards.map(el =>\n            el._id === action.card._id\n              ? {\n                  ...el,\n                  grade: action.card.grade,\n                }\n              : el,\n          ),\n        };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setPlayCardStateAC = (data: initPlayCardStateType) =>\n  ({\n    type: 'SET-PLAY-CARD',\n    data,\n  } as const);\nexport const SetPlayCardThunk =\n  (id: string, pageCount: number) => (dispatch: Dispatch) => {\n    dispatch(preloaderToggle(true));\n    cardsAPI\n      .getAllCards(id, pageCount)\n      .then(resp => {\n        const data = {\n          cards: resp.data.cards,\n          cardsTotalCount: resp.data.cardsTotalCount,\n          maxGrade: resp.data.maxGrade,\n          minGrade: resp.data.minGrade,\n        };\n        dispatch(setPlayCardStateAC(data));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          console.log(err);\n        }\n      })\n      .finally(() => {\n        dispatch(preloaderToggle(false));\n      });\n  };\nexport const UpgradeCardGradeThunk =\n  (id: string, grade: number) => (dispatch: Dispatch) => {\n    dispatch(preloaderToggle(true));\n    const updateGradeCard = {\n      _id: id,\n      grade,\n    };\n    cardsAPI\n      .updateCardGrade(updateGradeCard)\n      .then(resp => {\n        dispatch(UpdateGradeAC(resp.data.updatedCard));\n      })\n      .catch(err => {\n        if (axios.isAxiosError(err) && err.response) {\n          console.log(err.response.data);\n          dispatch(setError(true, err.response.data.error));\n        }\n      })\n      .finally(() => {\n        dispatch(preloaderToggle(false));\n      });\n  };\n\ntype setPlayCardStateACType = ReturnType<typeof setPlayCardStateAC>;\ntype UpdateGradeCardACType = ReturnType<typeof UpdateGradeAC>;\ntype PlayCardActionTypes = setPlayCardStateACType | UpdateGradeCardACType;\n","import React from 'react';\n\nexport type GradeButtonType = {\n  gradeName: string;\n  callBack: (grade: number) => void;\n  gradeNumber: number;\n};\n\nexport const GradeButton = (props: GradeButtonType): React.ReactElement => {\n  const { gradeName, gradeNumber, callBack } = props;\n  return (\n    <button\n      onClick={() => callBack(gradeNumber)}\n      type=\"button\"\n      className=\"btn btn-warning\"\n    >\n      {gradeName}\n    </button>\n  );\n};\n","import React, { FC, useState } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { AppRootStateType } from '../../n1-main/m2-bll';\nimport { initErrorStateType } from '../../n1-main/m2-bll/ErrorReducer';\nimport { ModalError } from '../f0-test/modalWindow/ModalError';\nimport { CardType } from '../f1-table/cards/CardsReducer';\n\nimport { UpgradeCardGradeThunk } from './Bll/PlayCardReducer';\nimport { GradeButton } from './GradeButton';\nimport style from './playGround.module.scss';\n\ntype propsCardPlayType = {\n  card: CardType;\n  callback: () => void;\n};\n\nexport const PlayCard: FC<propsCardPlayType> = ({\n  card,\n  callback,\n}): React.ReactElement => {\n  const dispatch = useDispatch();\n  const [flipCard, setFlipCard] = useState<boolean>(false);\n  const navigate = useNavigate();\n  const onHandlerGradeUpdate = (id: string, grade: number): void => {\n    dispatch(UpgradeCardGradeThunk(id, grade));\n  };\n  const { textError, Error } = useSelector<AppRootStateType, initErrorStateType>(\n    state => state.error,\n  );\n  return (\n    <div className={style.cardShowContainer}>\n      {Error && <ModalError error={textError} />}\n      <div className={style.flipBox}>\n        <div\n          className={\n            flipCard ? `${style.cardFront} ${style.cardFrontFlip}` : style.cardFront\n          }\n        >\n          <p className={style.titleQuestion}>{card.question}</p>\n\n          <div className={style.ratingGradeWrap}>\n            <span className={style.cardGrade}>Grade Card : {card.grade}</span>\n            <div className={style.ratingButContainer}>\n              <GradeButton\n                gradeName=\"1\"\n                gradeNumber={1}\n                callBack={grade => onHandlerGradeUpdate(card._id!, grade)}\n              />\n              <GradeButton\n                gradeName=\"2\"\n                gradeNumber={2}\n                callBack={grade => onHandlerGradeUpdate(card._id!, grade)}\n              />\n              <GradeButton\n                gradeName=\"3\"\n                gradeNumber={3}\n                callBack={grade => onHandlerGradeUpdate(card._id!, grade)}\n              />\n              <GradeButton\n                gradeName=\"4\"\n                gradeNumber={4}\n                callBack={grade => onHandlerGradeUpdate(card._id!, grade)}\n              />\n              <GradeButton\n                gradeName=\"5\"\n                gradeNumber={5}\n                callBack={grade => onHandlerGradeUpdate(card._id!, grade)}\n              />\n            </div>\n          </div>\n\n          <div className={style.butContainer}>\n            <Button variant=\"secondary\" onClick={() => navigate(-1)}>\n              Exit game\n            </Button>\n\n            <button\n              onClick={() => setFlipCard(true)}\n              type=\"button\"\n              className=\"btn btn-warning\"\n            >\n              Show Answer\n            </button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                callback();\n              }}\n            >\n              Next Card\n            </Button>\n          </div>\n        </div>\n        <div\n          className={\n            flipCard ? style.cardBack : `${style.cardBack} ${style.cardBackFlip}`\n          }\n        >\n          <h2>{card.answer}</h2>\n          <button\n            onClick={() => setFlipCard(false)}\n            type=\"button\"\n            className=\"btn btn-warning\"\n          >\n            Back to the question\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useRef, useState } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\n\nimport { Loader } from '../../n1-main/m1-ui/common/Loader';\nimport { LOGIN_ROUTE } from '../../n1-main/m1-ui/routes/consts';\nimport { AppRootStateType } from '../../n1-main/m2-bll';\nimport { initAppStateType } from '../../n1-main/m2-bll/app-reducer';\nimport { CardType } from '../f1-table/cards/CardsReducer';\n\nimport { SetPlayCardThunk } from './Bll/PlayCardReducer';\nimport { pseudoRandom } from './function/pseudoRandom';\nimport { PlayCard } from './PlayCard';\nimport style from './playGround.module.scss';\n\nexport const PlayGround: FC = (): React.ReactElement => {\n  const dispatch = useDispatch();\n  const param = useParams();\n  const navigate = useNavigate();\n  const { isAuth, isAppInitializated } = useSelector<AppRootStateType, initAppStateType>(\n    state => state.app,\n  );\n  const loading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n  useEffect(() => {\n    if (isAuth) {\n      if (param.idPack) {\n        dispatch(SetPlayCardThunk(param.idPack, 1000));\n      }\n    }\n  }, [isAuth]);\n  const card = pseudoRandom(\n    useSelector<AppRootStateType, Array<CardType> | null>(state => state.playCard.cards),\n  );\n  if (!card || !param.idPack) {\n    return <Loader />;\n  }\n\n  if (!isAppInitializated) {\n    return <Loader />;\n  }\n\n  if (!isAuth) {\n    return <Navigate to={LOGIN_ROUTE} />;\n  }\n  const render = loading ? (\n    <Loader />\n  ) : (\n    <PlayCard\n      card={card}\n      callback={() => {\n        if (param.idPack) {\n          dispatch(SetPlayCardThunk(param.idPack, 1000));\n        }\n      }}\n    />\n  );\n  return render;\n};\n","import { CardType } from '../../f1-table/cards/CardsReducer';\n\nexport function pseudoRandom(arr: Array<CardType> | null): CardType | null {\n  if (!arr) {\n    return null;\n  }\n  const RandomArr = arr.map(element => ({\n    ...element,\n    grade: (6 - element.grade!) ** 2,\n  }));\n  const result = RandomArr.reduce((acc, item) => item.grade + acc, 0);\n  let i = 0;\n  let sum = 0;\n  const random = Math.floor(Math.random() * result);\n  while (sum <= random) {\n    sum += RandomArr[i].grade;\n    i += 1;\n  }\n  return arr[i - 1];\n}\n","import React from 'react';\n\nimport {\n  Demonstration,\n  ForgetPasswordContainer,\n  LoginContainer,\n  NewPassword,\n  NotFound,\n  Profile,\n} from 'n2-features';\nimport { CardsContainer } from 'n2-features/f1-table/cards/CardsContainer';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { RegistrationContainer } from '../../../n2-features/f0-test/Registration/RegistrationContainer';\nimport { CardPacksContainer } from '../../../n2-features/f1-table/packs/CardPacksContainer';\nimport { PlayGround } from '../../../n2-features/gamePlay/PlayGround';\n\nimport {\n  BASE_ROUTE,\n  CARD_PACKS_ROUTE,\n  CARDS_ROUTE,\n  DEMONSTRATION_ROUTE,\n  LOGIN_ROUTE,\n  NEW_PASS_ROUTE,\n  NOT_FOUND_ROUTE,\n  PROFILE_ROUTE,\n  RECOVERY_PASS_ROUTE,\n  RECOVERYPASSWORD_ROUTE,\n  REG_ROUTE,\n  PLAY_CARDS_ROUTE,\n} from './consts';\n\nexport const publicRoutes = [\n  {\n    path: BASE_ROUTE,\n    component: <Profile />,\n  },\n  {\n    path: LOGIN_ROUTE,\n    component: <LoginContainer />,\n  },\n  {\n    path: REG_ROUTE,\n    component: <RegistrationContainer />,\n  },\n  {\n    path: PROFILE_ROUTE,\n    component: <Profile />,\n  },\n  {\n    path: RECOVERY_PASS_ROUTE,\n    component: <ForgetPasswordContainer />,\n  },\n  {\n    path: NEW_PASS_ROUTE,\n    component: <NewPassword />,\n  },\n  {\n    path: DEMONSTRATION_ROUTE,\n    component: <Demonstration />,\n  },\n  {\n    path: RECOVERYPASSWORD_ROUTE,\n    component: <NewPassword />,\n  },\n  {\n    path: NOT_FOUND_ROUTE,\n    component: <NotFound />,\n  },\n  {\n    path: CARD_PACKS_ROUTE,\n    component: <CardPacksContainer />,\n  },\n  {\n    path: CARDS_ROUTE,\n    component: <CardsContainer />,\n  },\n  {\n    path: PLAY_CARDS_ROUTE,\n    component: <PlayGround />,\n  },\n];\n\nexport const AppRoutes = (): React.ReactElement => (\n  <Routes>\n    {publicRoutes.map(({ path, component }) => (\n      <Route key={path} path={path} element={component} />\n    ))}\n  </Routes>\n);\n","import React, { useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { AppRootStateType } from '../../m2-bll';\nimport { publicRoutes } from '../routes';\nimport {\n  CARD_PACKS_ROUTE,\n  LOGIN_ROUTE,\n  NEW_PASS_ROUTE,\n  PROFILE_ROUTE,\n  REG_ROUTE,\n} from '../routes/consts';\n\nimport style from './Header.module.scss';\n\nexport const Header = (): React.ReactElement => {\n  const [flag, setFlag] = useState<boolean>(false);\n  const isAuth = useSelector((state: AppRootStateType) => state.app.isAuth);\n\n  const packLogic = isAuth ? {} : { display: 'none' };\n  const variate = publicRoutes.map(({ path }) =>\n    isAuth && path === LOGIN_ROUTE ? (\n      ''\n    ) : (\n      <NavLink className={style.Link} key={path} to={path}>\n        {' '}\n        <span style={{ padding: '5px' }}>{path}</span>\n      </NavLink>\n    ),\n  );\n\n  return (\n    <div>\n      <div className={style.mainNav}>\n        <div className={style.DropButton}>\n          <div className={style.middleLine} />\n        </div>{' '}\n        <NavLink className={style.mainNavLink} to={isAuth ? LOGIN_ROUTE : PROFILE_ROUTE}>\n          {isAuth ? 'Profile' : 'Login'}\n        </NavLink>\n        <NavLink\n          style={packLogic}\n          className={style.mainNavLink}\n          to={isAuth ? CARD_PACKS_ROUTE : ''}\n        >\n          Cards Pack\n        </NavLink>\n        <NavLink className={style.mainNavLink} to={isAuth ? NEW_PASS_ROUTE : REG_ROUTE}>\n          {isAuth ? 'Change Password' : 'Registration'}\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { AppRootStateType } from '../m2-bll';\n\nimport { Loader } from './common/Loader';\nimport { Header } from './header';\nimport { AppRoutes } from './routes';\n\nexport const Main = (): React.ReactElement => {\n  const isAppInitializated = useSelector<AppRootStateType, boolean>(\n    state => state.app.isAppInitializated,\n  );\n\n  if (!isAppInitializated) {\n    return <Loader />;\n  }\n  return (\n    <div>\n      <Header />\n      <AppRoutes />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport './App.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppRootStateType } from '../m2-bll';\nimport { authMeThunk } from '../m2-bll/AppThunks';\n\nimport { Loader } from './common/Loader';\nimport { Main } from './Main';\n\nexport const App = (): React.ReactElement => {\n  const isloading = useSelector<AppRootStateType, boolean>(state => state.app.isLoading);\n\n  // eslint-disable-next-line consistent-return\n  document.onkeydown = function gg(e) {\n    if (isloading && e.keyCode === 116) return false;\n  };\n  const utterance = new SpeechSynthesisUtterance(\n    'это игра про карточки приятной игры но в начале зарегестрируйтесь или войдите в профиль ня ня ня ня ',\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    window.speechSynthesis.speak(utterance);\n    dispatch(authMeThunk());\n  }, []);\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n};\n","import { ForGetPasswordReducer } from 'n2-features/f0-test/ForgetPassword';\nimport { RecoveryPasswordReducer } from 'n2-features/f0-test/RecoveryPass';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { LoginReducer } from '../../n2-features/f0-test';\nimport { ModalConfirmReducer } from '../../n2-features/f0-test/modalWindow/ModalConfirm/ModuleConfirmReducer';\nimport { ProfileReducer } from '../../n2-features/f0-test/Profile/Profile-Reducer';\nimport { RegistrationReducer } from '../../n2-features/f0-test/Registration/RegistrationReducer';\nimport { CardsReducer } from '../../n2-features/f1-table/cards/CardsReducer';\nimport { CardPacksReducer } from '../../n2-features/f1-table/packs/PacksReducer';\nimport { PlayCardReducer } from '../../n2-features/gamePlay/Bll/PlayCardReducer';\n\nimport { AppReducer } from './app-reducer';\nimport { ErrorReducer } from './ErrorReducer';\n\nconst rootReducer = combineReducers({\n  app: AppReducer,\n  error: ErrorReducer,\n  login: LoginReducer,\n  profile: ProfileReducer,\n  forgetPassword: ForGetPasswordReducer,\n  registration: RegistrationReducer,\n  recoveryPasswordReducer: RecoveryPasswordReducer,\n  cardPacks: CardPacksReducer,\n  cards: CardsReducer,\n  modalConfirm: ModalConfirmReducer,\n  playCard: PlayCardReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n\n// @ts-ignore\nwindow.store = store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './n1-main/m1-ui/App';\nimport { store } from './n1-main/m2-bll';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardShowContainer\":\"playGround_cardShowContainer__2xnOR\",\"flipBox\":\"playGround_flipBox__3dPJf\",\"cardFrontFlip\":\"playGround_cardFrontFlip__qnmX3\",\"cardFront\":\"playGround_cardFront__3Rama\",\"titleQuestion\":\"playGround_titleQuestion__1kqlf\",\"ratingGradeWrap\":\"playGround_ratingGradeWrap__2bwsi\",\"ratingButContainer\":\"playGround_ratingButContainer__1tlAd\",\"butContainer\":\"playGround_butContainer__2h4JB\",\"cardBack\":\"playGround_cardBack__1rUaz\",\"cardBackFlip\":\"playGround_cardBackFlip__2fQ-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile-style_profileContainer__2A5aG\",\"avatarContainer\":\"profile-style_avatarContainer__2QgYz\",\"boxAvatar\":\"profile-style_boxAvatar__2rJ6e\",\"boxUploadButton\":\"profile-style_boxUploadButton__30Sdu\",\"uploadButton\":\"profile-style_uploadButton__HxsC4\",\"avatar\":\"profile-style_avatar__3x_qd\",\"descriptionContainer\":\"profile-style_descriptionContainer__290qf\",\"descriptionBox\":\"profile-style_descriptionBox__3frER\",\"titleName\":\"profile-style_titleName__2O7Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Header_dropdown__XpOZv\",\"DropButton\":\"Header_DropButton__1dL5C\",\"middleLine\":\"Header_middleLine__iQDOL\",\"DropdownContent\":\"Header_DropdownContent__3278E\",\"Link\":\"Header_Link__11r3f\",\"mainNav\":\"Header_mainNav__32Yl_\",\"mainNavLink\":\"Header_mainNavLink__1yL2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2vf1J\",\"red\":\"SuperButton_red__12zn9\",\"button\":\"SuperButton_button__3mVpS\",\"blink\":\"SuperButton_blink__WVCCC\"};"],"sourceRoot":""}