{"version":3,"sources":["n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f0-test/Login.tsx","n2-features/f0-test/Registration.tsx","n2-features/f0-test/Profile.tsx","n2-features/f0-test/NotFound.tsx","n2-features/f0-test/RecoveryPass.tsx","n2-features/f0-test/NewPassword.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n2-features/f0-test/Demonstration.tsx","n1-main/m1-ui/routes/AppRoutes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Registration","Profile","NotFound","RecoveryPass","NewPassword","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","errorInput","type","e","currentTarget","value","key","SuperButton","red","finalClassName","default","button","SuperCheckbox","onChangeChecked","children","checkbox","lable","checked","Demonstration","placeholder","publicRoutes","path","component","AppRoutes","map","element","Header","style","marginBottom","to","padding","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c73a6a80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3OY5S\",\"errorInput\":\"SuperInputText_errorInput__1f76Q\",\"error\":\"SuperInputText_error__2MZjT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2vf1J\",\"red\":\"SuperButton_red__12zn9\",\"button\":\"SuperButton_button__3mVpS\",\"blink\":\"SuperButton_blink__WVCCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"SuperCheckbox_lable__35r43\",\"checkbox\":\"SuperCheckbox_checkbox__o3HQo\",\"spanClassName\":\"SuperCheckbox_spanClassName__UCmog\"};","import React from 'react';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>LOGIN COMPONENT</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>\r\n            <h1>REGISTRATION COMPONENT</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            <h1>PROFILE COMPONENT</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>NOT FOUND 404</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const RecoveryPass = () => {\r\n    return (\r\n        <div>\r\n            <h1>RECOVERY PASSWORD COMPONENT</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>NEW PASSWORD COMPONENT</h1>\r\n        </div>\r\n    );\r\n};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = Omit<DefaultInputPropsType, 'type'> & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.superInput} ${className ? className : ''} ${error ? s.errorInput : ''}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error ? <span className={finalSpanClassName}>{error}</span> : <span className={finalSpanClassName}></span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className} ${s.button}`\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.lable}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from 'react';\r\nimport SuperInputText from \"../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const Demonstration = () => {\r\n    return (\r\n        <div>\r\n            <h1>DEMONSTRATION COMPONENT</h1>\r\n            <SuperInputText placeholder={'input demonstration'}/>\r\n            <SuperCheckbox />\r\n            <SuperButton>button</SuperButton>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f0-test/Login\";\r\nimport {Registration} from \"../../../n2-features/f0-test/Registration\";\r\nimport {Profile} from \"../../../n2-features/f0-test/Profile\";\r\nimport {NotFound} from \"../../../n2-features/f0-test/NotFound\";\r\nimport {RecoveryPass} from \"../../../n2-features/f0-test/RecoveryPass\";\r\nimport {NewPassword} from \"../../../n2-features/f0-test/NewPassword\";\r\nimport {Demonstration} from \"../../../n2-features/f0-test/Demonstration\";\r\n\r\nexport const NOT_FOUND_ROUTE = '*'\r\nexport const LOGIN_ROUTE = 'login'\r\nexport const REG_ROUTE = 'register'\r\nexport const PROFILE_ROUTE = 'profile'\r\nexport const RECOVERY_PASS_ROUTE = 'recovery'\r\nexport const NEW_PASS_ROUTE = 'newpass'\r\nexport const DEMONSTRATION_ROUTE = 'demonstration'\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: NOT_FOUND_ROUTE,\r\n        component: <NotFound />\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        component: <Login />\r\n    },\r\n    {\r\n        path: REG_ROUTE,\r\n        component: <Registration />\r\n    },\r\n    {\r\n        path: PROFILE_ROUTE,\r\n        component: <Profile />\r\n    },\r\n    {\r\n        path: RECOVERY_PASS_ROUTE,\r\n        component: <RecoveryPass />\r\n    },\r\n    {\r\n        path: NEW_PASS_ROUTE,\r\n        component: <NewPassword />\r\n    },\r\n    {\r\n        path: DEMONSTRATION_ROUTE,\r\n        component: <Demonstration />\r\n    },\r\n]\r\n\r\nexport const AppRoutes = () => {\r\n    return (\r\n        <Routes>\r\n            {publicRoutes.map(({path, component}) =>\r\n                <Route key={path} path={path} element={component}/>\r\n            )}\r\n        </Routes>\r\n    );\r\n};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {publicRoutes} from \"../routes/AppRoutes\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div style={{marginBottom: '20px'}}>\r\n            {publicRoutes.map(({path}) =>\r\n                <NavLink to={path}>\r\n                    <span style={{padding: '5px'}}>{path}</span>\r\n                </NavLink>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Header} from \"./header/Header\";\r\nimport {AppRoutes} from \"./routes/AppRoutes\";\r\n\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <AppRoutes/>\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport './App.css';\nimport {Main} from \"./Main\";\nimport {HashRouter} from \"react-router-dom\";\n\nexport const App = () => {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Main/>\n            </div>\n        </HashRouter>\n    )\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}